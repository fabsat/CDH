

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Mar 11 16:23:40 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0088                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  0088                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0088                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  000E                     	;# 
   357  000F                     	;# 
   358  0010                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0013                     	;# 
   362  0014                     	;# 
   363  0015                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  001D                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  0081                     	;# 
   377  0085                     	;# 
   378  0086                     	;# 
   379  0087                     	;# 
   380  0088                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0008                     	;# 
   470  0009                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  000E                     	;# 
   477  000F                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001B                     	;# 
   492  001C                     	;# 
   493  001D                     	;# 
   494  001E                     	;# 
   495  001F                     	;# 
   496  0081                     	;# 
   497  0085                     	;# 
   498  0086                     	;# 
   499  0087                     	;# 
   500  0088                     	;# 
   501  0089                     	;# 
   502  008C                     	;# 
   503  008D                     	;# 
   504  008E                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0098                     	;# 
   510  0099                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  009F                     	;# 
   515  010C                     	;# 
   516  010D                     	;# 
   517  010E                     	;# 
   518  010F                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  000E                     	;# 
   537  000F                     	;# 
   538  0010                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0013                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  001D                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  0081                     	;# 
   557  0085                     	;# 
   558  0086                     	;# 
   559  0087                     	;# 
   560  0088                     	;# 
   561  0089                     	;# 
   562  008C                     	;# 
   563  008D                     	;# 
   564  008E                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0094                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  009F                     	;# 
   575  010C                     	;# 
   576  010D                     	;# 
   577  010E                     	;# 
   578  010F                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581                           
   582                           	psect	strings
   583  0003                     __pstrings:	
   584  0003                     stringtab:	
   585  0003                     __stringtab:	
   586  0003                     stringcode:	
   587                           ;	String table - string pointers are 1 byte each
   588                           
   589  0003                     stringdir:	
   590  0003  3000               	movlw	high stringdir
   591  0004  008A               	movwf	10
   592  0005  0804               	movf	4,w
   593  0006  0A84               	incf	4,f
   594  0007  0782               	addwf	2,f
   595  0008                     __stringbase:	
   596  0008  3400               	retlw	0
   597  0009                     __end_of__stringtab:	
   598  0009                     uint16_to_byte_array@bit_mask:	
   599  0009  34FF               	retlw	255
   600  000A  3400               	retlw	0
   601  000B                     __end_ofuint16_to_byte_array@bit_mask:	
   602  000B                     bit_shift@bit_mask_for_l:	
   603  000B  3403               	retlw	3
   604  000C                     __end_ofbit_shift@bit_mask_for_l:	
   605  001F                     _ADCON0	set	31
   606  001F                     _ADCON0bits	set	31
   607  001E                     _ADRESH	set	30
   608  0005                     _PORTAbits	set	5
   609  0007                     _PORTCbits	set	7
   610  0008                     _PORTDbits	set	8
   611  001A                     _RCREG	set	26
   612  0018                     _RCSTA	set	24
   613  0013                     _SSPBUF	set	19
   614  0014                     _SSPCONbits	set	20
   615  0019                     _TXREG	set	25
   616  0065                     _RCIF	set	101
   617  0064                     _TXIF	set	100
   618  009F                     _ADCON1	set	159
   619  009E                     _ADRESL	set	158
   620  0099                     _SPBRG	set	153
   621  0094                     _SSPSTATbits	set	148
   622  0085                     _TRISAbits	set	133
   623  0087                     _TRISCbits	set	135
   624  0088                     _TRISDbits	set	136
   625  0089                     _TRISEbits	set	137
   626  0098                     _TXSTA	set	152
   627                           
   628                           ; #config settings
   629  0000                     
   630                           	psect	cinit
   631  07F5                     start_initialization:	
   632  07F5                     __initialization:	
   633                           
   634                           ; Clear objects allocated to BANK0
   635  07F5  1383               	bcf	3,7	;select IRP bank0
   636  07F6  3020               	movlw	low __pbssBANK0
   637  07F7  0084               	movwf	4
   638  07F8  304E               	movlw	low (__pbssBANK0+46)
   639  07F9  120A  118A  222D   	fcall	clear_ram0
   640  07FC                     end_of_initialization:	
   641                           ;End of C runtime variable initialization code
   642                           
   643  07FC                     __end_of__initialization:	
   644  07FC  0183               	clrf	3
   645  07FD  120A  118A  2DF6   	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssBANK0
   648  0020                     __pbssBANK0:	
   649  0020                     _index_pos:	
   650  0020                     	ds	1
   651  0021                     _packet:	
   652  0021                     	ds	32
   653  0041                     _cw:	
   654  0041                     	ds	13
   655                           
   656                           	psect	clrtext
   657  022D                     clear_ram0:	
   658                           ;	Called with FSR containing the base address, and
   659                           ;	W with the last address+1
   660                           
   661  022D  0064               	clrwdt	;clear the watchdog before getting into this loop
   662  022E                     clrloop0:	
   663  022E  0180               	clrf	0	;clear RAM location pointed to by FSR
   664  022F  0A84               	incf	4,f	;increment pointer
   665  0230  0604               	xorwf	4,w	;XOR with final address
   666  0231  1903               	btfsc	3,2	;have we reached the end yet?
   667  0232  3400               	retlw	0	;all done for this memory range, return
   668  0233  0604               	xorwf	4,w	;XOR again to restore value
   669  0234  2A2E               	goto	clrloop0	;do the next byte
   670                           
   671                           	psect	cstackCOMMON
   672  0070                     __pcstackCOMMON:	
   673  0070                     ?_MCLR_init:	
   674  0070                     ??_MCLR_init:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_sysprot_init:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ??_sysprot_init:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_ad_con_init:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ??_ad_con_init:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_spi_master_start:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ??_spi_master_start:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_uart_init:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ??_uart_init:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?_POW_status:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_command:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?_uint8_data_set:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_uint16_to_byte_array:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?_double_to_byte_array:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_LED_data_set:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ?_I2Ctemp_data_set:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?_bit_shift:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ??_spi_master_receive:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?_spi_master_send:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_MCLR_reset:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ??_MCLR_reset:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_putch:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ??_putch:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ??_getch:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ?_get_cw_data:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?_cw_data_set:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ?_COM_status:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ?_spi_master_receive:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_getch:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_main:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?___wmul:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0070                     bit_shift@p_adres:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0070                     spi_master_send@data:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     putch@byte:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     MCLR_init@nin:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     getch@count:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     uint8_data_set@p_data:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     uint16_to_byte_array@p_data:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     double_to_byte_array@p_data:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     ___wmul@multiplier:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 2 bytes @ 0x0
   796  0070                     	ds	1
   797  0071                     ??_bit_shift:	
   798  0071                     ??_spi_master_send:	
   799                           ; 0 bytes @ 0x1
   800                           
   801  0071                     spi_master_receive@dummy:	
   802                           ; 0 bytes @ 0x1
   803                           
   804                           
   805                           ; 1 bytes @ 0x1
   806  0071                     	ds	1
   807  0072                     spi_master_send@dummy:	
   808  0072                     MCLR_reset@resetted_mcu:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0072                     uint8_data_set@data_len:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0072                     uint16_to_byte_array@p_data_array:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0072                     double_to_byte_array@p_data_array:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     spi_master_receive@timeout_counter:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     ___wmul@multiplicand:	
   824                           ; 2 bytes @ 0x2
   825                           
   826                           
   827                           ; 2 bytes @ 0x2
   828  0072                     	ds	1
   829  0073                     ??_uint8_data_set:	
   830  0073                     ??_uint16_to_byte_array:	
   831                           ; 0 bytes @ 0x3
   832                           
   833  0073                     ??_double_to_byte_array:	
   834                           ; 0 bytes @ 0x3
   835                           
   836  0073                     spi_master_send@timeout_counter:	
   837                           ; 0 bytes @ 0x3
   838                           
   839  0073                     MCLR_reset@nin:	
   840                           ; 2 bytes @ 0x3
   841                           
   842                           
   843                           ; 2 bytes @ 0x3
   844  0073                     	ds	1
   845  0074                     ??_cw_data_set:	
   846  0074                     ??___wmul:	
   847                           ; 0 bytes @ 0x4
   848                           
   849  0074                     spi_master_receive@destination:	
   850                           ; 0 bytes @ 0x4
   851                           
   852  0074                     ___wmul@product:	
   853                           ; 1 bytes @ 0x4
   854                           
   855                           
   856                           ; 2 bytes @ 0x4
   857  0074                     	ds	1
   858  0075                     bit_shift@p_ad_value:	
   859  0075                     spi_master_send@destination:	
   860                           ; 1 bytes @ 0x5
   861                           
   862  0075                     cw_data_set@p_cw_data:	
   863                           ; 1 bytes @ 0x5
   864                           
   865  0075                     double_to_byte_array@converter:	
   866                           ; 1 bytes @ 0x5
   867                           
   868                           
   869                           ; 4 bytes @ 0x5
   870  0075                     	ds	1
   871  0076                     ??_COM_status:	
   872  0076                     ??_POW_status:	
   873                           ; 0 bytes @ 0x6
   874                           
   875  0076                     ?_uint16_data_set:	
   876                           ; 0 bytes @ 0x6
   877                           
   878  0076                     ?_send_payload:	
   879                           ; 0 bytes @ 0x6
   880                           
   881  0076                     ?_get_adcon:	
   882                           ; 1 bytes @ 0x6
   883                           
   884  0076                     send_payload@p_payload:	
   885                           ; 2 bytes @ 0x6
   886                           
   887  0076                     uint16_data_set@p_data:	
   888                           ; 1 bytes @ 0x6
   889                           
   890                           
   891                           ; 2 bytes @ 0x6
   892  0076                     	ds	1
   893  0077                     ??_send_payload:	
   894  0077                     COM_status@COM_stat:	
   895                           ; 0 bytes @ 0x7
   896                           
   897                           
   898                           ; 1 bytes @ 0x7
   899  0077                     	ds	1
   900  0078                     ??_get_adcon:	
   901  0078                     uint16_data_set@data_len:	
   902                           ; 0 bytes @ 0x8
   903                           
   904  0078                     send_payload@data_len:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 1 bytes @ 0x8
   909  0078                     	ds	1
   910  0079                     ??_uint16_data_set:	
   911  0079                     double_to_byte_array@i:	
   912                           ; 0 bytes @ 0x9
   913                           
   914  0079                     send_payload@i:	
   915                           ; 1 bytes @ 0x9
   916                           
   917  0079                     get_adcon@my_adres:	
   918                           ; 1 bytes @ 0x9
   919                           
   920                           
   921                           ; 2 bytes @ 0x9
   922  0079                     	ds	1
   923  007A                     ?_double_data_set:	
   924  007A                     send_payload@index_pos:	
   925                           ; 0 bytes @ 0xA
   926                           
   927  007A                     double_data_set@p_data:	
   928                           ; 1 bytes @ 0xA
   929                           
   930  007A                     uint16_data_set@buf:	
   931                           ; 2 bytes @ 0xA
   932                           
   933                           
   934                           ; 3 bytes @ 0xA
   935  007A                     	ds	1
   936  007B                     send_payload@destination:	
   937  007B                     get_adcon@ad_value:	
   938                           ; 1 bytes @ 0xB
   939                           
   940                           
   941                           ; 2 bytes @ 0xB
   942  007B                     	ds	1
   943  007C                     ?_packet_send_master:	
   944  007C                     double_data_set@data_len:	
   945                           ; 0 bytes @ 0xC
   946                           
   947  007C                     packet_send_master@p_packet:	
   948                           ; 1 bytes @ 0xC
   949                           
   950                           
   951                           ; 1 bytes @ 0xC
   952  007C                     	ds	1
   953  007D                     ??_double_data_set:	
   954  007D                     ??_packet_send_master:	
   955                           ; 0 bytes @ 0xD
   956                           
   957  007D                     ??_get_cw_data:	
   958                           ; 0 bytes @ 0xD
   959                           
   960  007D                     uint16_data_set@i:	
   961                           ; 0 bytes @ 0xD
   962                           
   963                           
   964                           ; 1 bytes @ 0xD
   965  007D                     	ds	1
   966  007E                     ??_LED_data_set:	
   967                           
   968                           	psect	cstackBANK0
   969  004E                     __pcstackBANK0:	
   970                           ; 0 bytes @ 0xE
   971                           
   972  004E                     packet_send_master@destination:	
   973  004E                     get_cw_data@buf:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  004E                     double_data_set@buf:	
   977                           ; 2 bytes @ 0x0
   978                           
   979                           
   980                           ; 5 bytes @ 0x0
   981  004E                     	ds	1
   982  004F                     ?_send_data_master:	
   983  004F                     send_data_master@data_type:	
   984                           ; 0 bytes @ 0x1
   985                           
   986                           
   987                           ; 1 bytes @ 0x1
   988  004F                     	ds	1
   989  0050                     send_data_master@data_end_command:	
   990                           
   991                           ; 1 bytes @ 0x2
   992  0050                     	ds	1
   993  0051                     ??_send_data_master:	
   994                           
   995                           ; 0 bytes @ 0x3
   996  0051                     	ds	1
   997  0052                     send_data_master@destination:	
   998                           
   999                           ; 1 bytes @ 0x4
  1000  0052                     	ds	1
  1001  0053                     double_data_set@i:	
  1002                           
  1003                           ; 1 bytes @ 0x5
  1004  0053                     	ds	1
  1005  0054                     ?_sent_data_set:	
  1006  0054                     sent_data_set@p_data:	
  1007                           ; 1 bytes @ 0x6
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x6
  1011  0054                     	ds	2
  1012  0056                     sent_data_set@data_len:	
  1013                           
  1014                           ; 1 bytes @ 0x8
  1015  0056                     	ds	1
  1016  0057                     sent_data_set@byte_of_data:	
  1017                           
  1018                           ; 1 bytes @ 0x9
  1019  0057                     	ds	1
  1020  0058                     ??_sent_data_set:	
  1021                           
  1022                           ; 0 bytes @ 0xA
  1023  0058                     	ds	5
  1024  005D                     ??_I2Ctemp_data_set:	
  1025                           
  1026                           ; 0 bytes @ 0xF
  1027  005D                     	ds	1
  1028  005E                     I2Ctemp_data_set@I2CTEMP_data:	
  1029                           
  1030                           ; 2 bytes @ 0x10
  1031  005E                     	ds	2
  1032  0060                     ??_command:	
  1033                           
  1034                           ; 0 bytes @ 0x12
  1035  0060                     	ds	3
  1036  0063                     command@data:	
  1037                           
  1038                           ; 1 bytes @ 0x15
  1039  0063                     	ds	1
  1040  0064                     ??_main:	
  1041                           
  1042                           ; 0 bytes @ 0x16
  1043  0064                     	ds	3
  1044  0067                     main@COM_stat:	
  1045                           
  1046                           ; 1 bytes @ 0x19
  1047  0067                     	ds	1
  1048                           
  1049                           	psect	maintext
  1050  05F6                     __pmaintext:	
  1051 ;;
  1052 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1053 ;;
  1054 ;; *************** function _main *****************
  1055 ;; Defined at:
  1056 ;;		line 26 in file "OBC1_main.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  COM_stat        1   25[BANK0 ] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2   26[None  ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : B00/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       0       0       0       0
  1071 ;;      Locals:         0       1       0       0       0
  1072 ;;      Temps:          0       3       0       0       0
  1073 ;;      Totals:         0       4       0       0       0
  1074 ;;Total ram usage:        4 bytes
  1075 ;; Hardware stack levels required when called:    6
  1076 ;; This function calls:
  1077 ;;		_COM_status
  1078 ;;		_MCLR_init
  1079 ;;		_POW_status
  1080 ;;		_ad_con_init
  1081 ;;		_command
  1082 ;;		_spi_master_start
  1083 ;;		_sysprot_init
  1084 ;;		_uart_init
  1085 ;; This function is called by:
  1086 ;;		Startup code after reset
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _main
  1092  05F6                     _main:	
  1093                           
  1094                           ;OBC1_main.c: 28: TRISDbits.TRISD7 = 0;
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1098  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1099  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1100  05F8  1388               	bcf	8,7	;volatile
  1101                           
  1102                           ;OBC1_main.c: 29: PORTDbits.RD7 = 0;
  1103  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1104  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1105  05FB  1388               	bcf	8,7	;volatile
  1106                           
  1107                           ;OBC1_main.c: 30: TRISDbits.TRISD6 = 0;
  1108  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1109  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1110  05FE  1308               	bcf	8,6	;volatile
  1111                           
  1112                           ;OBC1_main.c: 31: PORTDbits.RD6 = 0;
  1113  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0601  1308               	bcf	8,6	;volatile
  1116                           
  1117                           ;OBC1_main.c: 33: MCLR_init();
  1118  0602  120A  118A  225A  120A  118A  	fcall	_MCLR_init
  1119                           
  1120                           ;OBC1_main.c: 34: sysprot_init();
  1121  0607  120A  118A  2220  120A  118A  	fcall	_sysprot_init
  1122                           
  1123                           ;OBC1_main.c: 35: ad_con_init();
  1124  060C  120A  118A  2235  120A  118A  	fcall	_ad_con_init
  1125                           
  1126                           ;OBC1_main.c: 36: spi_master_start();
  1127  0611  120A  118A  22E5  120A  118A  	fcall	_spi_master_start
  1128                           
  1129                           ;OBC1_main.c: 37: uart_init();
  1130  0616  120A  118A  2240  120A  118A  	fcall	_uart_init
  1131                           
  1132                           ;OBC1_main.c: 38: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1133  061B  301A               	movlw	26
  1134  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1135  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1136  061E  00E6               	movwf	??_main+2
  1137  061F  305E               	movlw	94
  1138  0620  00E5               	movwf	??_main+1
  1139  0621  3086               	movlw	134
  1140  0622  00E4               	movwf	??_main
  1141  0623                     u907:	
  1142  0623  0BE4               	decfsz	??_main,f
  1143  0624  2E23               	goto	u907
  1144  0625  0BE5               	decfsz	??_main+1,f
  1145  0626  2E23               	goto	u907
  1146  0627  0BE6               	decfsz	??_main+2,f
  1147  0628  2E23               	goto	u907
  1148  0629  0000               	nop
  1149  062A                     l1787:	
  1150                           ;OBC1_main.c: 40: while(1)
  1151                           
  1152                           
  1153                           ;OBC1_main.c: 41: {
  1154                           ;OBC1_main.c: 42: PORTDbits.RD7 = 1;
  1155  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1156  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1157  062C  1788               	bsf	8,7	;volatile
  1158                           
  1159                           ;OBC1_main.c: 43: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1160  062D  301A               	movlw	26
  1161  062E  00E6               	movwf	??_main+2
  1162  062F  305E               	movlw	94
  1163  0630  00E5               	movwf	??_main+1
  1164  0631  3086               	movlw	134
  1165  0632  00E4               	movwf	??_main
  1166  0633                     u917:	
  1167  0633  0BE4               	decfsz	??_main,f
  1168  0634  2E33               	goto	u917
  1169  0635  0BE5               	decfsz	??_main+1,f
  1170  0636  2E33               	goto	u917
  1171  0637  0BE6               	decfsz	??_main+2,f
  1172  0638  2E33               	goto	u917
  1173  0639  0000               	nop
  1174                           
  1175                           ;OBC1_main.c: 46: uint8_t COM_stat = COM_status();
  1176  063A  120A  118A  22C8  120A  118A  	fcall	_COM_status
  1177  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0641  00E4               	movwf	??_main
  1180  0642  0864               	movf	??_main,w
  1181  0643  00E7               	movwf	main@COM_stat
  1182                           
  1183                           ;OBC1_main.c: 49: POW_status();
  1184  0644  120A  118A  226A  120A  118A  	fcall	_POW_status
  1185                           
  1186                           ;OBC1_main.c: 52: command(COM_stat);
  1187  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1188  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1189  064B  0867               	movf	main@COM_stat,w
  1190  064C  120A  118A  2769  120A  118A  	fcall	_command
  1191                           
  1192                           ;OBC1_main.c: 54: PORTDbits.RD7 = 0;
  1193  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0653  1388               	bcf	8,7	;volatile
  1196                           
  1197                           ;OBC1_main.c: 55: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1198  0654  301A               	movlw	26
  1199  0655  00E6               	movwf	??_main+2
  1200  0656  305E               	movlw	94
  1201  0657  00E5               	movwf	??_main+1
  1202  0658  3086               	movlw	134
  1203  0659  00E4               	movwf	??_main
  1204  065A                     u927:	
  1205  065A  0BE4               	decfsz	??_main,f
  1206  065B  2E5A               	goto	u927
  1207  065C  0BE5               	decfsz	??_main+1,f
  1208  065D  2E5A               	goto	u927
  1209  065E  0BE6               	decfsz	??_main+2,f
  1210  065F  2E5A               	goto	u927
  1211  0660  0000               	nop
  1212  0661  2E2A               	goto	l1787
  1213  0662                     __end_of_main:	
  1214                           ;OBC1_main.c: 56: }
  1215                           ;OBC1_main.c: 58: return 0;
  1216                           ;	Return value of _main is never used
  1217                           
  1218                           
  1219                           	psect	text1
  1220  0240                     __ptext1:	
  1221 ;; *************** function _uart_init *****************
  1222 ;; Defined at:
  1223 ;;		line 34 in file "uart_serial.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;		None               void
  1230 ;; Registers used:
  1231 ;;		wreg
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _uart_init
  1252  0240                     _uart_init:	
  1253                           
  1254                           ;uart_serial.c: 36: TRISCbits.TRISC7 = 1;
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _uart_init: [wreg]
  1258  0240  1683               	bsf	3,5	;RP0=1, select bank1
  1259  0241  1303               	bcf	3,6	;RP1=0, select bank1
  1260  0242  1787               	bsf	7,7	;volatile
  1261                           
  1262                           ;uart_serial.c: 37: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1263  0243  3081               	movlw	129
  1264  0244  0099               	movwf	25	;volatile
  1265                           
  1266                           ;uart_serial.c: 38: TXSTA = (0x00 | 0x04 | 0x20);
  1267  0245  3024               	movlw	36
  1268  0246  0098               	movwf	24	;volatile
  1269                           
  1270                           ;uart_serial.c: 39: RCSTA = (0x00 | 0x90);
  1271  0247  3090               	movlw	144
  1272  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1274  024A  0098               	movwf	24	;volatile
  1275  024B  0008               	return
  1276  024C                     __end_of_uart_init:	
  1277                           
  1278                           	psect	text2
  1279  0220                     __ptext2:	
  1280 ;; *************** function _sysprot_init *****************
  1281 ;; Defined at:
  1282 ;;		line 85 in file "system_protocol.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		None
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _sysprot_init
  1311  0220                     _sysprot_init:	
  1312                           
  1313                           ;system_protocol.c: 87: TRISDbits.TRISD0 = 1;
  1314                           
  1315                           ;incstack = 0
  1316                           ; Regs used in _sysprot_init: []
  1317  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0222  1408               	bsf	8,0	;volatile
  1320                           
  1321                           ;system_protocol.c: 88: TRISDbits.TRISD1 = 1;
  1322  0223  1488               	bsf	8,1	;volatile
  1323  0224  0008               	return
  1324  0225                     __end_of_sysprot_init:	
  1325                           
  1326                           	psect	text3
  1327  0769                     __ptext3:	
  1328 ;; *************** function _command *****************
  1329 ;; Defined at:
  1330 ;;		line 50 in file "OBC1_app.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  data            1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  data            1   21[BANK0 ] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         0       0       0       0       0
  1345 ;;      Locals:         0       1       0       0       0
  1346 ;;      Temps:          0       3       0       0       0
  1347 ;;      Totals:         0       4       0       0       0
  1348 ;;Total ram usage:        4 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    5
  1351 ;; This function calls:
  1352 ;;		_I2Ctemp_data_set
  1353 ;;		_LED_data_set
  1354 ;;		_cw_data_set
  1355 ;;		_get_cw_data
  1356 ;;		_putch
  1357 ;;		_send_data_master
  1358 ;;		_spi_master_send
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _command
  1366  0769                     _command:	
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1370                           ;command@data stored from wreg
  1371  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1372  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1373  076B  00E3               	movwf	command@data
  1374                           
  1375                           ;OBC1_app.c: 52: switch(data)
  1376  076C  2FE7               	goto	l1727
  1377  076D                     l1707:	
  1378                           ;OBC1_app.c: 53: {
  1379                           ;OBC1_app.c: 54: case (0x03):
  1380                           
  1381                           
  1382                           ;OBC1_app.c: 55: get_cw_data();
  1383  076D  120A  118A  26E2  120A  118A  	fcall	_get_cw_data
  1384                           
  1385                           ;OBC1_app.c: 56: cw_data_set(&cw);
  1386  0772  3041               	movlw	(low (_cw| 0))& (0+255)
  1387  0773  120A  118A  2662  120A  118A  	fcall	_cw_data_set
  1388                           
  1389                           ;OBC1_app.c: 57: spi_master_send(COM, 0x11);
  1390  0778  3011               	movlw	17
  1391  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1392  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1393  077B  00E0               	movwf	??_command
  1394  077C  0860               	movf	??_command,w
  1395  077D  00F0               	movwf	spi_master_send@data
  1396  077E  3003               	movlw	3
  1397  077F  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  1398                           
  1399                           ;OBC1_app.c: 58: send_data_master(COM, 0x01, DATA_END);
  1400  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0786  01CF               	clrf	send_data_master@data_type
  1403  0787  0ACF               	incf	send_data_master@data_type,f
  1404  0788  3010               	movlw	16
  1405  0789  00E0               	movwf	??_command
  1406  078A  0860               	movf	??_command,w
  1407  078B  00D0               	movwf	send_data_master@data_end_command
  1408  078C  3003               	movlw	3
  1409  078D  120A  118A  227B   	fcall	_send_data_master
  1410                           
  1411                           ;OBC1_app.c: 59: break;
  1412  0790  0008               	return
  1413  0791                     l375:	
  1414                           ;OBC1_app.c: 61: case (0x01):
  1415                           
  1416                           
  1417                           ;OBC1_app.c: 62: PORTDbits.RD6 = 1;
  1418  0791  1708               	bsf	8,6	;volatile
  1419                           
  1420                           ;OBC1_app.c: 63: _delay((unsigned long)((100)*(20000000/4000.0)));
  1421  0792  3003               	movlw	3
  1422  0793  00E2               	movwf	??_command+2
  1423  0794  308A               	movlw	138
  1424  0795  00E1               	movwf	??_command+1
  1425  0796  3056               	movlw	86
  1426  0797  00E0               	movwf	??_command
  1427  0798                     u937:	
  1428  0798  0BE0               	decfsz	??_command,f
  1429  0799  2F98               	goto	u937
  1430  079A  0BE1               	decfsz	??_command+1,f
  1431  079B  2F98               	goto	u937
  1432  079C  0BE2               	decfsz	??_command+2,f
  1433  079D  2F98               	goto	u937
  1434  079E  2F9F               	nop2
  1435                           
  1436                           ;OBC1_app.c: 64: PORTDbits.RD6 = 0;
  1437  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1438  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1439  07A1  1308               	bcf	8,6	;volatile
  1440                           
  1441                           ;OBC1_app.c: 65: _delay((unsigned long)((100)*(20000000/4000.0)));
  1442  07A2  3003               	movlw	3
  1443  07A3  00E2               	movwf	??_command+2
  1444  07A4  308A               	movlw	138
  1445  07A5  00E1               	movwf	??_command+1
  1446  07A6  3056               	movlw	86
  1447  07A7  00E0               	movwf	??_command
  1448  07A8                     u947:	
  1449  07A8  0BE0               	decfsz	??_command,f
  1450  07A9  2FA8               	goto	u947
  1451  07AA  0BE1               	decfsz	??_command+1,f
  1452  07AB  2FA8               	goto	u947
  1453  07AC  0BE2               	decfsz	??_command+2,f
  1454  07AD  2FA8               	goto	u947
  1455  07AE  2FAF               	nop2
  1456                           
  1457                           ;OBC1_app.c: 66: LED_data_set();
  1458  07AF  120A  118A  224C  120A  118A  	fcall	_LED_data_set
  1459                           
  1460                           ;OBC1_app.c: 67: spi_master_send(COM, 0x11);
  1461  07B4  3011               	movlw	17
  1462  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1463  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1464  07B7  00E0               	movwf	??_command
  1465  07B8  0860               	movf	??_command,w
  1466  07B9  00F0               	movwf	spi_master_send@data
  1467  07BA  3003               	movlw	3
  1468  07BB  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  1469                           
  1470                           ;OBC1_app.c: 68: send_data_master(COM, (0x01), DATA_END);
  1471  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1472  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1473  07C2  01CF               	clrf	send_data_master@data_type
  1474  07C3  0ACF               	incf	send_data_master@data_type,f
  1475  07C4  3010               	movlw	16
  1476  07C5  00E0               	movwf	??_command
  1477  07C6  0860               	movf	??_command,w
  1478  07C7  00D0               	movwf	send_data_master@data_end_command
  1479  07C8  3003               	movlw	3
  1480  07C9  120A  118A  227B   	fcall	_send_data_master
  1481                           
  1482                           ;OBC1_app.c: 69: break;
  1483  07CC  0008               	return
  1484  07CD                     l1719:	
  1485                           ;OBC1_app.c: 71: case (0x02):
  1486                           
  1487                           
  1488                           ;OBC1_app.c: 72: putch(0x01);
  1489  07CD  3001               	movlw	1
  1490  07CE  120A  118A  2225  120A  118A  	fcall	_putch
  1491                           
  1492                           ;OBC1_app.c: 73: I2Ctemp_data_set();
  1493  07D3  120A  118A  2343  120A  118A  	fcall	_I2Ctemp_data_set
  1494                           
  1495                           ;OBC1_app.c: 74: send_data_master(COM, (0x02), DATA_END);
  1496  07D8  3002               	movlw	2
  1497  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1498  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1499  07DB  00E0               	movwf	??_command
  1500  07DC  0860               	movf	??_command,w
  1501  07DD  00CF               	movwf	send_data_master@data_type
  1502  07DE  3010               	movlw	16
  1503  07DF  00E1               	movwf	??_command+1
  1504  07E0  0861               	movf	??_command+1,w
  1505  07E1  00D0               	movwf	send_data_master@data_end_command
  1506  07E2  3003               	movlw	3
  1507  07E3  120A  118A  227B   	fcall	_send_data_master
  1508                           
  1509                           ;OBC1_app.c: 76: }
  1510                           
  1511                           ;OBC1_app.c: 75: break;
  1512  07E6  0008               	return
  1513  07E7                     l1727:	
  1514  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1515  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1516  07E9  0863               	movf	command@data,w
  1517                           
  1518                           ; Switch size 1, requested type "space"
  1519                           ; Number of cases is 3, Range of values is 1 to 3
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; simple_byte           10     6 (average)
  1523                           ; direct_byte           20    11 (fixed)
  1524                           ; jumptable            263     9 (fixed)
  1525                           ;	Chosen strategy is simple_byte
  1526  07EA  3A01               	xorlw	1	; case 1
  1527  07EB  1903               	skipnz
  1528  07EC  2F91               	goto	l375
  1529  07ED  3A03               	xorlw	3	; case 2
  1530  07EE  1903               	skipnz
  1531  07EF  2FCD               	goto	l1719
  1532  07F0  3A01               	xorlw	1	; case 3
  1533  07F1  1903               	skipnz
  1534  07F2  2F6D               	goto	l1707
  1535  07F3  2FF4               	goto	l377
  1536  07F4                     l377:	
  1537  07F4  0008               	return
  1538  07F5                     __end_of_command:	
  1539                           
  1540                           	psect	text4
  1541  027B                     __ptext4:	
  1542 ;; *************** function _send_data_master *****************
  1543 ;; Defined at:
  1544 ;;		line 217 in file "system_protocol.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  destination     1    wreg     enum E1099
  1547 ;;  data_type       1    1[BANK0 ] enum E1104
  1548 ;;  data_end_com    1    2[BANK0 ] enum E1108
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  destination     1    4[BANK0 ] enum E1099
  1551 ;; Return value:  Size  Location     Type
  1552 ;;		None               void
  1553 ;; Registers used:
  1554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         0       2       0       0       0
  1561 ;;      Locals:         0       1       0       0       0
  1562 ;;      Temps:          0       1       0       0       0
  1563 ;;      Totals:         0       4       0       0       0
  1564 ;;Total ram usage:        4 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    3
  1567 ;; This function calls:
  1568 ;;		_packet_send_master
  1569 ;; This function is called by:
  1570 ;;		_command
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _send_data_master
  1576  027B                     _send_data_master:	
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1580                           ;send_data_master@destination stored from wreg
  1581  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1582  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1583  027D  00D2               	movwf	send_data_master@destination
  1584                           
  1585                           ;system_protocol.c: 219: packet.data_type = (uint8_t)data_type;
  1586  027E  084F               	movf	send_data_master@data_type,w
  1587  027F  00D1               	movwf	??_send_data_master
  1588  0280  0851               	movf	??_send_data_master,w
  1589  0281  00A1               	movwf	_packet
  1590                           
  1591                           ;system_protocol.c: 220: packet.data_end_command = (uint8_t)data_end_command;
  1592  0282  0850               	movf	send_data_master@data_end_command,w
  1593  0283  00D1               	movwf	??_send_data_master
  1594  0284  0851               	movf	??_send_data_master,w
  1595  0285  00C0               	movwf	_packet+31
  1596                           
  1597                           ;system_protocol.c: 222: packet_send_master(destination, &packet);
  1598  0286  3021               	movlw	(low (_packet| 0))& (0+255)
  1599  0287  00D1               	movwf	??_send_data_master
  1600  0288  0851               	movf	??_send_data_master,w
  1601  0289  00FC               	movwf	packet_send_master@p_packet
  1602  028A  0852               	movf	send_data_master@destination,w
  1603  028B  120A  118A  23E3   	fcall	_packet_send_master
  1604  028E  0008               	return
  1605  028F                     __end_of_send_data_master:	
  1606                           
  1607                           	psect	text5
  1608  03E3                     __ptext5:	
  1609 ;; *************** function _packet_send_master *****************
  1610 ;; Defined at:
  1611 ;;		line 465 in file "system_protocol.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  destination     1    wreg     enum E1099
  1614 ;;  p_packet        1   12[COMMON] PTR struct .
  1615 ;;		 -> packet(32), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  destination     1    0[BANK0 ] enum E1099
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         1       0       0       0       0
  1628 ;;      Locals:         0       1       0       0       0
  1629 ;;      Temps:          1       0       0       0       0
  1630 ;;      Totals:         2       1       0       0       0
  1631 ;;Total ram usage:        3 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    2
  1634 ;; This function calls:
  1635 ;;		_send_payload
  1636 ;;		_spi_master_send
  1637 ;; This function is called by:
  1638 ;;		_send_data_master
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function _packet_send_master
  1644  03E3                     _packet_send_master:	
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1648                           ;packet_send_master@destination stored from wreg
  1649  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1650  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1651  03E5  00CE               	movwf	packet_send_master@destination
  1652                           
  1653                           ;system_protocol.c: 468: spi_master_send(destination, 0x01);
  1654  03E6  01F0               	clrf	spi_master_send@data
  1655  03E7  0AF0               	incf	spi_master_send@data,f
  1656  03E8  084E               	movf	packet_send_master@destination,w
  1657  03E9  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  1658                           
  1659                           ;system_protocol.c: 471: spi_master_send(destination, &p_packet->data_type);
  1660  03EE  087C               	movf	packet_send_master@p_packet,w
  1661  03EF  00FD               	movwf	??_packet_send_master
  1662  03F0  087D               	movf	??_packet_send_master,w
  1663  03F1  00F0               	movwf	spi_master_send@data
  1664  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1665  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1666  03F4  084E               	movf	packet_send_master@destination,w
  1667  03F5  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  1668                           
  1669                           ;system_protocol.c: 474: send_payload(destination, &p_packet->payload);
  1670  03FA  087C               	movf	packet_send_master@p_packet,w
  1671  03FB  3E01               	addlw	1
  1672  03FC  00FD               	movwf	??_packet_send_master
  1673  03FD  087D               	movf	??_packet_send_master,w
  1674  03FE  00F6               	movwf	send_payload@p_payload
  1675  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0401  084E               	movf	packet_send_master@destination,w
  1678  0402  120A  118A  24B7  120A  118A  	fcall	_send_payload
  1679                           
  1680                           ;system_protocol.c: 477: spi_master_send(destination, &p_packet->data_end_command);
  1681  0407  087C               	movf	packet_send_master@p_packet,w
  1682  0408  3E1F               	addlw	31
  1683  0409  00FD               	movwf	??_packet_send_master
  1684  040A  087D               	movf	??_packet_send_master,w
  1685  040B  00F0               	movwf	spi_master_send@data
  1686  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1687  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1688  040E  084E               	movf	packet_send_master@destination,w
  1689  040F  120A  118A  2544   	fcall	_spi_master_send
  1690  0412  0008               	return
  1691  0413                     __end_of_packet_send_master:	
  1692                           
  1693                           	psect	text6
  1694  04B7                     __ptext6:	
  1695 ;; *************** function _send_payload *****************
  1696 ;; Defined at:
  1697 ;;		line 397 in file "system_protocol.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  destination     1    wreg     enum E1099
  1700 ;;  p_payload       1    6[COMMON] PTR unsigned char 
  1701 ;;		 -> packet(32), 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  destination     1   11[COMMON] enum E1099
  1704 ;;  index_pos       1   10[COMMON] unsigned char 
  1705 ;;  i               1    9[COMMON] unsigned char 
  1706 ;;  data_len        1    8[COMMON] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      unsigned char 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         1       0       0       0       0
  1717 ;;      Locals:         4       0       0       0       0
  1718 ;;      Temps:          1       0       0       0       0
  1719 ;;      Totals:         6       0       0       0       0
  1720 ;;Total ram usage:        6 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    1
  1723 ;; This function calls:
  1724 ;;		_spi_master_send
  1725 ;; This function is called by:
  1726 ;;		_packet_send_master
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _send_payload
  1732  04B7                     _send_payload:	
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1736                           ;send_payload@destination stored from wreg
  1737  04B7  00FB               	movwf	send_payload@destination
  1738                           
  1739                           ;system_protocol.c: 399: uint8_t i;
  1740                           ;system_protocol.c: 400: uint8_t data_len;
  1741                           ;system_protocol.c: 401: uint8_t index_pos = 0;
  1742  04B8  01FA               	clrf	send_payload@index_pos
  1743  04B9                     l1503:	
  1744                           ;system_protocol.c: 404: while(*p_payload != 0x00 || index_pos < 30)
  1745                           
  1746  04B9  0876               	movf	send_payload@p_payload,w
  1747  04BA  0084               	movwf	4
  1748  04BB  1383               	bcf	3,7	;select IRP bank0
  1749  04BC  0800               	movf	0,w
  1750  04BD  1903               	btfsc	3,2
  1751  04BE  2CF4               	goto	l1505
  1752  04BF                     l1483:	
  1753                           
  1754                           ;system_protocol.c: 405: {
  1755                           ;system_protocol.c: 406: data_len = *p_payload;
  1756  04BF  0876               	movf	send_payload@p_payload,w
  1757  04C0  0084               	movwf	4
  1758  04C1  1383               	bcf	3,7	;select IRP bank0
  1759  04C2  0800               	movf	0,w
  1760  04C3  00F7               	movwf	??_send_payload
  1761  04C4  0877               	movf	??_send_payload,w
  1762  04C5  00F8               	movwf	send_payload@data_len
  1763                           
  1764                           ;system_protocol.c: 407: spi_master_send(destination, p_payload++);
  1765  04C6  0876               	movf	send_payload@p_payload,w
  1766  04C7  00F7               	movwf	??_send_payload
  1767  04C8  0877               	movf	??_send_payload,w
  1768  04C9  00F0               	movwf	spi_master_send@data
  1769  04CA  087B               	movf	send_payload@destination,w
  1770  04CB  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  1771  04D0  3001               	movlw	1
  1772  04D1  00F7               	movwf	??_send_payload
  1773  04D2  0877               	movf	??_send_payload,w
  1774  04D3  07F6               	addwf	send_payload@p_payload,f
  1775                           
  1776                           ;system_protocol.c: 408: index_pos++;
  1777  04D4  3001               	movlw	1
  1778  04D5  00F7               	movwf	??_send_payload
  1779  04D6  0877               	movf	??_send_payload,w
  1780  04D7  07FA               	addwf	send_payload@index_pos,f
  1781                           
  1782                           ;system_protocol.c: 409: for(i = 0; i < data_len; i++)
  1783  04D8  01F9               	clrf	send_payload@i
  1784  04D9                     l1501:	
  1785  04D9  0878               	movf	send_payload@data_len,w
  1786  04DA  0279               	subwf	send_payload@i,w
  1787  04DB  1803               	btfsc	3,0
  1788  04DC  2CB9               	goto	l1503
  1789                           
  1790                           ;system_protocol.c: 410: {
  1791                           ;system_protocol.c: 411: spi_master_send(destination, p_payload++);
  1792  04DD  0876               	movf	send_payload@p_payload,w
  1793  04DE  00F7               	movwf	??_send_payload
  1794  04DF  0877               	movf	??_send_payload,w
  1795  04E0  00F0               	movwf	spi_master_send@data
  1796  04E1  087B               	movf	send_payload@destination,w
  1797  04E2  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  1798  04E7  3001               	movlw	1
  1799  04E8  00F7               	movwf	??_send_payload
  1800  04E9  0877               	movf	??_send_payload,w
  1801  04EA  07F6               	addwf	send_payload@p_payload,f
  1802                           
  1803                           ;system_protocol.c: 412: index_pos++;
  1804  04EB  3001               	movlw	1
  1805  04EC  00F7               	movwf	??_send_payload
  1806  04ED  0877               	movf	??_send_payload,w
  1807  04EE  07FA               	addwf	send_payload@index_pos,f
  1808  04EF  3001               	movlw	1
  1809  04F0  00F7               	movwf	??_send_payload
  1810  04F1  0877               	movf	??_send_payload,w
  1811  04F2  07F9               	addwf	send_payload@i,f
  1812  04F3  2CD9               	goto	l1501
  1813  04F4                     l1505:	
  1814  04F4  301E               	movlw	30
  1815  04F5  027A               	subwf	send_payload@index_pos,w
  1816  04F6  1803               	btfsc	3,0
  1817  04F7  0008               	return
  1818  04F8  2CBF               	goto	l1483
  1819  04F9                     __end_of_send_payload:	
  1820                           ;system_protocol.c: 413: }
  1821                           ;system_protocol.c: 414: }
  1822                           ;system_protocol.c: 416: return index_pos;
  1823                           ;	Return value of _send_payload is never used
  1824                           
  1825                           
  1826                           	psect	text7
  1827  0225                     __ptext7:	
  1828 ;; *************** function _putch *****************
  1829 ;; Defined at:
  1830 ;;		line 53 in file "uart_serial.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  byte            1    wreg     unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  byte            1    0[COMMON] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;		None               void
  1837 ;; Registers used:
  1838 ;;		wreg
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         1       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         1       0       0       0       0
  1848 ;;Total ram usage:        1 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_command
  1854 ;;		_put_string
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _putch
  1860  0225                     _putch:	
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _putch: [wreg]
  1864                           ;putch@byte stored from wreg
  1865  0225  00F0               	movwf	putch@byte
  1866  0226                     l170:	
  1867                           ;uart_serial.c: 56: {
  1868                           ;uart_serial.c: 57: ;
  1869                           
  1870                           ;uart_serial.c: 55: while(!TXIF)
  1871                           
  1872  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0228  1E0C               	btfss	12,4	;volatile
  1875  0229  2A26               	goto	l170
  1876                           
  1877                           ;uart_serial.c: 58: }
  1878                           ;uart_serial.c: 59: TXREG = byte;
  1879  022A  0870               	movf	putch@byte,w
  1880  022B  0099               	movwf	25	;volatile
  1881  022C  0008               	return
  1882  022D                     __end_of_putch:	
  1883                           
  1884                           	psect	text8
  1885  06E2                     __ptext8:	
  1886 ;; *************** function _get_cw_data *****************
  1887 ;; Defined at:
  1888 ;;		line 94 in file "system_protocol.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  buf             2    0[BANK0 ] unsigned int 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       2       0       0       0
  1904 ;;      Temps:          1       0       0       0       0
  1905 ;;      Totals:         1       2       0       0       0
  1906 ;;Total ram usage:        3 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		_get_adcon
  1911 ;;		_spi_master_receive
  1912 ;;		_spi_master_start
  1913 ;; This function is called by:
  1914 ;;		_command
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _get_cw_data
  1920  06E2                     _get_cw_data:	
  1921                           
  1922                           ;system_protocol.c: 96: uint16_t buf;
  1923                           ;system_protocol.c: 98: spi_master_start();
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1927  06E2  120A  118A  22E5  120A  118A  	fcall	_spi_master_start
  1928                           
  1929                           ;system_protocol.c: 99: cw.power1[0] = spi_master_receive(POW);
  1930  06E7  3004               	movlw	4
  1931  06E8  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1932  06ED  00FD               	movwf	??_get_cw_data
  1933  06EE  087D               	movf	??_get_cw_data,w
  1934  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1935  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1936  06F1  00C1               	movwf	_cw
  1937                           
  1938                           ;system_protocol.c: 100: cw.power1[1] = spi_master_receive(POW);
  1939  06F2  3004               	movlw	4
  1940  06F3  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1941  06F8  00FD               	movwf	??_get_cw_data
  1942  06F9  087D               	movf	??_get_cw_data,w
  1943  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1944  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1945  06FC  00C2               	movwf	_cw+1
  1946                           
  1947                           ;system_protocol.c: 101: cw.power2[0] = spi_master_receive(POW);
  1948  06FD  3004               	movlw	4
  1949  06FE  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1950  0703  00FD               	movwf	??_get_cw_data
  1951  0704  087D               	movf	??_get_cw_data,w
  1952  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0707  00C3               	movwf	_cw+2
  1955                           
  1956                           ;system_protocol.c: 102: cw.power2[1] = spi_master_receive(POW);
  1957  0708  3004               	movlw	4
  1958  0709  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1959  070E  00FD               	movwf	??_get_cw_data
  1960  070F  087D               	movf	??_get_cw_data,w
  1961  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0712  00C4               	movwf	_cw+3
  1964                           
  1965                           ;system_protocol.c: 103: cw.power3[0] = spi_master_receive(POW);
  1966  0713  3004               	movlw	4
  1967  0714  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1968  0719  00FD               	movwf	??_get_cw_data
  1969  071A  087D               	movf	??_get_cw_data,w
  1970  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1971  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1972  071D  00C5               	movwf	_cw+4
  1973                           
  1974                           ;system_protocol.c: 104: cw.power3[1] = spi_master_receive(POW);
  1975  071E  3004               	movlw	4
  1976  071F  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1977  0724  00FD               	movwf	??_get_cw_data
  1978  0725  087D               	movf	??_get_cw_data,w
  1979  0726  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0727  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0728  00C6               	movwf	_cw+5
  1982                           
  1983                           ;system_protocol.c: 105: cw.power4[0] = spi_master_receive(POW);
  1984  0729  3004               	movlw	4
  1985  072A  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1986  072F  00FD               	movwf	??_get_cw_data
  1987  0730  087D               	movf	??_get_cw_data,w
  1988  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0733  00C7               	movwf	_cw+6
  1991                           
  1992                           ;system_protocol.c: 106: cw.power4[1] = spi_master_receive(POW);
  1993  0734  3004               	movlw	4
  1994  0735  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  1995  073A  00FD               	movwf	??_get_cw_data
  1996  073B  087D               	movf	??_get_cw_data,w
  1997  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1998  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1999  073E  00C8               	movwf	_cw+7
  2000                           
  2001                           ;system_protocol.c: 107: cw.power5[0] = spi_master_receive(POW);
  2002  073F  3004               	movlw	4
  2003  0740  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  2004  0745  00FD               	movwf	??_get_cw_data
  2005  0746  087D               	movf	??_get_cw_data,w
  2006  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0749  00C9               	movwf	_cw+8
  2009                           
  2010                           ;system_protocol.c: 108: cw.power5[1] = spi_master_receive(POW);
  2011  074A  3004               	movlw	4
  2012  074B  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  2013  0750  00FD               	movwf	??_get_cw_data
  2014  0751  087D               	movf	??_get_cw_data,w
  2015  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0754  00CA               	movwf	_cw+9
  2018                           
  2019                           ;system_protocol.c: 109: buf = get_adcon();
  2020  0755  120A  118A  2302   	fcall	_get_adcon
  2021  0758  0877               	movf	?_get_adcon+1,w
  2022  0759  1283               	bcf	3,5	;RP0=0, select bank0
  2023  075A  1303               	bcf	3,6	;RP1=0, select bank0
  2024  075B  00CF               	movwf	get_cw_data@buf+1
  2025  075C  0876               	movf	?_get_adcon,w
  2026  075D  00CE               	movwf	get_cw_data@buf
  2027                           
  2028                           ;system_protocol.c: 110: cw.temp[0] = (uint8_t)(buf >> 8);
  2029  075E  084F               	movf	get_cw_data@buf+1,w
  2030  075F  00FD               	movwf	??_get_cw_data
  2031  0760  087D               	movf	??_get_cw_data,w
  2032  0761  00CB               	movwf	_cw+10
  2033                           
  2034                           ;system_protocol.c: 111: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  2035  0762  084E               	movf	get_cw_data@buf,w
  2036  0763  00FD               	movwf	??_get_cw_data
  2037  0764  087D               	movf	??_get_cw_data,w
  2038  0765  00CC               	movwf	_cw+11
  2039                           
  2040                           ;system_protocol.c: 112: cw.obc2 = 1;
  2041  0766  144D               	bsf	_cw+12,0
  2042                           
  2043                           ;system_protocol.c: 113: cw.powmcu = 1;
  2044  0767  14CD               	bsf	_cw+12,1
  2045  0768  0008               	return
  2046  0769                     __end_of_get_cw_data:	
  2047                           
  2048                           	psect	text9
  2049  02E5                     __ptext9:	
  2050 ;; *************** function _spi_master_start *****************
  2051 ;; Defined at:
  2052 ;;		line 36 in file "spi_master.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		None
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;;		_get_cw_data
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _spi_master_start
  2082  02E5                     _spi_master_start:	
  2083                           
  2084                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _spi_master_start: []
  2088  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2089  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2090  02E7  1187               	bcf	7,3	;volatile
  2091                           
  2092                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  2093  02E8  1287               	bcf	7,5	;volatile
  2094                           
  2095                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  2096  02E9  1607               	bsf	7,4	;volatile
  2097                           
  2098                           ;spi_master.c: 44: TRISCbits.TRISC0 = 0;
  2099  02EA  1007               	bcf	7,0	;volatile
  2100                           
  2101                           ;spi_master.c: 45: TRISCbits.TRISC1 = 0;
  2102  02EB  1087               	bcf	7,1	;volatile
  2103                           
  2104                           ;spi_master.c: 48: SSPCONbits.SSPEN = 0;
  2105  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2106  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2107  02EE  1294               	bcf	20,5	;volatile
  2108                           
  2109                           ;spi_master.c: 51: SSPSTATbits.SMP = 0;
  2110  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2111  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2112  02F1  1394               	bcf	20,7	;volatile
  2113                           
  2114                           ;spi_master.c: 52: SSPCONbits.CKP = 0;
  2115  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2116  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2117  02F4  1214               	bcf	20,4	;volatile
  2118                           
  2119                           ;spi_master.c: 53: SSPSTATbits.CKE = 0;
  2120  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2121  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2122  02F7  1314               	bcf	20,6	;volatile
  2123                           
  2124                           ;spi_master.c: 56: SSPCONbits.SSPM3 = 0;
  2125  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2126  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2127  02FA  1194               	bcf	20,3	;volatile
  2128                           
  2129                           ;spi_master.c: 57: SSPCONbits.SSPM2 = 0;
  2130  02FB  1114               	bcf	20,2	;volatile
  2131                           
  2132                           ;spi_master.c: 58: SSPCONbits.SSPM1 = 0;
  2133  02FC  1094               	bcf	20,1	;volatile
  2134                           
  2135                           ;spi_master.c: 59: SSPCONbits.SSPM0 = 0;
  2136  02FD  1014               	bcf	20,0	;volatile
  2137                           
  2138                           ;spi_master.c: 62: PORTCbits.RC0 = 1;
  2139  02FE  1407               	bsf	7,0	;volatile
  2140                           
  2141                           ;spi_master.c: 63: PORTCbits.RC1 = 1;
  2142  02FF  1487               	bsf	7,1	;volatile
  2143                           
  2144                           ;spi_master.c: 66: SSPCONbits.SSPEN = 1;
  2145  0300  1694               	bsf	20,5	;volatile
  2146  0301  0008               	return
  2147  0302                     __end_of_spi_master_start:	
  2148                           
  2149                           	psect	text10
  2150  0302                     __ptext10:	
  2151 ;; *************** function _get_adcon *****************
  2152 ;; Defined at:
  2153 ;;		line 91 in file "AD_value.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  voltage_valu    3    0        unsigned int 
  2158 ;;  ad_value        2   11[COMMON] unsigned int 
  2159 ;;  my_adres        2    9[COMMON] struct .
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  2    6[COMMON] unsigned int 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         2       0       0       0       0
  2170 ;;      Locals:         4       0       0       0       0
  2171 ;;      Temps:          1       0       0       0       0
  2172 ;;      Totals:         7       0       0       0       0
  2173 ;;Total ram usage:        7 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    2
  2176 ;; This function calls:
  2177 ;;		_bit_shift
  2178 ;; This function is called by:
  2179 ;;		_get_cw_data
  2180 ;;		_get_pt
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _get_adcon
  2186  0302                     _get_adcon:	
  2187                           
  2188                           ;AD_value.c: 94: uint16_t ad_value = 0b0000000000;
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2192  0302  01FB               	clrf	get_adcon@ad_value
  2193  0303  01FC               	clrf	get_adcon@ad_value+1
  2194                           
  2195                           ;AD_value.c: 95: double voltage_value;
  2196                           ;AD_value.c: 96: adres_t my_adres;
  2197                           ;AD_value.c: 99: ADCON0 = 0b10000001;
  2198  0304  3081               	movlw	129
  2199  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0307  009F               	movwf	31	;volatile
  2202                           
  2203                           ;AD_value.c: 100: ADCON0bits.GO_DONE = 1;
  2204  0308  151F               	bsf	31,2	;volatile
  2205  0309                     l65:	
  2206                           ;AD_value.c: 103: while(ADCON0bits.GO_DONE){;}
  2207                           
  2208  0309  191F               	btfsc	31,2	;volatile
  2209  030A  2B09               	goto	l65
  2210                           
  2211                           ;AD_value.c: 106: my_adres.my_adres_h = ADRESH;
  2212  030B  081E               	movf	30,w	;volatile
  2213  030C  00F8               	movwf	??_get_adcon
  2214  030D  0878               	movf	??_get_adcon,w
  2215  030E  00F9               	movwf	get_adcon@my_adres
  2216                           
  2217                           ;AD_value.c: 107: my_adres.my_adres_l = ADRESL;
  2218  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0311  081E               	movf	30,w	;volatile
  2221  0312  00F8               	movwf	??_get_adcon
  2222  0313  0878               	movf	??_get_adcon,w
  2223  0314  00FA               	movwf	get_adcon@my_adres+1
  2224                           
  2225                           ;AD_value.c: 108: bit_shift(&ad_value, &my_adres);
  2226  0315  3079               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  2227  0316  00F8               	movwf	??_get_adcon
  2228  0317  0878               	movf	??_get_adcon,w
  2229  0318  00F0               	movwf	bit_shift@p_adres
  2230  0319  307B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  2231  031A  120A  118A  2413   	fcall	_bit_shift
  2232                           
  2233                           ;AD_value.c: 110: return ad_value;
  2234  031D  087C               	movf	get_adcon@ad_value+1,w
  2235  031E  00F7               	movwf	?_get_adcon+1
  2236  031F  087B               	movf	get_adcon@ad_value,w
  2237  0320  00F6               	movwf	?_get_adcon
  2238  0321  0008               	return
  2239  0322                     __end_of_get_adcon:	
  2240                           
  2241                           	psect	text11
  2242  0413                     __ptext11:	
  2243 ;; *************** function _bit_shift *****************
  2244 ;; Defined at:
  2245 ;;		line 71 in file "AD_value.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  p_ad_value      1    wreg     PTR unsigned int 
  2248 ;;		 -> get_adcon@ad_value(2), 
  2249 ;;  p_adres         1    0[COMMON] PTR struct .
  2250 ;;		 -> get_adcon@my_adres(2), 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  p_ad_value      1    5[COMMON] PTR unsigned int 
  2253 ;;		 -> get_adcon@ad_value(2), 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         1       0       0       0       0
  2264 ;;      Locals:         1       0       0       0       0
  2265 ;;      Temps:          4       0       0       0       0
  2266 ;;      Totals:         6       0       0       0       0
  2267 ;;Total ram usage:        6 bytes
  2268 ;; Hardware stack levels used:    2
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_get_adcon
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _bit_shift
  2278  0413                     _bit_shift:	
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  2282                           ;bit_shift@p_ad_value stored from wreg
  2283  0413  00F5               	movwf	bit_shift@p_ad_value
  2284                           
  2285                           ;AD_value.c: 73: const uint8_t bit_mask_for_l = 0b00000011;
  2286                           ;AD_value.c: 75: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  2287  0414  0870               	movf	bit_shift@p_adres,w
  2288  0415  0084               	movwf	4
  2289  0416  0800               	movf	0,w
  2290  0417  00F1               	movwf	??_bit_shift
  2291  0418  01F2               	clrf	??_bit_shift+1
  2292  0419  0875               	movf	bit_shift@p_ad_value,w
  2293  041A  0084               	movwf	4
  2294  041B  0871               	movf	??_bit_shift,w
  2295  041C  0080               	movwf	0
  2296  041D  0A84               	incf	4,f
  2297  041E  0872               	movf	??_bit_shift+1,w
  2298  041F  0080               	movwf	0
  2299                           
  2300                           ;AD_value.c: 76: *p_ad_value <<= 2;
  2301  0420  0875               	movf	bit_shift@p_ad_value,w
  2302  0421  0084               	movwf	4
  2303  0422  3002               	movlw	2
  2304  0423                     u565:	
  2305  0423  1003               	clrc
  2306  0424  0D80               	rlf	0,f
  2307  0425  0A84               	incf	4,f
  2308  0426  0D80               	rlf	0,f
  2309  0427  0384               	decf	4,f
  2310  0428  3EFF               	addlw	-1
  2311  0429  1D03               	skipz
  2312  042A  2C23               	goto	u565
  2313                           
  2314                           ;AD_value.c: 77: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  2315  042B  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  2316  042C  0084               	movwf	4
  2317  042D  120A  118A  2003  120A  118A  	fcall	stringdir
  2318  0432  00F1               	movwf	??_bit_shift
  2319  0433  0A70               	incf	bit_shift@p_adres,w
  2320  0434  0084               	movwf	4
  2321  0435  0800               	movf	0,w
  2322  0436  00F2               	movwf	??_bit_shift+1
  2323  0437  3006               	movlw	6
  2324  0438                     u575:	
  2325  0438  1003               	clrc
  2326  0439  0CF2               	rrf	??_bit_shift+1,f
  2327  043A  3EFF               	addlw	-1
  2328  043B  1D03               	skipz
  2329  043C  2C38               	goto	u575
  2330  043D  0872               	movf	??_bit_shift+1,w
  2331  043E  0571               	andwf	??_bit_shift,w
  2332  043F  00F3               	movwf	??_bit_shift+2
  2333  0440  01F4               	clrf	??_bit_shift+3
  2334  0441  0875               	movf	bit_shift@p_ad_value,w
  2335  0442  0084               	movwf	4
  2336  0443  0873               	movf	??_bit_shift+2,w
  2337  0444  0480               	iorwf	0,f
  2338  0445  0A84               	incf	4,f
  2339  0446  0874               	movf	??_bit_shift+3,w
  2340  0447  0480               	iorwf	0,f
  2341  0448  0008               	return
  2342  0449                     __end_of_bit_shift:	
  2343                           
  2344                           	psect	text12
  2345  0662                     __ptext12:	
  2346 ;; *************** function _cw_data_set *****************
  2347 ;; Defined at:
  2348 ;;		line 180 in file "system_protocol.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  p_cw_data       1    wreg     PTR struct .
  2351 ;;		 -> cw(13), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  p_cw_data       1    5[COMMON] PTR struct .
  2354 ;;		 -> cw(13), 
  2355 ;;  i               1    0        unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       0       0       0       0
  2366 ;;      Locals:         1       0       0       0       0
  2367 ;;      Temps:          1       0       0       0       0
  2368 ;;      Totals:         2       0       0       0       0
  2369 ;;Total ram usage:        2 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    1
  2372 ;; This function calls:
  2373 ;;		_uint8_data_set
  2374 ;; This function is called by:
  2375 ;;		_command
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _cw_data_set
  2381  0662                     _cw_data_set:	
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2385                           ;cw_data_set@p_cw_data stored from wreg
  2386  0662  00F5               	movwf	cw_data_set@p_cw_data
  2387                           
  2388                           ;system_protocol.c: 182: uint8_t i;
  2389                           ;system_protocol.c: 185: uint8_data_set(&(p_cw_data->power1), 2);
  2390  0663  0875               	movf	cw_data_set@p_cw_data,w
  2391  0664  00F0               	movwf	uint8_data_set@p_data
  2392  0665  3000               	movlw	0
  2393  0666  00F1               	movwf	uint8_data_set@p_data+1
  2394  0667  3002               	movlw	2
  2395  0668  00F4               	movwf	??_cw_data_set
  2396  0669  0874               	movf	??_cw_data_set,w
  2397  066A  00F2               	movwf	uint8_data_set@data_len
  2398  066B  120A  118A  2365  120A  118A  	fcall	_uint8_data_set
  2399                           
  2400                           ;system_protocol.c: 186: uint8_data_set(&(p_cw_data->power2), 2);
  2401  0670  0875               	movf	cw_data_set@p_cw_data,w
  2402  0671  3E02               	addlw	2
  2403  0672  00F0               	movwf	uint8_data_set@p_data
  2404  0673  3000               	movlw	0
  2405  0674  00F1               	movwf	uint8_data_set@p_data+1
  2406  0675  3002               	movlw	2
  2407  0676  00F4               	movwf	??_cw_data_set
  2408  0677  0874               	movf	??_cw_data_set,w
  2409  0678  00F2               	movwf	uint8_data_set@data_len
  2410  0679  120A  118A  2365  120A  118A  	fcall	_uint8_data_set
  2411                           
  2412                           ;system_protocol.c: 187: uint8_data_set(&(p_cw_data->power3), 2);
  2413  067E  0875               	movf	cw_data_set@p_cw_data,w
  2414  067F  3E04               	addlw	4
  2415  0680  00F0               	movwf	uint8_data_set@p_data
  2416  0681  3000               	movlw	0
  2417  0682  00F1               	movwf	uint8_data_set@p_data+1
  2418  0683  3002               	movlw	2
  2419  0684  00F4               	movwf	??_cw_data_set
  2420  0685  0874               	movf	??_cw_data_set,w
  2421  0686  00F2               	movwf	uint8_data_set@data_len
  2422  0687  120A  118A  2365  120A  118A  	fcall	_uint8_data_set
  2423                           
  2424                           ;system_protocol.c: 188: uint8_data_set(&(p_cw_data->power4), 2);
  2425  068C  0875               	movf	cw_data_set@p_cw_data,w
  2426  068D  3E06               	addlw	6
  2427  068E  00F0               	movwf	uint8_data_set@p_data
  2428  068F  3000               	movlw	0
  2429  0690  00F1               	movwf	uint8_data_set@p_data+1
  2430  0691  3002               	movlw	2
  2431  0692  00F4               	movwf	??_cw_data_set
  2432  0693  0874               	movf	??_cw_data_set,w
  2433  0694  00F2               	movwf	uint8_data_set@data_len
  2434  0695  120A  118A  2365  120A  118A  	fcall	_uint8_data_set
  2435                           
  2436                           ;system_protocol.c: 189: uint8_data_set(&(p_cw_data->power5), 2);
  2437  069A  0875               	movf	cw_data_set@p_cw_data,w
  2438  069B  3E08               	addlw	8
  2439  069C  00F0               	movwf	uint8_data_set@p_data
  2440  069D  3000               	movlw	0
  2441  069E  00F1               	movwf	uint8_data_set@p_data+1
  2442  069F  3002               	movlw	2
  2443  06A0  00F4               	movwf	??_cw_data_set
  2444  06A1  0874               	movf	??_cw_data_set,w
  2445  06A2  00F2               	movwf	uint8_data_set@data_len
  2446  06A3  120A  118A  2365  120A  118A  	fcall	_uint8_data_set
  2447                           
  2448                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->temp), 2);
  2449  06A8  0875               	movf	cw_data_set@p_cw_data,w
  2450  06A9  3E0A               	addlw	10
  2451  06AA  00F0               	movwf	uint8_data_set@p_data
  2452  06AB  3000               	movlw	0
  2453  06AC  00F1               	movwf	uint8_data_set@p_data+1
  2454  06AD  3002               	movlw	2
  2455  06AE  00F4               	movwf	??_cw_data_set
  2456  06AF  0874               	movf	??_cw_data_set,w
  2457  06B0  00F2               	movwf	uint8_data_set@data_len
  2458  06B1  120A  118A  2365  120A  118A  	fcall	_uint8_data_set
  2459                           
  2460                           ;system_protocol.c: 195: packet.payload[index_pos++] = 1;
  2461  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2462  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2463  06B8  0820               	movf	_index_pos,w
  2464  06B9  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2465  06BA  0084               	movwf	4
  2466  06BB  1383               	bcf	3,7	;select IRP bank0
  2467  06BC  0180               	clrf	0
  2468  06BD  0A80               	incf	0,f
  2469  06BE  3001               	movlw	1
  2470  06BF  00F4               	movwf	??_cw_data_set
  2471  06C0  0874               	movf	??_cw_data_set,w
  2472  06C1  07A0               	addwf	_index_pos,f
  2473                           
  2474                           ;system_protocol.c: 196: packet.payload[index_pos++] = cw.obc2;
  2475  06C2  0820               	movf	_index_pos,w
  2476  06C3  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2477  06C4  0084               	movwf	4
  2478  06C5  3000               	movlw	0
  2479  06C6  184D               	btfsc	_cw+12,0
  2480  06C7  3001               	movlw	1
  2481  06C8  0080               	movwf	0
  2482  06C9  3001               	movlw	1
  2483  06CA  00F4               	movwf	??_cw_data_set
  2484  06CB  0874               	movf	??_cw_data_set,w
  2485  06CC  07A0               	addwf	_index_pos,f
  2486                           
  2487                           ;system_protocol.c: 199: packet.payload[index_pos++] = 1;
  2488  06CD  0820               	movf	_index_pos,w
  2489  06CE  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2490  06CF  0084               	movwf	4
  2491  06D0  0180               	clrf	0
  2492  06D1  0A80               	incf	0,f
  2493  06D2  3001               	movlw	1
  2494  06D3  00F4               	movwf	??_cw_data_set
  2495  06D4  0874               	movf	??_cw_data_set,w
  2496  06D5  07A0               	addwf	_index_pos,f
  2497                           
  2498                           ;system_protocol.c: 200: packet.payload[index_pos++] = cw.powmcu;
  2499  06D6  0820               	movf	_index_pos,w
  2500  06D7  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2501  06D8  0084               	movwf	4
  2502  06D9  3000               	movlw	0
  2503  06DA  18CD               	btfsc	_cw+12,1
  2504  06DB  3001               	movlw	1
  2505  06DC  0080               	movwf	0
  2506  06DD  3001               	movlw	1
  2507  06DE  00F4               	movwf	??_cw_data_set
  2508  06DF  0874               	movf	??_cw_data_set,w
  2509  06E0  07A0               	addwf	_index_pos,f
  2510  06E1  0008               	return
  2511  06E2                     __end_of_cw_data_set:	
  2512                           
  2513                           	psect	text13
  2514  024C                     __ptext13:	
  2515 ;; *************** function _LED_data_set *****************
  2516 ;; Defined at:
  2517 ;;		line 80 in file "OBC1_app.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    4
  2538 ;; This function calls:
  2539 ;;		_sent_data_set
  2540 ;; This function is called by:
  2541 ;;		_command
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _LED_data_set
  2547  024C                     _LED_data_set:	
  2548                           
  2549                           ;OBC1_app.c: 82: sent_data_set(0x01, 1, 1);
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _LED_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2553  024C  3001               	movlw	1
  2554  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2555  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2556  024F  00D4               	movwf	sent_data_set@p_data
  2557  0250  3000               	movlw	0
  2558  0251  00D5               	movwf	sent_data_set@p_data+1
  2559  0252  01D6               	clrf	sent_data_set@data_len
  2560  0253  0AD6               	incf	sent_data_set@data_len,f
  2561  0254  01D7               	clrf	sent_data_set@byte_of_data
  2562  0255  0AD7               	incf	sent_data_set@byte_of_data,f
  2563  0256  120A  118A  2593   	fcall	_sent_data_set
  2564  0259  0008               	return
  2565  025A                     __end_of_LED_data_set:	
  2566                           
  2567                           	psect	text14
  2568  0343                     __ptext14:	
  2569 ;; *************** function _I2Ctemp_data_set *****************
  2570 ;; Defined at:
  2571 ;;		line 86 in file "OBC1_app.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  I2CTEMP_data    2   16[BANK0 ] unsigned char [2]
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         0       2       0       0       0
  2587 ;;      Temps:          0       1       0       0       0
  2588 ;;      Totals:         0       3       0       0       0
  2589 ;;Total ram usage:        3 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    4
  2592 ;; This function calls:
  2593 ;;		_getch
  2594 ;;		_sent_data_set
  2595 ;; This function is called by:
  2596 ;;		_command
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _I2Ctemp_data_set
  2602  0343                     _I2Ctemp_data_set:	
  2603                           
  2604                           ;OBC1_app.c: 88: uint8_t I2CTEMP_data[2];
  2605                           ;OBC1_app.c: 89: I2CTEMP_data[0] = getch();
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _I2Ctemp_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2609  0343  120A  118A  228F  120A  118A  	fcall	_getch
  2610  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2612  034A  00DD               	movwf	??_I2Ctemp_data_set
  2613  034B  085D               	movf	??_I2Ctemp_data_set,w
  2614  034C  00DE               	movwf	I2Ctemp_data_set@I2CTEMP_data
  2615                           
  2616                           ;OBC1_app.c: 90: I2CTEMP_data[1] = getch();
  2617  034D  120A  118A  228F  120A  118A  	fcall	_getch
  2618  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0354  00DD               	movwf	??_I2Ctemp_data_set
  2621  0355  085D               	movf	??_I2Ctemp_data_set,w
  2622  0356  00DF               	movwf	I2Ctemp_data_set@I2CTEMP_data+1
  2623                           
  2624                           ;OBC1_app.c: 91: sent_data_set(I2CTEMP_data, 2, 1);
  2625  0357  305E               	movlw	(low (I2Ctemp_data_set@I2CTEMP_data| 0))& (0+255)
  2626  0358  00D4               	movwf	sent_data_set@p_data
  2627  0359  3000               	movlw	0
  2628  035A  00D5               	movwf	sent_data_set@p_data+1
  2629  035B  3002               	movlw	2
  2630  035C  00DD               	movwf	??_I2Ctemp_data_set
  2631  035D  085D               	movf	??_I2Ctemp_data_set,w
  2632  035E  00D6               	movwf	sent_data_set@data_len
  2633  035F  01D7               	clrf	sent_data_set@byte_of_data
  2634  0360  0AD7               	incf	sent_data_set@byte_of_data,f
  2635  0361  120A  118A  2593   	fcall	_sent_data_set
  2636  0364  0008               	return
  2637  0365                     __end_of_I2Ctemp_data_set:	
  2638                           
  2639                           	psect	text15
  2640  0593                     __ptext15:	
  2641 ;; *************** function _sent_data_set *****************
  2642 ;; Defined at:
  2643 ;;		line 141 in file "system_protocol.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  p_data          2    6[BANK0 ] PTR void 
  2646 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  2647 ;;  data_len        1    8[BANK0 ] unsigned char 
  2648 ;;  byte_of_data    1    9[BANK0 ] unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      unsigned char 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       4       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       5       0       0       0
  2663 ;;      Totals:         0       9       0       0       0
  2664 ;;Total ram usage:        9 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    3
  2667 ;; This function calls:
  2668 ;;		___wmul
  2669 ;;		_double_data_set
  2670 ;;		_uint16_data_set
  2671 ;;		_uint8_data_set
  2672 ;; This function is called by:
  2673 ;;		_LED_data_set
  2674 ;;		_I2Ctemp_data_set
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _sent_data_set
  2680  0593                     _sent_data_set:	
  2681                           
  2682                           ;system_protocol.c: 144: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2686  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0595  0857               	movf	sent_data_set@byte_of_data,w
  2689  0596  3E01               	addlw	1
  2690  0597  00F0               	movwf	___wmul@multiplier
  2691  0598  3000               	movlw	0
  2692  0599  1803               	skipnc
  2693  059A  3001               	movlw	1
  2694  059B  00F1               	movwf	___wmul@multiplier+1
  2695  059C  0856               	movf	sent_data_set@data_len,w
  2696  059D  00D8               	movwf	??_sent_data_set
  2697  059E  01D9               	clrf	??_sent_data_set+1
  2698  059F  0858               	movf	??_sent_data_set,w
  2699  05A0  00F2               	movwf	___wmul@multiplicand
  2700  05A1  0859               	movf	??_sent_data_set+1,w
  2701  05A2  00F3               	movwf	___wmul@multiplicand+1
  2702  05A3  120A  118A  2322  120A  118A  	fcall	___wmul
  2703  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2704  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2705  05AA  0820               	movf	_index_pos,w
  2706  05AB  0770               	addwf	?___wmul,w
  2707  05AC  00DA               	movwf	??_sent_data_set+2
  2708  05AD  0871               	movf	?___wmul+1,w
  2709  05AE  1803               	skipnc
  2710  05AF  0A71               	incf	?___wmul+1,w
  2711  05B0  00DB               	movwf	??_sent_data_set+3
  2712  05B1  09DA               	comf	??_sent_data_set+2,f
  2713  05B2  09DB               	comf	??_sent_data_set+3,f
  2714  05B3  0ADA               	incf	??_sent_data_set+2,f
  2715  05B4  1903               	skipnz
  2716  05B5  0ADB               	incf	??_sent_data_set+3,f
  2717  05B6  301E               	movlw	30
  2718  05B7  075A               	addwf	??_sent_data_set+2,w
  2719  05B8  085B               	movf	??_sent_data_set+3,w
  2720  05B9  1803               	skipnc
  2721  05BA  0A5B               	incf	??_sent_data_set+3,w
  2722  05BB  3E00               	addlw	0
  2723  05BC  00DC               	movwf	??_sent_data_set+4
  2724  05BD  1BDC               	btfsc	??_sent_data_set+4,7
  2725  05BE  0008               	return
  2726  05BF  2DE8               	goto	l1591
  2727  05C0                     l1583:	
  2728                           ;system_protocol.c: 151: {
  2729                           ;system_protocol.c: 152: case 1:
  2730                           
  2731                           ;system_protocol.c: 147: }
  2732                           ;system_protocol.c: 150: switch(byte_of_data)
  2733                           
  2734                           ;system_protocol.c: 145: {
  2735                           ;system_protocol.c: 146: return 0xff;
  2736                           ;	Return value of _sent_data_set is never used
  2737                           
  2738                           
  2739                           ;system_protocol.c: 153: uint8_data_set((uint8_t *)p_data, data_len);
  2740  05C0  0854               	movf	sent_data_set@p_data,w
  2741  05C1  00F0               	movwf	uint8_data_set@p_data
  2742  05C2  0855               	movf	sent_data_set@p_data+1,w
  2743  05C3  00F1               	movwf	uint8_data_set@p_data+1
  2744  05C4  0856               	movf	sent_data_set@data_len,w
  2745  05C5  00D8               	movwf	??_sent_data_set
  2746  05C6  0858               	movf	??_sent_data_set,w
  2747  05C7  00F2               	movwf	uint8_data_set@data_len
  2748  05C8  120A  118A  2365   	fcall	_uint8_data_set
  2749                           
  2750                           ;system_protocol.c: 154: break;
  2751  05CB  0008               	return
  2752  05CC                     l1585:	
  2753                           ;system_protocol.c: 155: case 2:
  2754                           
  2755                           
  2756                           ;system_protocol.c: 156: uint16_data_set((uint16_t *)p_data, data_len);
  2757  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2758  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2759  05CE  0854               	movf	sent_data_set@p_data,w
  2760  05CF  00F6               	movwf	uint16_data_set@p_data
  2761  05D0  0855               	movf	sent_data_set@p_data+1,w
  2762  05D1  00F7               	movwf	uint16_data_set@p_data+1
  2763  05D2  0856               	movf	sent_data_set@data_len,w
  2764  05D3  00D8               	movwf	??_sent_data_set
  2765  05D4  0858               	movf	??_sent_data_set,w
  2766  05D5  00F8               	movwf	uint16_data_set@data_len
  2767  05D6  120A  118A  2480   	fcall	_uint16_data_set
  2768                           
  2769                           ;system_protocol.c: 157: break;
  2770  05D9  0008               	return
  2771  05DA                     l1587:	
  2772                           ;system_protocol.c: 158: case 4:
  2773                           
  2774                           
  2775                           ;system_protocol.c: 159: double_data_set((double *)p_data, data_len);
  2776  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2777  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2778  05DC  0854               	movf	sent_data_set@p_data,w
  2779  05DD  00FA               	movwf	double_data_set@p_data
  2780  05DE  0855               	movf	sent_data_set@p_data+1,w
  2781  05DF  00FB               	movwf	double_data_set@p_data+1
  2782  05E0  0856               	movf	sent_data_set@data_len,w
  2783  05E1  00D8               	movwf	??_sent_data_set
  2784  05E2  0858               	movf	??_sent_data_set,w
  2785  05E3  00FC               	movwf	double_data_set@data_len
  2786  05E4  120A  118A  2449   	fcall	_double_data_set
  2787                           
  2788                           ;system_protocol.c: 163: }
  2789                           
  2790                           ;system_protocol.c: 162: return 0xff;
  2791                           ;	Return value of _sent_data_set is never used
  2792                           
  2793                           ;system_protocol.c: 161: default:
  2794                           
  2795                           ;system_protocol.c: 160: break;
  2796  05E7  0008               	return
  2797  05E8                     l1591:	
  2798  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2799  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2800  05EA  0857               	movf	sent_data_set@byte_of_data,w
  2801                           
  2802                           ; Switch size 1, requested type "space"
  2803                           ; Number of cases is 3, Range of values is 1 to 4
  2804                           ; switch strategies available:
  2805                           ; Name         Instructions Cycles
  2806                           ; simple_byte           10     6 (average)
  2807                           ; direct_byte           23    11 (fixed)
  2808                           ; jumptable            263     9 (fixed)
  2809                           ;	Chosen strategy is simple_byte
  2810  05EB  3A01               	xorlw	1	; case 1
  2811  05EC  1903               	skipnz
  2812  05ED  2DC0               	goto	l1583
  2813  05EE  3A03               	xorlw	3	; case 2
  2814  05EF  1903               	skipnz
  2815  05F0  2DCC               	goto	l1585
  2816  05F1  3A06               	xorlw	6	; case 4
  2817  05F2  1903               	skipnz
  2818  05F3  2DDA               	goto	l1587
  2819  05F4  2DF5               	goto	l227
  2820  05F5                     l227:	
  2821                           ;system_protocol.c: 166: return (uint8_t)(30 - index_pos);
  2822                           ;	Return value of _sent_data_set is never used
  2823                           
  2824  05F5  0008               	return
  2825  05F6                     __end_of_sent_data_set:	
  2826                           
  2827                           	psect	text16
  2828  0365                     __ptext16:	
  2829 ;; *************** function _uint8_data_set *****************
  2830 ;; Defined at:
  2831 ;;		line 260 in file "system_protocol.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  p_data          2    0[COMMON] PTR unsigned char 
  2834 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), cw(13), 
  2835 ;;  data_len        1    2[COMMON] unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;		None               void
  2840 ;; Registers used:
  2841 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         3       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0
  2849 ;;      Temps:          1       0       0       0       0
  2850 ;;      Totals:         4       0       0       0       0
  2851 ;;Total ram usage:        4 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_sent_data_set
  2857 ;;		_cw_data_set
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _uint8_data_set
  2863  0365                     _uint8_data_set:	
  2864  0365                     l1435:	
  2865                           ;system_protocol.c: 262: while(data_len)
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  2869                           
  2870  0365  0872               	movf	uint8_data_set@data_len,w
  2871  0366  1903               	btfsc	3,2
  2872  0367  0008               	return
  2873                           
  2874                           ;system_protocol.c: 263: {
  2875                           ;system_protocol.c: 264: packet.payload[index_pos++] = 1;
  2876  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2878  036A  0820               	movf	_index_pos,w
  2879  036B  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2880  036C  0084               	movwf	4
  2881  036D  1383               	bcf	3,7	;select IRP bank0
  2882  036E  0180               	clrf	0
  2883  036F  0A80               	incf	0,f
  2884  0370  3001               	movlw	1
  2885  0371  00F3               	movwf	??_uint8_data_set
  2886  0372  0873               	movf	??_uint8_data_set,w
  2887  0373  07A0               	addwf	_index_pos,f
  2888                           
  2889                           ;system_protocol.c: 265: packet.payload[index_pos++] = *p_data++;
  2890  0374  0870               	movf	uint8_data_set@p_data,w
  2891  0375  0084               	movwf	4
  2892  0376  1783               	bsf	3,7
  2893  0377  1C71               	btfss	uint8_data_set@p_data+1,0
  2894  0378  1383               	bcf	3,7
  2895  0379  0800               	movf	0,w
  2896  037A  00F3               	movwf	??_uint8_data_set
  2897  037B  0820               	movf	_index_pos,w
  2898  037C  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2899  037D  0084               	movwf	4
  2900  037E  0873               	movf	??_uint8_data_set,w
  2901  037F  1383               	bcf	3,7	;select IRP bank0
  2902  0380  0080               	movwf	0
  2903  0381  3001               	movlw	1
  2904  0382  07F0               	addwf	uint8_data_set@p_data,f
  2905  0383  1803               	skipnc
  2906  0384  0AF1               	incf	uint8_data_set@p_data+1,f
  2907  0385  3000               	movlw	0
  2908  0386  07F1               	addwf	uint8_data_set@p_data+1,f
  2909  0387  3001               	movlw	1
  2910  0388  00F3               	movwf	??_uint8_data_set
  2911  0389  0873               	movf	??_uint8_data_set,w
  2912  038A  07A0               	addwf	_index_pos,f
  2913                           
  2914                           ;system_protocol.c: 266: data_len--;
  2915  038B  3001               	movlw	1
  2916  038C  02F2               	subwf	uint8_data_set@data_len,f
  2917  038D  2B65               	goto	l1435
  2918  038E                     __end_of_uint8_data_set:	
  2919                           
  2920                           	psect	text17
  2921  0480                     __ptext17:	
  2922 ;; *************** function _uint16_data_set *****************
  2923 ;; Defined at:
  2924 ;;		line 282 in file "system_protocol.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  p_data          2    6[COMMON] PTR unsigned int 
  2927 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  2928 ;;  data_len        1    8[COMMON] unsigned char 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  buf             3   10[COMMON] unsigned char [3]
  2931 ;;  i               1   13[COMMON] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;		None               void
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         3       0       0       0       0
  2942 ;;      Locals:         4       0       0       0       0
  2943 ;;      Temps:          1       0       0       0       0
  2944 ;;      Totals:         8       0       0       0       0
  2945 ;;Total ram usage:        8 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    2
  2948 ;; This function calls:
  2949 ;;		_uint16_to_byte_array
  2950 ;; This function is called by:
  2951 ;;		_sent_data_set
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _uint16_data_set
  2957  0480                     _uint16_data_set:	
  2958  0480                     l251:	
  2959                           ;system_protocol.c: 284: uint8_t buf[3];
  2960                           ;system_protocol.c: 285: uint8_t i;
  2961                           ;system_protocol.c: 287: while(data_len)
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2965                           
  2966  0480  0878               	movf	uint16_data_set@data_len,w
  2967  0481  1903               	btfsc	3,2
  2968  0482  0008               	return
  2969                           
  2970                           ;system_protocol.c: 288: {
  2971                           ;system_protocol.c: 289: uint16_to_byte_array(p_data++, buf);
  2972  0483  0876               	movf	uint16_data_set@p_data,w
  2973  0484  00F0               	movwf	uint16_to_byte_array@p_data
  2974  0485  0877               	movf	uint16_data_set@p_data+1,w
  2975  0486  00F1               	movwf	uint16_to_byte_array@p_data+1
  2976  0487  307A               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  2977  0488  00F9               	movwf	??_uint16_data_set
  2978  0489  0879               	movf	??_uint16_data_set,w
  2979  048A  00F2               	movwf	uint16_to_byte_array@p_data_array
  2980  048B  120A  118A  238E  120A  118A  	fcall	_uint16_to_byte_array
  2981  0490  3002               	movlw	2
  2982  0491  07F6               	addwf	uint16_data_set@p_data,f
  2983  0492  1803               	skipnc
  2984  0493  0AF7               	incf	uint16_data_set@p_data+1,f
  2985  0494  3000               	movlw	0
  2986  0495  07F7               	addwf	uint16_data_set@p_data+1,f
  2987                           
  2988                           ;system_protocol.c: 291: for(i = 0; i < 3; i++)
  2989  0496  01FD               	clrf	uint16_data_set@i
  2990  0497  3003               	movlw	3
  2991  0498  027D               	subwf	uint16_data_set@i,w
  2992  0499  1803               	btfsc	3,0
  2993  049A  2CB4               	goto	l1457
  2994  049B                     l1449:	
  2995                           
  2996                           ;system_protocol.c: 292: {
  2997                           ;system_protocol.c: 293: packet.payload[index_pos++] = buf[i];
  2998  049B  087D               	movf	uint16_data_set@i,w
  2999  049C  3E7A               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  3000  049D  0084               	movwf	4
  3001  049E  0800               	movf	0,w
  3002  049F  00F9               	movwf	??_uint16_data_set
  3003  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3004  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3005  04A2  0820               	movf	_index_pos,w
  3006  04A3  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3007  04A4  0084               	movwf	4
  3008  04A5  0879               	movf	??_uint16_data_set,w
  3009  04A6  1383               	bcf	3,7	;select IRP bank0
  3010  04A7  0080               	movwf	0
  3011  04A8  3001               	movlw	1
  3012  04A9  00F9               	movwf	??_uint16_data_set
  3013  04AA  0879               	movf	??_uint16_data_set,w
  3014  04AB  07A0               	addwf	_index_pos,f
  3015  04AC  3001               	movlw	1
  3016  04AD  00F9               	movwf	??_uint16_data_set
  3017  04AE  0879               	movf	??_uint16_data_set,w
  3018  04AF  07FD               	addwf	uint16_data_set@i,f
  3019  04B0  3003               	movlw	3
  3020  04B1  027D               	subwf	uint16_data_set@i,w
  3021  04B2  1C03               	skipc
  3022  04B3  2C9B               	goto	l1449
  3023  04B4                     l1457:	
  3024                           
  3025                           ;system_protocol.c: 294: }
  3026                           ;system_protocol.c: 295: data_len--;
  3027  04B4  3001               	movlw	1
  3028  04B5  02F8               	subwf	uint16_data_set@data_len,f
  3029  04B6  2C80               	goto	l251
  3030  04B7                     __end_of_uint16_data_set:	
  3031                           
  3032                           	psect	text18
  3033  038E                     __ptext18:	
  3034 ;; *************** function _uint16_to_byte_array *****************
  3035 ;; Defined at:
  3036 ;;		line 340 in file "system_protocol.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  p_data          2    0[COMMON] PTR unsigned int 
  3039 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  3040 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3041 ;;		 -> uint16_data_set@buf(3), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         3       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0
  3055 ;;      Temps:          3       0       0       0       0
  3056 ;;      Totals:         6       0       0       0       0
  3057 ;;Total ram usage:        6 bytes
  3058 ;; Hardware stack levels used:    2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_uint16_data_set
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _uint16_to_byte_array
  3068  038E                     _uint16_to_byte_array:	
  3069                           
  3070                           ;system_protocol.c: 342: const uint16_t bit_mask = 0b0000000011111111;
  3071                           ;system_protocol.c: 345: p_data_array[0] = 2;
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  3075  038E  3002               	movlw	2
  3076  038F  00F3               	movwf	??_uint16_to_byte_array
  3077  0390  0872               	movf	uint16_to_byte_array@p_data_array,w
  3078  0391  0084               	movwf	4
  3079  0392  0873               	movf	??_uint16_to_byte_array,w
  3080  0393  0080               	movwf	0
  3081                           
  3082                           ;system_protocol.c: 346: p_data_array[1] = (uint8_t)(*p_data >> 8);
  3083  0394  0870               	movf	uint16_to_byte_array@p_data,w
  3084  0395  0084               	movwf	4
  3085  0396  1783               	bsf	3,7
  3086  0397  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  3087  0398  1383               	bcf	3,7
  3088  0399  0800               	movf	0,w
  3089  039A  00F3               	movwf	??_uint16_to_byte_array
  3090  039B  0A84               	incf	4,f
  3091  039C  0800               	movf	0,w
  3092  039D  00F4               	movwf	??_uint16_to_byte_array+1
  3093  039E  0874               	movf	??_uint16_to_byte_array+1,w
  3094  039F  00F5               	movwf	??_uint16_to_byte_array+2
  3095  03A0  0A72               	incf	uint16_to_byte_array@p_data_array,w
  3096  03A1  0084               	movwf	4
  3097  03A2  0875               	movf	??_uint16_to_byte_array+2,w
  3098  03A3  0080               	movwf	0
  3099                           
  3100                           ;system_protocol.c: 347: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  3101  03A4  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  3102  03A5  0084               	movwf	4
  3103  03A6  120A  118A  2003   	fcall	stringdir
  3104  03A9  00F3               	movwf	??_uint16_to_byte_array
  3105  03AA  0870               	movf	uint16_to_byte_array@p_data,w
  3106  03AB  0084               	movwf	4
  3107  03AC  1783               	bsf	3,7
  3108  03AD  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  3109  03AE  1383               	bcf	3,7
  3110  03AF  0800               	movf	0,w
  3111  03B0  0573               	andwf	??_uint16_to_byte_array,w
  3112  03B1  00F4               	movwf	??_uint16_to_byte_array+1
  3113  03B2  0872               	movf	uint16_to_byte_array@p_data_array,w
  3114  03B3  3E02               	addlw	2
  3115  03B4  0084               	movwf	4
  3116  03B5  0874               	movf	??_uint16_to_byte_array+1,w
  3117  03B6  0080               	movwf	0
  3118  03B7  0008               	return
  3119  03B8                     __end_of_uint16_to_byte_array:	
  3120                           
  3121                           	psect	text19
  3122  0449                     __ptext19:	
  3123 ;; *************** function _double_data_set *****************
  3124 ;; Defined at:
  3125 ;;		line 311 in file "system_protocol.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  p_data          2   10[COMMON] PTR 
  3128 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  3129 ;;  data_len        1   12[COMMON] unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  buf             5    0[BANK0 ] unsigned char [5]
  3132 ;;  i               1    5[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         3       0       0       0       0
  3143 ;;      Locals:         0       6       0       0       0
  3144 ;;      Temps:          1       0       0       0       0
  3145 ;;      Totals:         4       6       0       0       0
  3146 ;;Total ram usage:       10 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    1
  3149 ;; This function calls:
  3150 ;;		_double_to_byte_array
  3151 ;; This function is called by:
  3152 ;;		_sent_data_set
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _double_data_set
  3158  0449                     _double_data_set:	
  3159  0449                     l259:	
  3160                           ;system_protocol.c: 313: uint8_t buf[5];
  3161                           ;system_protocol.c: 314: uint8_t i;
  3162                           ;system_protocol.c: 316: while(data_len)
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3166                           
  3167  0449  087C               	movf	double_data_set@data_len,w
  3168  044A  1903               	btfsc	3,2
  3169  044B  0008               	return
  3170                           
  3171                           ;system_protocol.c: 317: {
  3172                           ;system_protocol.c: 318: double_to_byte_array(p_data++, buf);
  3173  044C  087A               	movf	double_data_set@p_data,w
  3174  044D  00F0               	movwf	double_to_byte_array@p_data
  3175  044E  087B               	movf	double_data_set@p_data+1,w
  3176  044F  00F1               	movwf	double_to_byte_array@p_data+1
  3177  0450  304E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  3178  0451  00FD               	movwf	??_double_data_set
  3179  0452  087D               	movf	??_double_data_set,w
  3180  0453  00F2               	movwf	double_to_byte_array@p_data_array
  3181  0454  120A  118A  23B8  120A  118A  	fcall	_double_to_byte_array
  3182  0459  3003               	movlw	3
  3183  045A  07FA               	addwf	double_data_set@p_data,f
  3184  045B  1803               	skipnc
  3185  045C  0AFB               	incf	double_data_set@p_data+1,f
  3186  045D  3000               	movlw	0
  3187  045E  07FB               	addwf	double_data_set@p_data+1,f
  3188                           
  3189                           ;system_protocol.c: 320: for(i = 0; i < 5; i++)
  3190  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0461  01D3               	clrf	double_data_set@i
  3193  0462  3005               	movlw	5
  3194  0463  0253               	subwf	double_data_set@i,w
  3195  0464  1803               	btfsc	3,0
  3196  0465  2C7D               	goto	l1479
  3197  0466                     l1471:	
  3198                           
  3199                           ;system_protocol.c: 321: {
  3200                           ;system_protocol.c: 322: packet.payload[index_pos++] = buf[i];
  3201  0466  0853               	movf	double_data_set@i,w
  3202  0467  3E4E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  3203  0468  0084               	movwf	4
  3204  0469  1383               	bcf	3,7	;select IRP bank0
  3205  046A  0800               	movf	0,w
  3206  046B  00FD               	movwf	??_double_data_set
  3207  046C  0820               	movf	_index_pos,w
  3208  046D  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3209  046E  0084               	movwf	4
  3210  046F  087D               	movf	??_double_data_set,w
  3211  0470  0080               	movwf	0
  3212  0471  3001               	movlw	1
  3213  0472  00FD               	movwf	??_double_data_set
  3214  0473  087D               	movf	??_double_data_set,w
  3215  0474  07A0               	addwf	_index_pos,f
  3216  0475  3001               	movlw	1
  3217  0476  00FD               	movwf	??_double_data_set
  3218  0477  087D               	movf	??_double_data_set,w
  3219  0478  07D3               	addwf	double_data_set@i,f
  3220  0479  3005               	movlw	5
  3221  047A  0253               	subwf	double_data_set@i,w
  3222  047B  1C03               	skipc
  3223  047C  2C66               	goto	l1471
  3224  047D                     l1479:	
  3225                           
  3226                           ;system_protocol.c: 323: }
  3227                           ;system_protocol.c: 324: data_len--;
  3228  047D  3001               	movlw	1
  3229  047E  02FC               	subwf	double_data_set@data_len,f
  3230  047F  2C49               	goto	l259
  3231  0480                     __end_of_double_data_set:	
  3232                           
  3233                           	psect	text20
  3234  03B8                     __ptext20:	
  3235 ;; *************** function _double_to_byte_array *****************
  3236 ;; Defined at:
  3237 ;;		line 362 in file "system_protocol.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  p_data          2    0[COMMON] PTR 
  3240 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  3241 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3242 ;;		 -> double_data_set@buf(5), 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  converter       4    5[COMMON] struct .
  3245 ;;  i               1    9[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         3       0       0       0       0
  3256 ;;      Locals:         5       0       0       0       0
  3257 ;;      Temps:          2       0       0       0       0
  3258 ;;      Totals:        10       0       0       0       0
  3259 ;;Total ram usage:       10 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_double_data_set
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _double_to_byte_array
  3270  03B8                     _double_to_byte_array:	
  3271                           
  3272                           ;system_protocol.c: 364: uint8_t i;
  3273                           ;system_protocol.c: 365: union
  3274                           ;system_protocol.c: 366: {
  3275                           ;system_protocol.c: 367: double data;
  3276                           ;system_protocol.c: 368: uint8_t array[4];
  3277                           ;system_protocol.c: 369: } converter;
  3278                           ;system_protocol.c: 372: converter.data = *p_data;
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  3282  03B8  0870               	movf	double_to_byte_array@p_data,w
  3283  03B9  0084               	movwf	4
  3284  03BA  1783               	bsf	3,7
  3285  03BB  1C71               	btfss	double_to_byte_array@p_data+1,0
  3286  03BC  1383               	bcf	3,7
  3287  03BD  0800               	movf	0,w
  3288  03BE  00F5               	movwf	double_to_byte_array@converter
  3289  03BF  0A84               	incf	4,f
  3290  03C0  0800               	movf	0,w
  3291  03C1  00F6               	movwf	double_to_byte_array@converter+1
  3292  03C2  0A84               	incf	4,f
  3293  03C3  0800               	movf	0,w
  3294  03C4  00F7               	movwf	double_to_byte_array@converter+2
  3295                           
  3296                           ;system_protocol.c: 375: p_data_array[0] = 4;
  3297  03C5  3004               	movlw	4
  3298  03C6  00F3               	movwf	??_double_to_byte_array
  3299  03C7  0872               	movf	double_to_byte_array@p_data_array,w
  3300  03C8  0084               	movwf	4
  3301  03C9  0873               	movf	??_double_to_byte_array,w
  3302  03CA  1383               	bcf	3,7	;select IRP bank0
  3303  03CB  0080               	movwf	0
  3304                           
  3305                           ;system_protocol.c: 378: for(i = 0; i < 4; i++)
  3306  03CC  01F9               	clrf	double_to_byte_array@i
  3307  03CD                     L1:	
  3308  03CD  3004               	movlw	4
  3309  03CE  0279               	subwf	double_to_byte_array@i,w
  3310  03CF  1803               	btfsc	3,0
  3311  03D0  0008               	return
  3312                           
  3313                           ;system_protocol.c: 379: {
  3314                           ;system_protocol.c: 380: p_data_array[i + 1] = converter.array[i];
  3315  03D1  0879               	movf	double_to_byte_array@i,w
  3316  03D2  3E75               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  3317  03D3  0084               	movwf	4
  3318  03D4  0800               	movf	0,w
  3319  03D5  00F3               	movwf	??_double_to_byte_array
  3320  03D6  0879               	movf	double_to_byte_array@i,w
  3321  03D7  3E01               	addlw	1
  3322  03D8  0772               	addwf	double_to_byte_array@p_data_array,w
  3323  03D9  00F4               	movwf	??_double_to_byte_array+1
  3324  03DA  0874               	movf	??_double_to_byte_array+1,w
  3325  03DB  0084               	movwf	4
  3326  03DC  0873               	movf	??_double_to_byte_array,w
  3327  03DD  0080               	movwf	0
  3328  03DE  3001               	movlw	1
  3329  03DF  00F3               	movwf	??_double_to_byte_array
  3330  03E0  0873               	movf	??_double_to_byte_array,w
  3331  03E1  07F9               	addwf	double_to_byte_array@i,f
  3332  03E2  2BCD               	goto	L1
  3333  03E3                     __end_of_double_to_byte_array:	
  3334                           
  3335                           	psect	text21
  3336  0322                     __ptext21:	
  3337 ;; *************** function ___wmul *****************
  3338 ;; Defined at:
  3339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  multiplier      2    0[COMMON] unsigned int 
  3342 ;;  multiplicand    2    2[COMMON] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  product         2    4[COMMON] unsigned int 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    0[COMMON] unsigned int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         4       0       0       0       0
  3355 ;;      Locals:         2       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         6       0       0       0       0
  3358 ;;Total ram usage:        6 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_sent_data_set
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           
  3368                           ;psect for function ___wmul
  3369  0322                     ___wmul:	
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3373  0322  01F4               	clrf	___wmul@product
  3374  0323  01F5               	clrf	___wmul@product+1
  3375  0324                     l1509:	
  3376  0324  1C70               	btfss	___wmul@multiplier,0
  3377  0325  2B2C               	goto	l467
  3378  0326  0872               	movf	___wmul@multiplicand,w
  3379  0327  07F4               	addwf	___wmul@product,f
  3380  0328  1803               	skipnc
  3381  0329  0AF5               	incf	___wmul@product+1,f
  3382  032A  0873               	movf	___wmul@multiplicand+1,w
  3383  032B  07F5               	addwf	___wmul@product+1,f
  3384  032C                     l467:	
  3385  032C  3001               	movlw	1
  3386  032D                     u695:	
  3387  032D  1003               	clrc
  3388  032E  0DF2               	rlf	___wmul@multiplicand,f
  3389  032F  0DF3               	rlf	___wmul@multiplicand+1,f
  3390  0330  3EFF               	addlw	-1
  3391  0331  1D03               	skipz
  3392  0332  2B2D               	goto	u695
  3393  0333  3001               	movlw	1
  3394  0334                     u705:	
  3395  0334  1003               	clrc
  3396  0335  0CF1               	rrf	___wmul@multiplier+1,f
  3397  0336  0CF0               	rrf	___wmul@multiplier,f
  3398  0337  3EFF               	addlw	-1
  3399  0338  1D03               	skipz
  3400  0339  2B34               	goto	u705
  3401  033A  0870               	movf	___wmul@multiplier,w
  3402  033B  0471               	iorwf	___wmul@multiplier+1,w
  3403  033C  1D03               	btfss	3,2
  3404  033D  2B24               	goto	l1509
  3405  033E  0875               	movf	___wmul@product+1,w
  3406  033F  00F1               	movwf	?___wmul+1
  3407  0340  0874               	movf	___wmul@product,w
  3408  0341  00F0               	movwf	?___wmul
  3409  0342  0008               	return
  3410  0343                     __end_of___wmul:	
  3411                           
  3412                           	psect	text22
  3413  028F                     __ptext22:	
  3414 ;; *************** function _getch *****************
  3415 ;; Defined at:
  3416 ;;		line 90 in file "uart_serial.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  count           2    0[COMMON] int 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      unsigned char 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, btemp+1
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         2       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         2       0       0       0       0
  3434 ;;Total ram usage:        2 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_I2Ctemp_data_set
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _getch
  3445  028F                     _getch:	
  3446                           
  3447                           ;uart_serial.c: 92: int count = 0;
  3448                           
  3449                           ;incstack = 0
  3450                           ; Regs used in _getch: [wreg+status,2+btemp+1]
  3451  028F  01F0               	clrf	getch@count
  3452  0290  01F1               	clrf	getch@count+1
  3453                           
  3454                           ;uart_serial.c: 93: while(!RCIF && count <= 100) count++;
  3455  0291  2A98               	goto	l1571
  3456  0292                     l1569:	
  3457  0292  3001               	movlw	1
  3458  0293  07F0               	addwf	getch@count,f
  3459  0294  1803               	skipnc
  3460  0295  0AF1               	incf	getch@count+1,f
  3461  0296  3000               	movlw	0
  3462  0297  07F1               	addwf	getch@count+1,f
  3463  0298                     l1571:	
  3464  0298  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0299  1303               	bcf	3,6	;RP1=0, select bank0
  3466  029A  1A8C               	btfsc	12,5	;volatile
  3467  029B  2AA7               	goto	l1575
  3468  029C  0871               	movf	getch@count+1,w
  3469  029D  3A80               	xorlw	128
  3470  029E  00FF               	movwf	127
  3471  029F  3080               	movlw	128
  3472  02A0  027F               	subwf	127,w
  3473  02A1  1D03               	skipz
  3474  02A2  2AA5               	goto	u785
  3475  02A3  3065               	movlw	101
  3476  02A4  0270               	subwf	getch@count,w
  3477  02A5                     u785:	
  3478  02A5  1C03               	skipc
  3479  02A6  2A92               	goto	l1569
  3480  02A7                     l1575:	
  3481                           
  3482                           ;uart_serial.c: 95: return RCREG;
  3483  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3484  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3485  02A9  081A               	movf	26,w	;volatile
  3486  02AA  0008               	return
  3487  02AB                     __end_of_getch:	
  3488                           
  3489                           	psect	text23
  3490  0235                     __ptext23:	
  3491 ;; *************** function _ad_con_init *****************
  3492 ;; Defined at:
  3493 ;;		line 49 in file "AD_value.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _ad_con_init
  3522  0235                     _ad_con_init:	
  3523                           
  3524                           ;AD_value.c: 52: PORTAbits.RA0 = 0;
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _ad_con_init: [wreg]
  3528  0235  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0236  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0237  1005               	bcf	5,0	;volatile
  3531                           
  3532                           ;AD_value.c: 53: PORTAbits.RA3 = 0;
  3533  0238  1185               	bcf	5,3	;volatile
  3534                           
  3535                           ;AD_value.c: 54: TRISAbits.TRISA0 = 1;
  3536  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3537  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3538  023B  1405               	bsf	5,0	;volatile
  3539                           
  3540                           ;AD_value.c: 55: TRISAbits.TRISA3 = 1;
  3541  023C  1585               	bsf	5,3	;volatile
  3542                           
  3543                           ;AD_value.c: 56: ADCON1 = 0b00000001;
  3544  023D  3001               	movlw	1
  3545  023E  009F               	movwf	31	;volatile
  3546  023F  0008               	return
  3547  0240                     __end_of_ad_con_init:	
  3548                           
  3549                           	psect	text24
  3550  026A                     __ptext24:	
  3551 ;; *************** function _POW_status *****************
  3552 ;; Defined at:
  3553 ;;		line 44 in file "OBC1_app.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;		None               void
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    1
  3574 ;; This function calls:
  3575 ;;		_MCLR_reset
  3576 ;;		_spi_master_send
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function _POW_status
  3584  026A                     _POW_status:	
  3585                           
  3586                           ;OBC1_app.c: 46: spi_master_send(POW, 0x01);
  3587                           
  3588                           ;incstack = 0
  3589                           ; Regs used in _POW_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3590  026A  01F0               	clrf	spi_master_send@data
  3591  026B  0AF0               	incf	spi_master_send@data,f
  3592  026C  3004               	movlw	4
  3593  026D  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  3594                           
  3595                           ;OBC1_app.c: 47: if(PORTDbits.RD1==0) MCLR_reset(0x06);
  3596  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0274  1888               	btfsc	8,1	;volatile
  3599  0275  0008               	return
  3600  0276  3006               	movlw	6
  3601  0277  120A  118A  22AB   	fcall	_MCLR_reset
  3602  027A  0008               	return
  3603  027B                     __end_of_POW_status:	
  3604                           
  3605                           	psect	text25
  3606  025A                     __ptext25:	
  3607 ;; *************** function _MCLR_init *****************
  3608 ;; Defined at:
  3609 ;;		line 35 in file "MCLR_reset.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  nin             2    0[COMMON] PTR unsigned char 
  3614 ;;		 -> RAM(512), 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         2       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         2       0       0       0       0
  3628 ;;Total ram usage:        2 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _MCLR_init
  3639  025A                     _MCLR_init:	
  3640                           
  3641                           ;MCLR_reset.c: 37: uint8_t *nin;
  3642                           ;MCLR_reset.c: 38: nin = 0x09;
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in _MCLR_init: [wregfsr0]
  3646  025A  3009               	movlw	9
  3647  025B  00F0               	movwf	MCLR_init@nin
  3648  025C  3000               	movlw	0
  3649  025D  00F1               	movwf	MCLR_init@nin+1
  3650                           
  3651                           ;MCLR_reset.c: 41: TRISEbits.TRISE1 = 0;
  3652  025E  1683               	bsf	3,5	;RP0=1, select bank1
  3653  025F  1303               	bcf	3,6	;RP1=0, select bank1
  3654  0260  1089               	bcf	9,1	;volatile
  3655                           
  3656                           ;MCLR_reset.c: 42: TRISEbits.TRISE0 = 0;
  3657  0261  1009               	bcf	9,0	;volatile
  3658                           
  3659                           ;MCLR_reset.c: 45: *nin = 0x03;
  3660  0262  0870               	movf	MCLR_init@nin,w
  3661  0263  0084               	movwf	4
  3662  0264  1383               	bcf	3,7
  3663  0265  1871               	btfsc	MCLR_init@nin+1,0
  3664  0266  1783               	bsf	3,7
  3665  0267  3003               	movlw	3
  3666  0268  0080               	movwf	0
  3667  0269  0008               	return
  3668  026A                     __end_of_MCLR_init:	
  3669                           
  3670                           	psect	text26
  3671  02C8                     __ptext26:	
  3672 ;; *************** function _COM_status *****************
  3673 ;; Defined at:
  3674 ;;		line 32 in file "OBC1_app.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  COM_stat        1    7[COMMON] unsigned char 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      unsigned char 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3688 ;;      Params:         0       0       0       0       0
  3689 ;;      Locals:         1       0       0       0       0
  3690 ;;      Temps:          1       0       0       0       0
  3691 ;;      Totals:         2       0       0       0       0
  3692 ;;Total ram usage:        2 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    1
  3695 ;; This function calls:
  3696 ;;		_MCLR_reset
  3697 ;;		_spi_master_receive
  3698 ;;		_spi_master_send
  3699 ;; This function is called by:
  3700 ;;		_main
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           
  3705                           ;psect for function _COM_status
  3706  02C8                     _COM_status:	
  3707                           
  3708                           ;OBC1_app.c: 34: uint8_t COM_stat = 0;
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _COM_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3712  02C8  01F7               	clrf	COM_status@COM_stat
  3713                           
  3714                           ;OBC1_app.c: 35: spi_master_send(COM, 0x01);
  3715  02C9  01F0               	clrf	spi_master_send@data
  3716  02CA  0AF0               	incf	spi_master_send@data,f
  3717  02CB  3003               	movlw	3
  3718  02CC  120A  118A  2544  120A  118A  	fcall	_spi_master_send
  3719                           
  3720                           ;OBC1_app.c: 36: COM_stat = spi_master_receive(COM);
  3721  02D1  3003               	movlw	3
  3722  02D2  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3723  02D7  00F6               	movwf	??_COM_status
  3724  02D8  0876               	movf	??_COM_status,w
  3725  02D9  00F7               	movwf	COM_status@COM_stat
  3726                           
  3727                           ;OBC1_app.c: 37: if(COM_stat == 0x00 || COM_stat == 0xFF)
  3728  02DA  0877               	movf	COM_status@COM_stat,w
  3729  02DB  1D03               	btfss	3,2
  3730  02DC  0A77               	incf	COM_status@COM_stat,w
  3731  02DD  1D03               	btfss	3,2
  3732  02DE  2AE3               	goto	l1695
  3733                           
  3734                           ;OBC1_app.c: 38: {
  3735                           ;OBC1_app.c: 39: MCLR_reset(0x05);
  3736  02DF  3005               	movlw	5
  3737  02E0  120A  118A  22AB   	fcall	_MCLR_reset
  3738  02E3                     l1695:	
  3739                           
  3740                           ;OBC1_app.c: 40: }
  3741                           ;OBC1_app.c: 41: return COM_stat;
  3742  02E3  0877               	movf	COM_status@COM_stat,w
  3743  02E4  0008               	return
  3744  02E5                     __end_of_COM_status:	
  3745                           
  3746                           	psect	text27
  3747  0544                     __ptext27:	
  3748 ;; *************** function _spi_master_send *****************
  3749 ;; Defined at:
  3750 ;;		line 154 in file "spi_master.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  destination     1    wreg     enum E1099
  3753 ;;  data            1    0[COMMON] unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  destination     1    5[COMMON] enum E1099
  3756 ;;  timeout_coun    2    3[COMMON] unsigned int 
  3757 ;;  dummy           1    2[COMMON] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;		None               void
  3760 ;; Registers used:
  3761 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         1       0       0       0       0
  3768 ;;      Locals:         4       0       0       0       0
  3769 ;;      Temps:          1       0       0       0       0
  3770 ;;      Totals:         6       0       0       0       0
  3771 ;;Total ram usage:        6 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_send_payload
  3777 ;;		_packet_send_master
  3778 ;;		_COM_status
  3779 ;;		_POW_status
  3780 ;;		_command
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _spi_master_send
  3786  0544                     _spi_master_send:	
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  3790                           ;spi_master_send@destination stored from wreg
  3791  0544  00F5               	movwf	spi_master_send@destination
  3792                           
  3793                           ;spi_master.c: 156: uint8_t dummy;
  3794                           ;spi_master.c: 157: uint16_t timeout_counter = 1000;
  3795  0545  30E8               	movlw	232
  3796  0546  00F3               	movwf	spi_master_send@timeout_counter
  3797  0547  3003               	movlw	3
  3798  0548  00F4               	movwf	spi_master_send@timeout_counter+1
  3799                           
  3800                           ;spi_master.c: 160: dummy = SSPBUF;
  3801  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3802  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3803  054B  0813               	movf	19,w	;volatile
  3804  054C  00F1               	movwf	??_spi_master_send
  3805  054D  0871               	movf	??_spi_master_send,w
  3806  054E  00F2               	movwf	spi_master_send@dummy
  3807                           
  3808                           ;spi_master.c: 163: switch(destination)
  3809  054F  2D56               	goto	l1375
  3810  0550                     l115:	
  3811                           ;spi_master.c: 166: while(PORTDbits.RD0 == 0){;}
  3812                           
  3813                           ;spi_master.c: 164: {
  3814                           ;spi_master.c: 165: case COM:
  3815                           
  3816  0550  1808               	btfsc	8,0	;volatile
  3817  0551  2D63               	goto	l1379
  3818  0552  2D50               	goto	l115
  3819  0553                     l120:	
  3820                           ;spi_master.c: 169: while(PORTDbits.RD1 == 0){;}
  3821                           
  3822                           ;spi_master.c: 168: case POW:
  3823                           
  3824                           ;spi_master.c: 167: break;
  3825                           
  3826  0553  1888               	btfsc	8,1	;volatile
  3827  0554  2D63               	goto	l1379
  3828  0555  2D53               	goto	l120
  3829  0556                     l1375:	
  3830                           ;spi_master.c: 171: }
  3831                           
  3832                           ;spi_master.c: 170: break;
  3833                           
  3834  0556  0875               	movf	spi_master_send@destination,w
  3835                           
  3836                           ; Switch size 1, requested type "space"
  3837                           ; Number of cases is 2, Range of values is 3 to 4
  3838                           ; switch strategies available:
  3839                           ; Name         Instructions Cycles
  3840                           ; simple_byte            7     4 (average)
  3841                           ; direct_byte           17    11 (fixed)
  3842                           ; jumptable            263     9 (fixed)
  3843                           ;	Chosen strategy is simple_byte
  3844  0557  3A03               	xorlw	3	; case 3
  3845  0558  1903               	skipnz
  3846  0559  2D50               	goto	l115
  3847  055A  3A07               	xorlw	7	; case 4
  3848  055B  1903               	skipnz
  3849  055C  2D53               	goto	l120
  3850  055D  2D63               	goto	l1379
  3851                           
  3852                           ;spi_master.c: 174: switch(destination)
  3853  055E  2D63               	goto	l1379
  3854  055F                     l124:	
  3855                           ;spi_master.c: 175: {
  3856                           ;spi_master.c: 176: case COM:
  3857                           
  3858                           
  3859                           ;spi_master.c: 177: PORTCbits.RC0 = 0;
  3860  055F  1007               	bcf	7,0	;volatile
  3861                           
  3862                           ;spi_master.c: 178: break;
  3863  0560  2D6B               	goto	l1381
  3864  0561                     l126:	
  3865                           ;spi_master.c: 179: case POW:
  3866                           
  3867                           
  3868                           ;spi_master.c: 180: PORTCbits.RC1 = 0;
  3869  0561  1087               	bcf	7,1	;volatile
  3870                           
  3871                           ;spi_master.c: 182: }
  3872                           
  3873                           ;spi_master.c: 181: break;
  3874  0562  2D6B               	goto	l1381
  3875  0563                     l1379:	
  3876  0563  0875               	movf	spi_master_send@destination,w
  3877                           
  3878                           ; Switch size 1, requested type "space"
  3879                           ; Number of cases is 2, Range of values is 3 to 4
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte            7     4 (average)
  3883                           ; direct_byte           17    11 (fixed)
  3884                           ; jumptable            263     9 (fixed)
  3885                           ;	Chosen strategy is simple_byte
  3886  0564  3A03               	xorlw	3	; case 3
  3887  0565  1903               	skipnz
  3888  0566  2D5F               	goto	l124
  3889  0567  3A07               	xorlw	7	; case 4
  3890  0568  1903               	skipnz
  3891  0569  2D61               	goto	l126
  3892  056A  2D6B               	goto	l1381
  3893  056B                     l1381:	
  3894                           
  3895                           ;spi_master.c: 185: SSPBUF = data;
  3896  056B  0870               	movf	spi_master_send@data,w
  3897  056C  0093               	movwf	19	;volatile
  3898  056D                     l1389:	
  3899                           ;spi_master.c: 188: while(SSPSTATbits.BF == 0)
  3900                           
  3901  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3902  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3903  056F  1814               	btfsc	20,0	;volatile
  3904  0570  2D85               	goto	l1393
  3905                           
  3906                           ;spi_master.c: 189: {
  3907                           ;spi_master.c: 191: if(timeout_counter == 0)
  3908  0571  0873               	movf	spi_master_send@timeout_counter,w
  3909  0572  0474               	iorwf	spi_master_send@timeout_counter+1,w
  3910  0573  1903               	btfsc	3,2
  3911  0574  0008               	return
  3912                           
  3913                           ;spi_master.c: 194: }
  3914                           ;spi_master.c: 197: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3915                           
  3916                           ;spi_master.c: 192: {
  3917                           ;spi_master.c: 193: return;
  3918  0575  2D76               	nop2	;2 cycle nop
  3919  0576  2D77               	nop2	;2 cycle nop
  3920  0577  0000               	nop
  3921                           
  3922                           ;spi_master.c: 198: timeout_counter--;
  3923  0578  3001               	movlw	1
  3924  0579  02F3               	subwf	spi_master_send@timeout_counter,f
  3925  057A  3000               	movlw	0
  3926  057B  1C03               	skipc
  3927  057C  03F4               	decf	spi_master_send@timeout_counter+1,f
  3928  057D  02F4               	subwf	spi_master_send@timeout_counter+1,f
  3929  057E  2D6D               	goto	l1389
  3930  057F                     l133:	
  3931                           ;spi_master.c: 203: {
  3932                           ;spi_master.c: 204: case COM:
  3933                           
  3934                           ;spi_master.c: 199: }
  3935                           ;spi_master.c: 202: switch(destination)
  3936                           
  3937                           
  3938                           ;spi_master.c: 205: PORTCbits.RC0 = 1;
  3939  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0580  1407               	bsf	7,0	;volatile
  3941                           
  3942                           ;spi_master.c: 206: break;
  3943  0581  2D8D               	goto	l1395
  3944  0582                     l135:	
  3945                           ;spi_master.c: 207: case POW:
  3946                           
  3947                           
  3948                           ;spi_master.c: 208: PORTCbits.RC1 = 1;
  3949  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3950  0583  1487               	bsf	7,1	;volatile
  3951                           
  3952                           ;spi_master.c: 210: }
  3953                           
  3954                           ;spi_master.c: 209: break;
  3955  0584  2D8D               	goto	l1395
  3956  0585                     l1393:	
  3957  0585  0875               	movf	spi_master_send@destination,w
  3958                           
  3959                           ; Switch size 1, requested type "space"
  3960                           ; Number of cases is 2, Range of values is 3 to 4
  3961                           ; switch strategies available:
  3962                           ; Name         Instructions Cycles
  3963                           ; simple_byte            7     4 (average)
  3964                           ; direct_byte           17    11 (fixed)
  3965                           ; jumptable            263     9 (fixed)
  3966                           ;	Chosen strategy is simple_byte
  3967  0586  3A03               	xorlw	3	; case 3
  3968  0587  1903               	skipnz
  3969  0588  2D7F               	goto	l133
  3970  0589  3A07               	xorlw	7	; case 4
  3971  058A  1903               	skipnz
  3972  058B  2D82               	goto	l135
  3973  058C  2D8D               	goto	l1395
  3974  058D                     l1395:	
  3975                           
  3976                           ;spi_master.c: 213: dummy = SSPBUF;
  3977  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3978  058E  0813               	movf	19,w	;volatile
  3979  058F  00F1               	movwf	??_spi_master_send
  3980  0590  0871               	movf	??_spi_master_send,w
  3981  0591  00F2               	movwf	spi_master_send@dummy
  3982  0592  0008               	return
  3983  0593                     __end_of_spi_master_send:	
  3984                           
  3985                           	psect	text28
  3986  04F9                     __ptext28:	
  3987 ;; *************** function _spi_master_receive *****************
  3988 ;; Defined at:
  3989 ;;		line 80 in file "spi_master.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  destination     1    wreg     enum E1099
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  destination     1    4[COMMON] enum E1099
  3994 ;;  timeout_coun    2    2[COMMON] unsigned int 
  3995 ;;  dummy           1    1[COMMON] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         4       0       0       0       0
  4007 ;;      Temps:          1       0       0       0       0
  4008 ;;      Totals:         5       0       0       0       0
  4009 ;;Total ram usage:        5 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_get_cw_data
  4015 ;;		_COM_status
  4016 ;;		_receive_payload
  4017 ;;		_packet_receive_master
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function _spi_master_receive
  4023  04F9                     _spi_master_receive:	
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  4027                           ;spi_master_receive@destination stored from wreg
  4028  04F9  00F4               	movwf	spi_master_receive@destination
  4029                           
  4030                           ;spi_master.c: 82: uint8_t dummy;
  4031                           ;spi_master.c: 83: uint16_t timeout_counter = 1000;
  4032  04FA  30E8               	movlw	232
  4033  04FB  00F2               	movwf	spi_master_receive@timeout_counter
  4034  04FC  3003               	movlw	3
  4035  04FD  00F3               	movwf	spi_master_receive@timeout_counter+1
  4036                           
  4037                           ;spi_master.c: 86: dummy = SSPBUF;
  4038  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  4039  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0500  0813               	movf	19,w	;volatile
  4041  0501  00F0               	movwf	??_spi_master_receive
  4042  0502  0870               	movf	??_spi_master_receive,w
  4043  0503  00F1               	movwf	spi_master_receive@dummy
  4044                           
  4045                           ;spi_master.c: 89: switch(destination)
  4046  0504  2D0B               	goto	l1543
  4047  0505                     l90:	
  4048                           ;spi_master.c: 92: while(PORTDbits.RD0 == 0){;}
  4049                           
  4050                           ;spi_master.c: 90: {
  4051                           ;spi_master.c: 91: case COM:
  4052                           
  4053  0505  1808               	btfsc	8,0	;volatile
  4054  0506  2D18               	goto	l1547
  4055  0507  2D05               	goto	l90
  4056  0508                     l95:	
  4057                           ;spi_master.c: 95: while(PORTDbits.RD1 == 0){;}
  4058                           
  4059                           ;spi_master.c: 94: case POW:
  4060                           
  4061                           ;spi_master.c: 93: break;
  4062                           
  4063  0508  1888               	btfsc	8,1	;volatile
  4064  0509  2D18               	goto	l1547
  4065  050A  2D08               	goto	l95
  4066  050B                     l1543:	
  4067                           ;spi_master.c: 97: }
  4068                           
  4069                           ;spi_master.c: 96: break;
  4070                           
  4071  050B  0874               	movf	spi_master_receive@destination,w
  4072                           
  4073                           ; Switch size 1, requested type "space"
  4074                           ; Number of cases is 2, Range of values is 3 to 4
  4075                           ; switch strategies available:
  4076                           ; Name         Instructions Cycles
  4077                           ; simple_byte            7     4 (average)
  4078                           ; direct_byte           17    11 (fixed)
  4079                           ; jumptable            263     9 (fixed)
  4080                           ;	Chosen strategy is simple_byte
  4081  050C  3A03               	xorlw	3	; case 3
  4082  050D  1903               	skipnz
  4083  050E  2D05               	goto	l90
  4084  050F  3A07               	xorlw	7	; case 4
  4085  0510  1903               	skipnz
  4086  0511  2D08               	goto	l95
  4087  0512  2D18               	goto	l1547
  4088                           
  4089                           ;spi_master.c: 100: switch(destination)
  4090  0513  2D18               	goto	l1547
  4091  0514                     l99:	
  4092                           ;spi_master.c: 101: {
  4093                           ;spi_master.c: 102: case COM:
  4094                           
  4095                           
  4096                           ;spi_master.c: 103: PORTCbits.RC0 = 0;
  4097  0514  1007               	bcf	7,0	;volatile
  4098                           
  4099                           ;spi_master.c: 104: break;
  4100  0515  2D20               	goto	l1549
  4101  0516                     l101:	
  4102                           ;spi_master.c: 105: case POW:
  4103                           
  4104                           
  4105                           ;spi_master.c: 106: PORTCbits.RC1 = 0;
  4106  0516  1087               	bcf	7,1	;volatile
  4107                           
  4108                           ;spi_master.c: 108: }
  4109                           
  4110                           ;spi_master.c: 107: break;
  4111  0517  2D20               	goto	l1549
  4112  0518                     l1547:	
  4113  0518  0874               	movf	spi_master_receive@destination,w
  4114                           
  4115                           ; Switch size 1, requested type "space"
  4116                           ; Number of cases is 2, Range of values is 3 to 4
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte            7     4 (average)
  4120                           ; direct_byte           17    11 (fixed)
  4121                           ; jumptable            263     9 (fixed)
  4122                           ;	Chosen strategy is simple_byte
  4123  0519  3A03               	xorlw	3	; case 3
  4124  051A  1903               	skipnz
  4125  051B  2D14               	goto	l99
  4126  051C  3A07               	xorlw	7	; case 4
  4127  051D  1903               	skipnz
  4128  051E  2D16               	goto	l101
  4129  051F  2D20               	goto	l1549
  4130  0520                     l1549:	
  4131                           
  4132                           ;spi_master.c: 112: SSPBUF = 0x00;
  4133  0520  0193               	clrf	19	;volatile
  4134  0521                     l1557:	
  4135                           ;spi_master.c: 115: while(SSPSTATbits.BF == 0)
  4136                           
  4137  0521  1683               	bsf	3,5	;RP0=1, select bank1
  4138  0522  1303               	bcf	3,6	;RP1=0, select bank1
  4139  0523  1814               	btfsc	20,0	;volatile
  4140  0524  2D39               	goto	l1561
  4141                           
  4142                           ;spi_master.c: 116: {
  4143                           ;spi_master.c: 118: if(timeout_counter == 0)
  4144  0525  0872               	movf	spi_master_receive@timeout_counter,w
  4145  0526  0473               	iorwf	spi_master_receive@timeout_counter+1,w
  4146  0527  1903               	btfsc	3,2
  4147  0528  0008               	return
  4148                           
  4149                           ;spi_master.c: 121: }
  4150                           ;spi_master.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4151                           
  4152                           ;spi_master.c: 119: {
  4153                           ;spi_master.c: 120: return;
  4154  0529  2D2A               	nop2	;2 cycle nop
  4155  052A  2D2B               	nop2	;2 cycle nop
  4156  052B  0000               	nop
  4157                           
  4158                           ;spi_master.c: 125: timeout_counter--;
  4159  052C  3001               	movlw	1
  4160  052D  02F2               	subwf	spi_master_receive@timeout_counter,f
  4161  052E  3000               	movlw	0
  4162  052F  1C03               	skipc
  4163  0530  03F3               	decf	spi_master_receive@timeout_counter+1,f
  4164  0531  02F3               	subwf	spi_master_receive@timeout_counter+1,f
  4165  0532  2D21               	goto	l1557
  4166  0533                     l108:	
  4167                           ;spi_master.c: 130: {
  4168                           ;spi_master.c: 131: case COM:
  4169                           
  4170                           ;spi_master.c: 126: }
  4171                           ;spi_master.c: 129: switch(destination)
  4172                           
  4173                           
  4174                           ;spi_master.c: 132: PORTCbits.RC0 = 1;
  4175  0533  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0534  1407               	bsf	7,0	;volatile
  4177                           
  4178                           ;spi_master.c: 133: break;
  4179  0535  2D41               	goto	l1563
  4180  0536                     l110:	
  4181                           ;spi_master.c: 134: case POW:
  4182                           
  4183                           
  4184                           ;spi_master.c: 135: PORTCbits.RC1 = 1;
  4185  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0537  1487               	bsf	7,1	;volatile
  4187                           
  4188                           ;spi_master.c: 137: }
  4189                           
  4190                           ;spi_master.c: 136: break;
  4191  0538  2D41               	goto	l1563
  4192  0539                     l1561:	
  4193  0539  0874               	movf	spi_master_receive@destination,w
  4194                           
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 2, Range of values is 3 to 4
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte            7     4 (average)
  4200                           ; direct_byte           17    11 (fixed)
  4201                           ; jumptable            263     9 (fixed)
  4202                           ;	Chosen strategy is simple_byte
  4203  053A  3A03               	xorlw	3	; case 3
  4204  053B  1903               	skipnz
  4205  053C  2D33               	goto	l108
  4206  053D  3A07               	xorlw	7	; case 4
  4207  053E  1903               	skipnz
  4208  053F  2D36               	goto	l110
  4209  0540  2D41               	goto	l1563
  4210  0541                     l1563:	
  4211                           
  4212                           ;spi_master.c: 139: return SSPBUF;
  4213  0541  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0542  0813               	movf	19,w	;volatile
  4215  0543  0008               	return
  4216  0544                     __end_of_spi_master_receive:	
  4217                           
  4218                           	psect	text29
  4219  02AB                     __ptext29:	
  4220 ;; *************** function _MCLR_reset *****************
  4221 ;; Defined at:
  4222 ;;		line 60 in file "MCLR_reset.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  resetted_mcu    1    wreg     unsigned char 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  resetted_mcu    1    2[COMMON] unsigned char 
  4227 ;;  nin             2    3[COMMON] PTR unsigned char 
  4228 ;;		 -> RAM(512), 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;		None               void
  4231 ;; Registers used:
  4232 ;;		wreg, fsr0l, fsr0h
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4238 ;;      Params:         0       0       0       0       0
  4239 ;;      Locals:         3       0       0       0       0
  4240 ;;      Temps:          2       0       0       0       0
  4241 ;;      Totals:         5       0       0       0       0
  4242 ;;Total ram usage:        5 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_COM_status
  4248 ;;		_POW_status
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _MCLR_reset
  4254  02AB                     _MCLR_reset:	
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _MCLR_reset: [wregfsr0]
  4258                           ;MCLR_reset@resetted_mcu stored from wreg
  4259  02AB  00F2               	movwf	MCLR_reset@resetted_mcu
  4260                           
  4261                           ;MCLR_reset.c: 62: uint8_t *nin;
  4262                           ;MCLR_reset.c: 63: nin = 0x09;
  4263  02AC  3009               	movlw	9
  4264  02AD  00F3               	movwf	MCLR_reset@nin
  4265  02AE  3000               	movlw	0
  4266  02AF  00F4               	movwf	MCLR_reset@nin+1
  4267                           
  4268                           ;MCLR_reset.c: 66: *nin = resetted_mcu;
  4269  02B0  0873               	movf	MCLR_reset@nin,w
  4270  02B1  0084               	movwf	4
  4271  02B2  1383               	bcf	3,7
  4272  02B3  1874               	btfsc	MCLR_reset@nin+1,0
  4273  02B4  1783               	bsf	3,7
  4274  02B5  0872               	movf	MCLR_reset@resetted_mcu,w
  4275  02B6  0080               	movwf	0
  4276                           
  4277                           ;MCLR_reset.c: 67: _delay((unsigned long)((10)*(20000000/4000.0)));
  4278  02B7  3041               	movlw	65
  4279  02B8  00F1               	movwf	??_MCLR_reset+1
  4280  02B9  30EE               	movlw	238
  4281  02BA  00F0               	movwf	??_MCLR_reset
  4282  02BB                     u957:	
  4283  02BB  0BF0               	decfsz	??_MCLR_reset,f
  4284  02BC  2ABB               	goto	u957
  4285  02BD  0BF1               	decfsz	??_MCLR_reset+1,f
  4286  02BE  2ABB               	goto	u957
  4287  02BF  0000               	nop
  4288                           
  4289                           ;MCLR_reset.c: 68: *nin = 0x03;
  4290  02C0  0873               	movf	MCLR_reset@nin,w
  4291  02C1  0084               	movwf	4
  4292  02C2  1383               	bcf	3,7
  4293  02C3  1874               	btfsc	MCLR_reset@nin+1,0
  4294  02C4  1783               	bsf	3,7
  4295  02C5  3003               	movlw	3
  4296  02C6  0080               	movwf	0
  4297  02C7  0008               	return
  4298  02C8                     __end_of_MCLR_reset:	
  4299  007E                     btemp	set	126	;btemp
  4300  007E                     wtemp	set	126
  4301  007E                     wtemp0	set	126
  4302  0080                     wtemp1	set	128
  4303  0082                     wtemp2	set	130
  4304  0084                     wtemp3	set	132
  4305  0086                     wtemp4	set	134
  4306  0088                     wtemp5	set	136
  4307  007F                     wtemp6	set	127
  4308  007E                     ttemp	set	126
  4309  007E                     ttemp0	set	126
  4310  0081                     ttemp1	set	129
  4311  0084                     ttemp2	set	132
  4312  0087                     ttemp3	set	135
  4313  007F                     ttemp4	set	127
  4314  007E                     ltemp	set	126
  4315  007E                     ltemp0	set	126
  4316  0082                     ltemp1	set	130
  4317  0086                     ltemp2	set	134
  4318  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint16_data_set@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    MCLR_reset@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    MCLR_init@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(COMMON[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(COMMON[2]), 


Critical Paths under _main in COMMON

    _command->_get_cw_data
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set
    _sent_data_set->_double_data_set
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _POW_status->_spi_master_send
    _COM_status->_spi_master_send

Critical Paths under _main in BANK0

    _main->_command
    _command->_I2Ctemp_data_set
    _send_data_master->_packet_send_master
    _LED_data_set->_sent_data_set
    _I2Ctemp_data_set->_sent_data_set
    _sent_data_set->_double_data_set

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10730
                                             22 BANK0      4     4      0
                         _COM_status
                          _MCLR_init
                         _POW_status
                        _ad_con_init
                            _command
                   _spi_master_start
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command                                              4     4      0    9209
                                             18 BANK0      4     4      0
                   _I2Ctemp_data_set
                       _LED_data_set
                        _cw_data_set
                        _get_cw_data
                              _putch
                   _send_data_master
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _send_data_master                                     4     2      2    2038
                                              1 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (3) _packet_send_master                                   3     2      1    1654
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (4) _send_payload                                         6     5      1     856
                                              6 COMMON     6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_cw_data                                          3     3      0     426
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           10     8      2     290
                                              6 COMMON     7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (5) _bit_shift                                            6     5      1     190
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _cw_data_set                                          3     3      0     947
                                              4 COMMON     2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _LED_data_set                                         0     0      0    2544
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (2) _I2Ctemp_data_set                                     3     3      0    2619
                                             15 BANK0      3     3      0
                              _getch
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (3) _sent_data_set                                        9     5      4    2544
                                              6 BANK0      9     5      4
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) _uint16_data_set                                      8     5      3     487
                                              6 COMMON     8     5      3
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (6) _uint16_to_byte_array                                 6     3      3     216
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (4) _double_data_set                                     10     7      3     555
                                             10 COMMON     4     1      3
                                              0 BANK0      6     6      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (5) _double_to_byte_array                                10     7      3     286
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getch                                                2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POW_status                                           0     0      0     658
                         _MCLR_reset
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (1) _MCLR_init                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _COM_status                                           2     2      0     817
                                              6 COMMON     2     2      0
                         _MCLR_reset
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      6     5      1     591
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _spi_master_receive                                   5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _MCLR_reset                                           5     5      0      67
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COM_status
     _MCLR_reset
     _spi_master_receive
     _spi_master_send
   _MCLR_init
   _POW_status
     _MCLR_reset
     _spi_master_send
   _ad_con_init
   _command
     _I2Ctemp_data_set
       _getch
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _LED_data_set
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _cw_data_set
       _uint8_data_set
     _get_cw_data
       _get_adcon
         _bit_shift
       _spi_master_receive
       _spi_master_start
     _putch
     _send_data_master
       _packet_send_master
         _send_payload
           _spi_master_send
         _spi_master_send
     _spi_master_send
   _spi_master_start
   _sysprot_init
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      56       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      56      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Mar 11 16:23:40 2016

                                   pc 0002                           __CFG_CP$OFF 0000  
                         _SSPSTATbits 0094                                    l65 0309  
                                  l90 0505                                    l95 0508  
                                  l99 0514                ??_uint16_to_byte_array 0073  
                                  _cw 0041                                    fsr 0004  
                 ___wmul@multiplicand 0072                  __size_of_ad_con_init 000B  
                                 l101 0516                                   l110 0536  
                                 l120 0553                                   l115 0550  
                                 l108 0533                                   l124 055F  
                                 l133 057F                                   l126 0561  
                                 l135 0582                                   l170 0226  
                                 l251 0480                                   l227 05F5  
                                 l259 0449                                   l375 0791  
                                 l377 07F4                                   l467 032C  
                        __CFG_CPD$OFF 0000                                   u705 0334  
                                 u565 0423                                   u575 0438  
                                 u907 0623                                   u917 0633  
                                 u695 032D                                   u927 065A  
                                 u785 02A5                                   u937 0798  
                                 u947 07A8                                   u957 02BB  
                          _POW_status 026A                           ?_COM_status 0070  
                uint8_data_set@p_data 0070                                   fsr0 0004  
                                 indf 0000           send_data_master@destination 0052  
              ??_double_to_byte_array 0073                          __CFG_FOSC$HS 0000  
                         ?_MCLR_reset 0070                           command@data 0063  
                        __CFG_LVP$OFF 0000                                  l1501 04D9  
                                l1503 04B9                                  l1505 04F4  
                                l1435 0365                                  l1381 056B  
                                l1509 0324                                  l1543 050B  
                                l1375 0556                                  l1471 0466  
                                l1561 0539                                  l1393 0585  
                                l1457 04B4                                  l1449 049B  
                                l1563 0541                                  l1547 0518  
                                l1395 058D                                  l1379 0563  
                                l1571 0298                                  l1483 04BF  
                                l1707 076D                                  l1557 0521  
                                l1549 0520                                  l1389 056D  
                                l1575 02A7                                  l1479 047D  
                                l1583 05C0                                  l1591 05E8  
                                l1719 07CD                                  l1727 07E7  
                                l1569 0292                                  l1585 05CC  
                                l1587 05DA                                  l1695 02E3  
                                l1787 062A                                  _RCIF 0065  
                                _TXIF 0064                          __CFG_WRT$OFF 0000  
                                _main 05F6                      ??_uint8_data_set 0073  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                                ltemp 007E                  __end_of_sysprot_init 0225  
                                start 0000                                  ttemp 007E  
                                wtemp 007E                    __size_of_MCLR_init 0010  
       spi_master_receive@destination 0074                     ??_double_data_set 007D  
                               ?_main 0070                         __CFG_WDTE$OFF 0000  
              uint8_data_set@data_len 0072                                 _RCREG 001A  
                               _RCSTA 0018                                 _SPBRG 0099  
                               _TXREG 0019                                 _TXSTA 0098  
                       __CFG_PWRTE$ON 0000                       __end_of_command 07F5  
                               _getch 028F      double_to_byte_array@p_data_array 0072  
            __end_of_send_data_master 028F                                 _putch 0225  
                       ?_LED_data_set 0070                      ?_uint16_data_set 0076  
                               pclath 000A                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                    bit_shift@p_adres 0070                   __size_of_COM_status 001D  
         __size_of_spi_master_receive 004B                       __initialization 07F5  
                 __size_of_MCLR_reset 001D                 uint16_data_set@p_data 0076  
                        __end_of_main 0662                                ??_main 0064  
                      get_cw_data@buf 004E      uint16_to_byte_array@p_data_array 0072  
                         ?_POW_status 0070                     __end_of_MCLR_init 026A  
                              ?_getch 0070                                _ADCON0 001F  
                              _ADCON1 009F                        ??_LED_data_set 007E  
                              _ADRESH 001E                                _ADRESL 009E  
                              ?_putch 0070        spi_master_send@timeout_counter 0073  
                              _SSPBUF 0013            __end_of_packet_send_master 0413  
                __size_of_get_cw_data 0087                  __size_of_cw_data_set 0080  
                              ___wmul 0322              __end_of_I2Ctemp_data_set 0365  
               double_data_set@p_data 007A                                _packet 0021  
                           ??_command 0060             __size_of_spi_master_start 001D  
               __size_of_sysprot_init 0005               __end_of__initialization 07FC  
               send_payload@index_pos 007A                   __size_of_POW_status 0011  
               send_payload@p_payload 0076                        __pcstackCOMMON 0070  
               __end_of_sent_data_set 05F6                         __end_of_getch 02AB  
                 spi_master_send@data 0070                         __end_of_putch 022D  
                  COM_status@COM_stat 0077                    __size_of_bit_shift 0036  
                        ??_COM_status 0076                          _sysprot_init 0220  
                        ??_MCLR_reset 0070                    __size_of_get_adcon 0020  
                             ??_getch 0070                               ??_putch 0070  
                        MCLR_init@nin 0070                            __pbssBANK0 0020  
          uint16_to_byte_array@p_data 0070              __size_of_spi_master_send 004F  
   spi_master_receive@timeout_counter 0072                       _double_data_set 0449  
                  __end_of_COM_status 02E5                            __pmaintext 05F6  
                             ?___wmul 0070                    __end_of_MCLR_reset 02C8  
                       ??_ad_con_init 0070                  __end_of_LED_data_set 025A  
                       ?_send_payload 0076         __size_of_uint16_to_byte_array 002A  
                  __size_of_uart_init 000C         __size_of_double_to_byte_array 002B  
             bit_shift@bit_mask_for_l 000B                            __stringtab 0003  
                   ?_send_data_master 004F                    ??_send_data_master 0051  
                  uint16_data_set@buf 007A                     __end_of_bit_shift 0449  
                   __end_of_get_adcon 0322                       __size_of___wmul 0021  
             spi_master_receive@dummy 0071                        ??_send_payload 0077  
                             __ptext1 0240                               __ptext2 0220  
                             __ptext3 0769                               __ptext4 027B  
                             __ptext5 03E3                               __ptext6 04B7  
                             __ptext7 0225                               __ptext8 06E2  
                             __ptext9 02E5                               _command 0769  
                        ??_POW_status 0076                   __end_of_ad_con_init 0240  
                cw_data_set@p_cw_data 0075                      _spi_master_start 02E5  
                             clrloop0 022E                  end_of_initialization 07FC  
             __end_of_double_data_set 0480                             _MCLR_init 025A  
          __end_of_spi_master_receive 0544             sent_data_set@byte_of_data 0057  
                   __end_of_uart_init 024C                    __end_of_POW_status 027B  
            __size_of_uint16_data_set 0037                     ??_spi_master_send 0071  
                    double_data_set@i 0053               __size_of_uint8_data_set 0029  
                   ?_I2Ctemp_data_set 0070                             _PORTAbits 0005  
                  _packet_send_master 03E3                             _PORTCbits 0007  
                           _PORTDbits 0008                    ??_I2Ctemp_data_set 005D  
               double_to_byte_array@i 0079                            getch@count 0070  
                           _TRISAbits 0085                             _TRISCbits 0087  
                           _TRISDbits 0088                             _TRISEbits 0089  
                 ?_packet_send_master 007C                            ?_MCLR_init 0070  
        I2Ctemp_data_set@I2CTEMP_data 005E                         ??_get_cw_data 007D  
                       ??_cw_data_set 0074                 __size_of_LED_data_set 000E  
             uint16_data_set@data_len 0078                 sent_data_set@data_len 0056  
                ??_packet_send_master 007D                           _ad_con_init 0235  
                      __end_of___wmul 0343                         send_payload@i 0079  
          spi_master_send@destination 0075                  spi_master_send@dummy 0072  
                 start_initialization 07F5                          _LED_data_set 024C  
                    ?_double_data_set 007A                  __end_of_send_payload 04F9  
     __end_ofbit_shift@bit_mask_for_l 000C                      uint16_data_set@i 007D  
                            ??___wmul 0074                  send_payload@data_len 0078  
                 __end_of_get_cw_data 0769                   __end_of_cw_data_set 06E2  
                   ??_uint16_data_set 0079         double_to_byte_array@converter 0075  
                           ___latbits 0002                         __pcstackBANK0 004E  
                 sent_data_set@p_data 0054                __size_of_sent_data_set 0063  
                         ??_MCLR_init 0070          __end_of_uint16_to_byte_array 03B8  
                       MCLR_reset@nin 0073          __end_of_double_to_byte_array 03E3  
                           _bit_shift 0413              __end_of_spi_master_start 0302  
                      _uint8_data_set 0365             __size_of_send_data_master 0014  
                           _get_adcon 0302            double_to_byte_array@p_data 0070  
                           __pstrings 0003                              ?_command 0070  
           send_data_master@data_type 004F                             _index_pos 0020  
                      __size_of_getch 001C                        __size_of_putch 0008  
                     _spi_master_send 0544                        ___wmul@product 0074  
                           clear_ram0 022D                           _get_cw_data 06E2  
                         _cw_data_set 0662                __end_of_uint8_data_set 038E  
                          ?_bit_shift 0070                             _uart_init 0240  
                       _sent_data_set 0593                            ?_get_adcon 0076  
                  _spi_master_receive 04F9                            _ADCON0bits 001F  
                         __stringbase 0008                     ___wmul@multiplier 0070  
                 ?_spi_master_receive 0070                 __size_of_send_payload 0042  
           __size_of_I2Ctemp_data_set 0022                  ??_spi_master_receive 0070  
                     ?_uint8_data_set 0070                            ?_uart_init 0070  
                      ?_sent_data_set 0054                          ?_ad_con_init 0070  
                  __end_of__stringtab 0009                          _send_payload 04B7  
                _uint16_to_byte_array 038E                      __size_of_command 008C  
                       ?_sysprot_init 0070               double_data_set@data_len 007C  
             __end_of_spi_master_send 0593                              __ptext10 0302  
                            __ptext11 0413                              __ptext20 03B8  
                            __ptext12 0662                              __ptext21 0322  
                            __ptext13 024C                              __ptext22 028F  
                            __ptext14 0343                              __ptext23 0235  
                            __ptext15 0593                              __ptext24 026A  
                            __ptext16 0365                              __ptext25 025A  
                            __ptext17 0480                              __ptext26 02C8  
                            __ptext18 038E                              __ptext27 0544  
                            __ptext19 0449                              __ptext28 04F9  
                            __ptext29 02AB                  _double_to_byte_array 03B8  
__end_ofuint16_to_byte_array@bit_mask 000B          uint16_to_byte_array@bit_mask 0009  
                       __size_of_main 006C                MCLR_reset@resetted_mcu 0072  
                     _uint16_data_set 0480            packet_send_master@p_packet 007C  
         __size_of_packet_send_master 0030                           ??_bit_shift 0071  
                    _send_data_master 027B                           ??_get_adcon 0078  
               ?_uint16_to_byte_array 0070                        ??_sysprot_init 0070  
                          _COM_status 02C8                             putch@byte 0070  
                          _MCLR_reset 02AB                    double_data_set@buf 004E  
               ?_double_to_byte_array 0070                     get_adcon@ad_value 007B  
                           stringcode 0003              __size_of_double_data_set 0037  
                     ??_sent_data_set 0058                           ??_uart_init 0070  
             send_payload@destination 007B                     ?_spi_master_start 0070  
                  ??_spi_master_start 0070                     get_adcon@my_adres 0079  
                        main@COM_stat 0067                              stringdir 0003  
                            stringtab 0003                      ?_spi_master_send 0070  
                    _I2Ctemp_data_set 0343               __end_of_uint16_data_set 04B7  
    send_data_master@data_end_command 0050                            _SSPCONbits 0014  
                        ?_get_cw_data 0070                          ?_cw_data_set 0070  
       packet_send_master@destination 004E                   bit_shift@p_ad_value 0075  
