

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 06 20:13:35 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	functab,global,reloc=256,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  0088                     	;# 
   143  0089                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  009F                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000E                     	;# 
   359  000F                     	;# 
   360  0010                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  001D                     	;# 
   376  001E                     	;# 
   377  001F                     	;# 
   378  0081                     	;# 
   379  0085                     	;# 
   380  0086                     	;# 
   381  0087                     	;# 
   382  0088                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  0081                     	;# 
   559  0085                     	;# 
   560  0086                     	;# 
   561  0087                     	;# 
   562  0088                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0094                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  009F                     	;# 
   577  010C                     	;# 
   578  010D                     	;# 
   579  010E                     	;# 
   580  010F                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583                           
   584                           	psect	strings
   585  0003                     __pstrings:	
   586  0003                     stringtab:	
   587  0003                     __stringtab:	
   588  0003                     stringcode:	
   589                           ;	String table - string pointers are 1 byte each
   590                           
   591  0003                     stringdir:	
   592  0003  3000               	movlw	high stringdir
   593  0004  008A               	movwf	10
   594  0005  0804               	movf	4,w
   595  0006  0A84               	incf	4,f
   596  0007  0782               	addwf	2,f
   597  0008                     __stringbase:	
   598  0008  3400               	retlw	0
   599  0009                     __end_of__stringtab:	
   600  0009                     uint16_to_byte_array@bit_mask:	
   601  0009  34FF               	retlw	255
   602  000A  3400               	retlw	0
   603  000B                     __end_ofuint16_to_byte_array@bit_mask:	
   604  000B                     bit_shift@bit_mask_for_l:	
   605  000B  3403               	retlw	3
   606  000C                     __end_ofbit_shift@bit_mask_for_l:	
   607  001F                     _ADCON0	set	31
   608  001F                     _ADCON0bits	set	31
   609  001E                     _ADRESH	set	30
   610  0005                     _PORTAbits	set	5
   611  0007                     _PORTCbits	set	7
   612  0008                     _PORTDbits	set	8
   613  001A                     _RCREG	set	26
   614  0018                     _RCSTA	set	24
   615  0013                     _SSPBUF	set	19
   616  0014                     _SSPCONbits	set	20
   617  0019                     _TXREG	set	25
   618  0065                     _RCIF	set	101
   619  0064                     _TXIF	set	100
   620  009F                     _ADCON1	set	159
   621  009E                     _ADRESL	set	158
   622  0099                     _SPBRG	set	153
   623  0094                     _SSPSTATbits	set	148
   624  0085                     _TRISAbits	set	133
   625  0087                     _TRISCbits	set	135
   626  0088                     _TRISDbits	set	136
   627  0089                     _TRISEbits	set	137
   628  0098                     _TXSTA	set	152
   629                           
   630                           ; #config settings
   631  0000                     
   632                           	psect	cinit
   633  07F5                     start_initialization:	
   634  07F5                     __initialization:	
   635                           
   636                           ; Clear objects allocated to BANK0
   637  07F5  1383               	bcf	3,7	;select IRP bank0
   638  07F6  3020               	movlw	low __pbssBANK0
   639  07F7  0084               	movwf	4
   640  07F8  304E               	movlw	low (__pbssBANK0+46)
   641  07F9  120A  118A  21D8   	fcall	clear_ram0
   642  07FC                     end_of_initialization:	
   643                           ;End of C runtime variable initialization code
   644                           
   645  07FC                     __end_of__initialization:	
   646  07FC  0183               	clrf	3
   647  07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  0020                     __pbssBANK0:	
   651  0020                     _index_pos:	
   652  0020                     	ds	1
   653  0021                     _packet:	
   654  0021                     	ds	32
   655  0041                     _cw:	
   656  0041                     	ds	13
   657                           
   658                           	psect	clrtext
   659  01D8                     clear_ram0:	
   660                           ;	Called with FSR containing the base address, and
   661                           ;	W with the last address+1
   662                           
   663  01D8  0064               	clrwdt	;clear the watchdog before getting into this loop
   664  01D9                     clrloop0:	
   665  01D9  0180               	clrf	0	;clear RAM location pointed to by FSR
   666  01DA  0A84               	incf	4,f	;increment pointer
   667  01DB  0604               	xorwf	4,w	;XOR with final address
   668  01DC  1903               	btfsc	3,2	;have we reached the end yet?
   669  01DD  3400               	retlw	0	;all done for this memory range, return
   670  01DE  0604               	xorwf	4,w	;XOR again to restore value
   671  01DF  29D9               	goto	clrloop0	;do the next byte
   672                           
   673                           	psect	cstackCOMMON
   674  0070                     __pcstackCOMMON:	
   675  0070                     ?_MCLR_init:	
   676  0070                     ??_MCLR_init:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ?_sysprot_init:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ??_sysprot_init:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_ad_con_init:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ??_ad_con_init:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_spi_master_start:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ??_spi_master_start:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_uart_init:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ??_uart_init:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_COM_status:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_POW_status:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_command:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_uint8_data_set:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_uint16_to_byte_array:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_double_to_byte_array:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_LED_data_set:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_I2Ctemp_data_set:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_bit_shift:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ??_spi_master_receive:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_spi_master_send:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_MCLR_reset:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ??_MCLR_reset:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0070                     ?_get_cw_data:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0070                     ?_cw_data_set:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_receive_data_master:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0070                     ?_receive_payload:	
   752                           ; 0 bytes @ 0x0
   753                           
   754  0070                     ?_spi_master_receive:	
   755                           ; 0 bytes @ 0x0
   756                           
   757  0070                     ?_main:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?___wmul:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0070                     bit_shift@p_adres:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     spi_master_send@data:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     MCLR_init@nin:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     uint8_data_set@p_data:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0070                     uint16_to_byte_array@p_data:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     double_to_byte_array@p_data:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ___wmul@multiplier:	
   782                           ; 2 bytes @ 0x0
   783                           
   784                           
   785                           ; 2 bytes @ 0x0
   786  0070                     	ds	1
   787  0071                     ??_bit_shift:	
   788  0071                     ??_spi_master_send:	
   789                           ; 0 bytes @ 0x1
   790                           
   791  0071                     spi_master_receive@dummy:	
   792                           ; 0 bytes @ 0x1
   793                           
   794                           
   795                           ; 1 bytes @ 0x1
   796  0071                     	ds	1
   797  0072                     spi_master_send@dummy:	
   798  0072                     MCLR_reset@resetted_mcu:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     uint8_data_set@data_len:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     uint16_to_byte_array@p_data_array:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0072                     double_to_byte_array@p_data_array:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0072                     spi_master_receive@timeout_counter:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     ___wmul@multiplicand:	
   814                           ; 2 bytes @ 0x2
   815                           
   816                           
   817                           ; 2 bytes @ 0x2
   818  0072                     	ds	1
   819  0073                     ??_uint8_data_set:	
   820  0073                     ??_uint16_to_byte_array:	
   821                           ; 0 bytes @ 0x3
   822                           
   823  0073                     ??_double_to_byte_array:	
   824                           ; 0 bytes @ 0x3
   825                           
   826  0073                     spi_master_send@timeout_counter:	
   827                           ; 0 bytes @ 0x3
   828                           
   829  0073                     MCLR_reset@nin:	
   830                           ; 2 bytes @ 0x3
   831                           
   832                           
   833                           ; 2 bytes @ 0x3
   834  0073                     	ds	1
   835  0074                     ??_cw_data_set:	
   836  0074                     ??___wmul:	
   837                           ; 0 bytes @ 0x4
   838                           
   839  0074                     spi_master_receive@destination:	
   840                           ; 0 bytes @ 0x4
   841                           
   842  0074                     ___wmul@product:	
   843                           ; 1 bytes @ 0x4
   844                           
   845                           
   846                           ; 2 bytes @ 0x4
   847  0074                     	ds	1
   848  0075                     ??_receive_payload:	
   849  0075                     bit_shift@p_ad_value:	
   850                           ; 0 bytes @ 0x5
   851                           
   852  0075                     spi_master_send@destination:	
   853                           ; 1 bytes @ 0x5
   854                           
   855  0075                     cw_data_set@p_cw_data:	
   856                           ; 1 bytes @ 0x5
   857                           
   858  0075                     double_to_byte_array@converter:	
   859                           ; 1 bytes @ 0x5
   860                           
   861                           
   862                           ; 4 bytes @ 0x5
   863  0075                     	ds	1
   864  0076                     ??_COM_status:	
   865  0076                     ??_POW_status:	
   866                           ; 0 bytes @ 0x6
   867                           
   868  0076                     ?_uint16_data_set:	
   869                           ; 0 bytes @ 0x6
   870                           
   871  0076                     ?_send_payload:	
   872                           ; 0 bytes @ 0x6
   873                           
   874  0076                     ?_get_adcon:	
   875                           ; 1 bytes @ 0x6
   876                           
   877  0076                     send_payload@p_payload:	
   878                           ; 2 bytes @ 0x6
   879                           
   880  0076                     receive_payload@data_len:	
   881                           ; 1 bytes @ 0x6
   882                           
   883  0076                     uint16_data_set@p_data:	
   884                           ; 1 bytes @ 0x6
   885                           
   886                           
   887                           ; 2 bytes @ 0x6
   888  0076                     	ds	1
   889  0077                     ??_send_payload:	
   890  0077                     receive_payload@i:	
   891                           ; 0 bytes @ 0x7
   892                           
   893  0077                     COM_status@COM_status:	
   894                           ; 1 bytes @ 0x7
   895                           
   896                           
   897                           ; 1 bytes @ 0x7
   898  0077                     	ds	1
   899  0078                     ??_get_adcon:	
   900  0078                     uint16_data_set@data_len:	
   901                           ; 0 bytes @ 0x8
   902                           
   903  0078                     send_payload@data_len:	
   904                           ; 1 bytes @ 0x8
   905                           
   906  0078                     receive_payload@p_payload:	
   907                           ; 1 bytes @ 0x8
   908                           
   909                           
   910                           ; 1 bytes @ 0x8
   911  0078                     	ds	1
   912  0079                     ??_uint16_data_set:	
   913  0079                     double_to_byte_array@i:	
   914                           ; 0 bytes @ 0x9
   915                           
   916  0079                     send_payload@i:	
   917                           ; 1 bytes @ 0x9
   918                           
   919  0079                     receive_payload@rec_index_pos:	
   920                           ; 1 bytes @ 0x9
   921                           
   922  0079                     get_adcon@my_adres:	
   923                           ; 1 bytes @ 0x9
   924                           
   925                           
   926                           ; 2 bytes @ 0x9
   927  0079                     	ds	1
   928  007A                     ?_double_data_set:	
   929  007A                     send_payload@index_pos:	
   930                           ; 0 bytes @ 0xA
   931                           
   932  007A                     receive_payload@destination:	
   933                           ; 1 bytes @ 0xA
   934                           
   935  007A                     double_data_set@p_data:	
   936                           ; 1 bytes @ 0xA
   937                           
   938  007A                     uint16_data_set@buf:	
   939                           ; 2 bytes @ 0xA
   940                           
   941                           
   942                           ; 3 bytes @ 0xA
   943  007A                     	ds	1
   944  007B                     ?_packet_receive_master:	
   945  007B                     send_payload@destination:	
   946                           ; 0 bytes @ 0xB
   947                           
   948  007B                     packet_receive_master@p_packet:	
   949                           ; 1 bytes @ 0xB
   950                           
   951  007B                     get_adcon@ad_value:	
   952                           ; 1 bytes @ 0xB
   953                           
   954                           
   955                           ; 2 bytes @ 0xB
   956  007B                     	ds	1
   957  007C                     ?_packet_send_master:	
   958  007C                     ??_packet_receive_master:	
   959                           ; 0 bytes @ 0xC
   960                           
   961  007C                     double_data_set@data_len:	
   962                           ; 0 bytes @ 0xC
   963                           
   964  007C                     packet_send_master@p_packet:	
   965                           ; 1 bytes @ 0xC
   966                           
   967                           
   968                           ; 1 bytes @ 0xC
   969  007C                     	ds	1
   970  007D                     ??_double_data_set:	
   971  007D                     ??_packet_send_master:	
   972                           ; 0 bytes @ 0xD
   973                           
   974  007D                     ??_get_cw_data:	
   975                           ; 0 bytes @ 0xD
   976                           
   977  007D                     ??_receive_data_master:	
   978                           ; 0 bytes @ 0xD
   979                           
   980  007D                     uint16_data_set@i:	
   981                           ; 0 bytes @ 0xD
   982                           
   983                           
   984                           ; 1 bytes @ 0xD
   985  007D                     	ds	1
   986  007E                     ??_LED_data_set:	
   987  007E                     ??_I2Ctemp_data_set:	
   988                           ; 0 bytes @ 0xE
   989                           
   990                           
   991                           	psect	cstackBANK0
   992  004E                     __pcstackBANK0:	
   993                           ; 0 bytes @ 0xE
   994                           
   995  004E                     packet_send_master@destination:	
   996  004E                     packet_receive_master@use_obc:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  004E                     get_cw_data@buf:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  004E                     double_data_set@buf:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005                           
  1006                           ; 5 bytes @ 0x0
  1007  004E                     	ds	1
  1008  004F                     ?_send_data_master:	
  1009  004F                     send_data_master@data_type:	
  1010                           ; 0 bytes @ 0x1
  1011                           
  1012  004F                     packet_receive_master@destination:	
  1013                           ; 1 bytes @ 0x1
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0x1
  1017  004F                     	ds	1
  1018  0050                     send_data_master@data_end_command:	
  1019  0050                     receive_data_master@destination:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x2
  1024  0050                     	ds	1
  1025  0051                     ??_send_data_master:	
  1026                           
  1027                           ; 0 bytes @ 0x3
  1028  0051                     	ds	1
  1029  0052                     send_data_master@destination:	
  1030                           
  1031                           ; 1 bytes @ 0x4
  1032  0052                     	ds	1
  1033  0053                     double_data_set@i:	
  1034                           
  1035                           ; 1 bytes @ 0x5
  1036  0053                     	ds	1
  1037  0054                     ?_sent_data_set:	
  1038  0054                     sent_data_set@p_data:	
  1039                           ; 1 bytes @ 0x6
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x6
  1043  0054                     	ds	2
  1044  0056                     sent_data_set@data_len:	
  1045                           
  1046                           ; 1 bytes @ 0x8
  1047  0056                     	ds	1
  1048  0057                     sent_data_set@byte_of_data:	
  1049                           
  1050                           ; 1 bytes @ 0x9
  1051  0057                     	ds	1
  1052  0058                     ??_sent_data_set:	
  1053                           
  1054                           ; 0 bytes @ 0xA
  1055  0058                     	ds	5
  1056  005D                     ??_command:	
  1057                           
  1058                           ; 0 bytes @ 0xF
  1059  005D                     	ds	3
  1060  0060                     command@data:	
  1061                           
  1062                           ; 1 bytes @ 0x12
  1063  0060                     	ds	1
  1064  0061                     ??_main:	
  1065                           
  1066                           ; 0 bytes @ 0x13
  1067  0061                     	ds	3
  1068                           
  1069                           	psect	maintext
  1070  07A3                     __pmaintext:	
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1073 ;;
  1074 ;; *************** function _main *****************
  1075 ;; Defined at:
  1076 ;;		line 26 in file "OBC1_main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2   26[None  ] int 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : B00/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0
  1092 ;;      Temps:          0       3       0       0       0
  1093 ;;      Totals:         0       3       0       0       0
  1094 ;;Total ram usage:        3 bytes
  1095 ;; Hardware stack levels required when called:    6
  1096 ;; This function calls:
  1097 ;;		_COM_status
  1098 ;;		_MCLR_init
  1099 ;;		_POW_status
  1100 ;;		_ad_con_init
  1101 ;;		_command
  1102 ;;		_spi_master_start
  1103 ;;		_sysprot_init
  1104 ;;		_uart_init
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _main
  1112  07A3                     _main:	
  1113                           
  1114                           ;OBC1_main.c: 28: TRISDbits.TRISD7 = 0;
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1118  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  1119  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  1120  07A5  1388               	bcf	8,7	;volatile
  1121                           
  1122                           ;OBC1_main.c: 29: PORTDbits.RD7 = 0;
  1123  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1124  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1125  07A8  1388               	bcf	8,7	;volatile
  1126                           
  1127                           ;OBC1_main.c: 31: MCLR_init();
  1128  07A9  120A  118A  2211  120A  118A  	fcall	_MCLR_init
  1129                           
  1130                           ;OBC1_main.c: 32: sysprot_init();
  1131  07AE  120A  118A  21D3  120A  118A  	fcall	_sysprot_init
  1132                           
  1133                           ;OBC1_main.c: 33: ad_con_init();
  1134  07B3  120A  118A  21E0  120A  118A  	fcall	_ad_con_init
  1135                           
  1136                           ;OBC1_main.c: 34: spi_master_start();
  1137  07B8  120A  118A  227F  120A  118A  	fcall	_spi_master_start
  1138                           
  1139                           ;OBC1_main.c: 35: uart_init();
  1140  07BD  120A  118A  21F7  120A  118A  	fcall	_uart_init
  1141  07C2                     l1739:	
  1142                           ;OBC1_main.c: 37: while(1)
  1143                           
  1144                           
  1145                           ;OBC1_main.c: 38: {
  1146                           ;OBC1_main.c: 39: PORTDbits.RD7 = 1;
  1147  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1148  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1149  07C4  1788               	bsf	8,7	;volatile
  1150                           
  1151                           ;OBC1_main.c: 40: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1152  07C5  301A               	movlw	26
  1153  07C6  00E3               	movwf	??_main+2
  1154  07C7  305E               	movlw	94
  1155  07C8  00E2               	movwf	??_main+1
  1156  07C9  3086               	movlw	134
  1157  07CA  00E1               	movwf	??_main
  1158  07CB                     u897:	
  1159  07CB  0BE1               	decfsz	??_main,f
  1160  07CC  2FCB               	goto	u897
  1161  07CD  0BE2               	decfsz	??_main+1,f
  1162  07CE  2FCB               	goto	u897
  1163  07CF  0BE3               	decfsz	??_main+2,f
  1164  07D0  2FCB               	goto	u897
  1165  07D1  0000               	nop
  1166                           
  1167                           ;OBC1_main.c: 43: COM_status();
  1168  07D2  120A  118A  2246  120A  118A  	fcall	_COM_status
  1169                           
  1170                           ;OBC1_main.c: 46: POW_status();
  1171  07D7  120A  118A  2221  120A  118A  	fcall	_POW_status
  1172                           
  1173                           ;OBC1_main.c: 49: command(COM_status);
  1174  07DC  3001               	movlw	(low (fp__COM_status-fpbase))& (0+255)
  1175  07DD  120A  118A  2709  120A  118A  	fcall	_command
  1176                           
  1177                           ;OBC1_main.c: 51: PORTDbits.RD7 = 0;
  1178  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1179  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1180  07E4  1388               	bcf	8,7	;volatile
  1181                           
  1182                           ;OBC1_main.c: 52: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1183  07E5  301A               	movlw	26
  1184  07E6  00E3               	movwf	??_main+2
  1185  07E7  305E               	movlw	94
  1186  07E8  00E2               	movwf	??_main+1
  1187  07E9  3086               	movlw	134
  1188  07EA  00E1               	movwf	??_main
  1189  07EB                     u907:	
  1190  07EB  0BE1               	decfsz	??_main,f
  1191  07EC  2FEB               	goto	u907
  1192  07ED  0BE2               	decfsz	??_main+1,f
  1193  07EE  2FEB               	goto	u907
  1194  07EF  0BE3               	decfsz	??_main+2,f
  1195  07F0  2FEB               	goto	u907
  1196  07F1  0000               	nop
  1197  07F2  2FC2               	goto	l1739
  1198  07F3                     __end_of_main:	
  1199                           ;OBC1_main.c: 53: }
  1200                           ;OBC1_main.c: 55: return 0;
  1201                           ;	Return value of _main is never used
  1202                           
  1203                           
  1204                           	psect	text1
  1205  01F7                     __ptext1:	
  1206 ;; *************** function _uart_init *****************
  1207 ;; Defined at:
  1208 ;;		line 33 in file "uart_serial.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;		None               void
  1215 ;; Registers used:
  1216 ;;		wreg
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _uart_init
  1237  01F7                     _uart_init:	
  1238                           
  1239                           ;uart_serial.c: 35: TRISCbits.TRISC7 = 1;
  1240                           
  1241                           ;incstack = 0
  1242                           ; Regs used in _uart_init: [wreg]
  1243  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1244  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1245  01F9  1787               	bsf	7,7	;volatile
  1246                           
  1247                           ;uart_serial.c: 36: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1248  01FA  3081               	movlw	129
  1249  01FB  0099               	movwf	25	;volatile
  1250                           
  1251                           ;uart_serial.c: 37: TXSTA = (0x00 | 0x04 | 0x20);
  1252  01FC  3024               	movlw	36
  1253  01FD  0098               	movwf	24	;volatile
  1254                           
  1255                           ;uart_serial.c: 38: RCSTA = (0x00 | 0x90);
  1256  01FE  3090               	movlw	144
  1257  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0201  0098               	movwf	24	;volatile
  1260  0202  0008               	return
  1261  0203                     __end_of_uart_init:	
  1262                           
  1263                           	psect	text2
  1264  01D3                     __ptext2:	
  1265 ;; *************** function _sysprot_init *****************
  1266 ;; Defined at:
  1267 ;;		line 85 in file "system_protocol.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		None
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _sysprot_init
  1296  01D3                     _sysprot_init:	
  1297                           
  1298                           ;system_protocol.c: 87: TRISDbits.TRISD0 = 1;
  1299                           
  1300                           ;incstack = 0
  1301                           ; Regs used in _sysprot_init: []
  1302  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1303  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1304  01D5  1408               	bsf	8,0	;volatile
  1305                           
  1306                           ;system_protocol.c: 88: TRISDbits.TRISD1 = 1;
  1307  01D6  1488               	bsf	8,1	;volatile
  1308  01D7  0008               	return
  1309  01D8                     __end_of_sysprot_init:	
  1310                           
  1311                           	psect	text3
  1312  0709                     __ptext3:	
  1313 ;; *************** function _command *****************
  1314 ;; Defined at:
  1315 ;;		line 47 in file "OBC1_app.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  data            1    wreg     unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  data            1   18[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;		None               void
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         0       1       0       0       0
  1331 ;;      Temps:          0       3       0       0       0
  1332 ;;      Totals:         0       4       0       0       0
  1333 ;;Total ram usage:        4 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    5
  1336 ;; This function calls:
  1337 ;;		_I2Ctemp_data_set
  1338 ;;		_LED_data_set
  1339 ;;		_cw_data_set
  1340 ;;		_get_cw_data
  1341 ;;		_send_data_master
  1342 ;;		_spi_master_send
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _command
  1350  0709                     _command:	
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1354                           ;command@data stored from wreg
  1355  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1356  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1357  070B  00E0               	movwf	command@data
  1358                           
  1359                           ;OBC1_app.c: 50: switch(data)
  1360  070C  2F95               	goto	l1705
  1361  070D                     l1689:	
  1362                           ;OBC1_app.c: 51: {
  1363                           ;OBC1_app.c: 52: case (0x03):
  1364                           
  1365                           
  1366                           ;OBC1_app.c: 53: get_cw_data();
  1367  070D  120A  118A  2679  120A  118A  	fcall	_get_cw_data
  1368                           
  1369                           ;OBC1_app.c: 54: cw_data_set(&cw);
  1370  0712  3041               	movlw	(low (_cw| 0))& (0+255)
  1371  0713  120A  118A  25F9  120A  118A  	fcall	_cw_data_set
  1372                           
  1373                           ;OBC1_app.c: 55: spi_master_send(COM, 0x11);
  1374  0718  3011               	movlw	17
  1375  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1376  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1377  071B  00DD               	movwf	??_command
  1378  071C  085D               	movf	??_command,w
  1379  071D  00F0               	movwf	spi_master_send@data
  1380  071E  3003               	movlw	3
  1381  071F  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1382                           
  1383                           ;OBC1_app.c: 56: send_data_master(COM, 0x01, DATA_END);
  1384  0724  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0725  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0726  01CF               	clrf	send_data_master@data_type
  1387  0727  0ACF               	incf	send_data_master@data_type,f
  1388  0728  3010               	movlw	16
  1389  0729  00DD               	movwf	??_command
  1390  072A  085D               	movf	??_command,w
  1391  072B  00D0               	movwf	send_data_master@data_end_command
  1392  072C  3003               	movlw	3
  1393  072D  120A  118A  2232   	fcall	_send_data_master
  1394                           
  1395                           ;OBC1_app.c: 57: break;
  1396  0730  0008               	return
  1397  0731                     l383:	
  1398                           ;OBC1_app.c: 59: case (0x01):
  1399                           
  1400                           
  1401                           ;OBC1_app.c: 60: PORTDbits.RD6 = 1;
  1402  0731  1708               	bsf	8,6	;volatile
  1403                           
  1404                           ;OBC1_app.c: 61: _delay((unsigned long)((100)*(20000000/4000.0)));
  1405  0732  3003               	movlw	3
  1406  0733  00DF               	movwf	??_command+2
  1407  0734  308A               	movlw	138
  1408  0735  00DE               	movwf	??_command+1
  1409  0736  3056               	movlw	86
  1410  0737  00DD               	movwf	??_command
  1411  0738                     u917:	
  1412  0738  0BDD               	decfsz	??_command,f
  1413  0739  2F38               	goto	u917
  1414  073A  0BDE               	decfsz	??_command+1,f
  1415  073B  2F38               	goto	u917
  1416  073C  0BDF               	decfsz	??_command+2,f
  1417  073D  2F38               	goto	u917
  1418  073E  2F3F               	nop2
  1419                           
  1420                           ;OBC1_app.c: 62: PORTDbits.RD6 = 0;
  1421  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0741  1308               	bcf	8,6	;volatile
  1424                           
  1425                           ;OBC1_app.c: 63: _delay((unsigned long)((100)*(20000000/4000.0)));
  1426  0742  3003               	movlw	3
  1427  0743  00DF               	movwf	??_command+2
  1428  0744  308A               	movlw	138
  1429  0745  00DE               	movwf	??_command+1
  1430  0746  3056               	movlw	86
  1431  0747  00DD               	movwf	??_command
  1432  0748                     u927:	
  1433  0748  0BDD               	decfsz	??_command,f
  1434  0749  2F48               	goto	u927
  1435  074A  0BDE               	decfsz	??_command+1,f
  1436  074B  2F48               	goto	u927
  1437  074C  0BDF               	decfsz	??_command+2,f
  1438  074D  2F48               	goto	u927
  1439  074E  2F4F               	nop2
  1440                           
  1441                           ;OBC1_app.c: 64: LED_data_set();
  1442  074F  120A  118A  2203  120A  118A  	fcall	_LED_data_set
  1443                           
  1444                           ;OBC1_app.c: 65: spi_master_send(COM, 0x11);
  1445  0754  3011               	movlw	17
  1446  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0757  00DD               	movwf	??_command
  1449  0758  085D               	movf	??_command,w
  1450  0759  00F0               	movwf	spi_master_send@data
  1451  075A  3003               	movlw	3
  1452  075B  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1453                           
  1454                           ;OBC1_app.c: 66: send_data_master(COM, (0x01), DATA_END);
  1455  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0762  01CF               	clrf	send_data_master@data_type
  1458  0763  0ACF               	incf	send_data_master@data_type,f
  1459  0764  3010               	movlw	16
  1460  0765  00DD               	movwf	??_command
  1461  0766  085D               	movf	??_command,w
  1462  0767  00D0               	movwf	send_data_master@data_end_command
  1463  0768  3003               	movlw	3
  1464  0769  120A  118A  2232   	fcall	_send_data_master
  1465                           
  1466                           ;OBC1_app.c: 67: break;
  1467  076C  0008               	return
  1468  076D                     l1701:	
  1469                           ;OBC1_app.c: 69: case (0x02):
  1470                           
  1471                           
  1472                           ;OBC1_app.c: 70: spi_master_send(OBC2, 0x01);
  1473  076D  01F0               	clrf	spi_master_send@data
  1474  076E  0AF0               	incf	spi_master_send@data,f
  1475  076F  3002               	movlw	2
  1476  0770  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1477                           
  1478                           ;OBC1_app.c: 71: I2Ctemp_data_set();
  1479  0775  120A  118A  21CE  120A  118A  	fcall	_I2Ctemp_data_set
  1480                           
  1481                           ;OBC1_app.c: 72: spi_master_send(COM, 0x11);
  1482  077A  3011               	movlw	17
  1483  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1484  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1485  077D  00DD               	movwf	??_command
  1486  077E  085D               	movf	??_command,w
  1487  077F  00F0               	movwf	spi_master_send@data
  1488  0780  3003               	movlw	3
  1489  0781  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1490                           
  1491                           ;OBC1_app.c: 73: send_data_master(COM, 0x02, DATA_END);
  1492  0786  3002               	movlw	2
  1493  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0789  00DD               	movwf	??_command
  1496  078A  085D               	movf	??_command,w
  1497  078B  00CF               	movwf	send_data_master@data_type
  1498  078C  3010               	movlw	16
  1499  078D  00DE               	movwf	??_command+1
  1500  078E  085E               	movf	??_command+1,w
  1501  078F  00D0               	movwf	send_data_master@data_end_command
  1502  0790  3003               	movlw	3
  1503  0791  120A  118A  2232   	fcall	_send_data_master
  1504                           
  1505                           ;OBC1_app.c: 75: }
  1506                           
  1507                           ;OBC1_app.c: 74: break;
  1508  0794  0008               	return
  1509  0795                     l1705:	
  1510  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0797  0860               	movf	command@data,w
  1513                           
  1514                           ; Switch size 1, requested type "space"
  1515                           ; Number of cases is 3, Range of values is 1 to 3
  1516                           ; switch strategies available:
  1517                           ; Name         Instructions Cycles
  1518                           ; simple_byte           10     6 (average)
  1519                           ; direct_byte           20    11 (fixed)
  1520                           ; jumptable            263     9 (fixed)
  1521                           ;	Chosen strategy is simple_byte
  1522  0798  3A01               	xorlw	1	; case 1
  1523  0799  1903               	skipnz
  1524  079A  2F31               	goto	l383
  1525  079B  3A03               	xorlw	3	; case 2
  1526  079C  1903               	skipnz
  1527  079D  2F6D               	goto	l1701
  1528  079E  3A01               	xorlw	1	; case 3
  1529  079F  1903               	skipnz
  1530  07A0  2F0D               	goto	l1689
  1531  07A1  2FA2               	goto	l385
  1532  07A2                     l385:	
  1533  07A2  0008               	return
  1534  07A3                     __end_of_command:	
  1535                           
  1536                           	psect	text4
  1537  0232                     __ptext4:	
  1538 ;; *************** function _send_data_master *****************
  1539 ;; Defined at:
  1540 ;;		line 217 in file "system_protocol.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  destination     1    wreg     enum E1099
  1543 ;;  data_type       1    1[BANK0 ] enum E1104
  1544 ;;  data_end_com    1    2[BANK0 ] enum E1108
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  destination     1    4[BANK0 ] enum E1099
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       2       0       0       0
  1557 ;;      Locals:         0       1       0       0       0
  1558 ;;      Temps:          0       1       0       0       0
  1559 ;;      Totals:         0       4       0       0       0
  1560 ;;Total ram usage:        4 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    3
  1563 ;; This function calls:
  1564 ;;		_packet_send_master
  1565 ;; This function is called by:
  1566 ;;		_command
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _send_data_master
  1572  0232                     _send_data_master:	
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1576                           ;send_data_master@destination stored from wreg
  1577  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0234  00D2               	movwf	send_data_master@destination
  1580                           
  1581                           ;system_protocol.c: 219: packet.data_type = (uint8_t)data_type;
  1582  0235  084F               	movf	send_data_master@data_type,w
  1583  0236  00D1               	movwf	??_send_data_master
  1584  0237  0851               	movf	??_send_data_master,w
  1585  0238  00A1               	movwf	_packet
  1586                           
  1587                           ;system_protocol.c: 220: packet.data_end_command = (uint8_t)data_end_command;
  1588  0239  0850               	movf	send_data_master@data_end_command,w
  1589  023A  00D1               	movwf	??_send_data_master
  1590  023B  0851               	movf	??_send_data_master,w
  1591  023C  00C0               	movwf	_packet+31
  1592                           
  1593                           ;system_protocol.c: 222: packet_send_master(destination, &packet);
  1594  023D  3021               	movlw	(low (_packet| 0))& (0+255)
  1595  023E  00D1               	movwf	??_send_data_master
  1596  023F  0851               	movf	??_send_data_master,w
  1597  0240  00FC               	movwf	packet_send_master@p_packet
  1598  0241  0852               	movf	send_data_master@destination,w
  1599  0242  120A  118A  2389   	fcall	_packet_send_master
  1600  0245  0008               	return
  1601  0246                     __end_of_send_data_master:	
  1602                           
  1603                           	psect	text5
  1604  0389                     __ptext5:	
  1605 ;; *************** function _packet_send_master *****************
  1606 ;; Defined at:
  1607 ;;		line 465 in file "system_protocol.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  destination     1    wreg     enum E1099
  1610 ;;  p_packet        1   12[COMMON] PTR struct .
  1611 ;;		 -> packet(32), 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  destination     1    0[BANK0 ] enum E1099
  1614 ;; Return value:  Size  Location     Type
  1615 ;;		None               void
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         1       0       0       0       0
  1624 ;;      Locals:         0       1       0       0       0
  1625 ;;      Temps:          1       0       0       0       0
  1626 ;;      Totals:         2       1       0       0       0
  1627 ;;Total ram usage:        3 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    2
  1630 ;; This function calls:
  1631 ;;		_send_payload
  1632 ;;		_spi_master_send
  1633 ;; This function is called by:
  1634 ;;		_send_data_master
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _packet_send_master
  1640  0389                     _packet_send_master:	
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1644                           ;packet_send_master@destination stored from wreg
  1645  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1646  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1647  038B  00CE               	movwf	packet_send_master@destination
  1648                           
  1649                           ;system_protocol.c: 468: spi_master_send(destination, 0x01);
  1650  038C  01F0               	clrf	spi_master_send@data
  1651  038D  0AF0               	incf	spi_master_send@data,f
  1652  038E  084E               	movf	packet_send_master@destination,w
  1653  038F  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1654                           
  1655                           ;system_protocol.c: 471: spi_master_send(destination, &p_packet->data_type);
  1656  0394  087C               	movf	packet_send_master@p_packet,w
  1657  0395  00FD               	movwf	??_packet_send_master
  1658  0396  087D               	movf	??_packet_send_master,w
  1659  0397  00F0               	movwf	spi_master_send@data
  1660  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1662  039A  084E               	movf	packet_send_master@destination,w
  1663  039B  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1664                           
  1665                           ;system_protocol.c: 474: send_payload(destination, &p_packet->payload);
  1666  03A0  087C               	movf	packet_send_master@p_packet,w
  1667  03A1  3E01               	addlw	1
  1668  03A2  00FD               	movwf	??_packet_send_master
  1669  03A3  087D               	movf	??_packet_send_master,w
  1670  03A4  00F6               	movwf	send_payload@p_payload
  1671  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1672  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1673  03A7  084E               	movf	packet_send_master@destination,w
  1674  03A8  120A  118A  2498  120A  118A  	fcall	_send_payload
  1675                           
  1676                           ;system_protocol.c: 477: spi_master_send(destination, &p_packet->data_end_command);
  1677  03AD  087C               	movf	packet_send_master@p_packet,w
  1678  03AE  3E1F               	addlw	31
  1679  03AF  00FD               	movwf	??_packet_send_master
  1680  03B0  087D               	movf	??_packet_send_master,w
  1681  03B1  00F0               	movwf	spi_master_send@data
  1682  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1683  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1684  03B4  084E               	movf	packet_send_master@destination,w
  1685  03B5  120A  118A  2536   	fcall	_spi_master_send
  1686  03B8  0008               	return
  1687  03B9                     __end_of_packet_send_master:	
  1688                           
  1689                           	psect	text6
  1690  0498                     __ptext6:	
  1691 ;; *************** function _send_payload *****************
  1692 ;; Defined at:
  1693 ;;		line 397 in file "system_protocol.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  destination     1    wreg     enum E1099
  1696 ;;  p_payload       1    6[COMMON] PTR unsigned char 
  1697 ;;		 -> packet(32), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  destination     1   11[COMMON] enum E1099
  1700 ;;  index_pos       1   10[COMMON] unsigned char 
  1701 ;;  i               1    9[COMMON] unsigned char 
  1702 ;;  data_len        1    8[COMMON] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      unsigned char 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         1       0       0       0       0
  1713 ;;      Locals:         4       0       0       0       0
  1714 ;;      Temps:          1       0       0       0       0
  1715 ;;      Totals:         6       0       0       0       0
  1716 ;;Total ram usage:        6 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    1
  1719 ;; This function calls:
  1720 ;;		_spi_master_send
  1721 ;; This function is called by:
  1722 ;;		_packet_send_master
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _send_payload
  1728  0498                     _send_payload:	
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1732                           ;send_payload@destination stored from wreg
  1733  0498  00FB               	movwf	send_payload@destination
  1734                           
  1735                           ;system_protocol.c: 399: uint8_t i;
  1736                           ;system_protocol.c: 400: uint8_t data_len;
  1737                           ;system_protocol.c: 401: uint8_t index_pos = 0;
  1738  0499  01FA               	clrf	send_payload@index_pos
  1739  049A                     l1559:	
  1740                           ;system_protocol.c: 404: while(*p_payload != 0x00 || index_pos < 30)
  1741                           
  1742  049A  0876               	movf	send_payload@p_payload,w
  1743  049B  0084               	movwf	4
  1744  049C  1383               	bcf	3,7	;select IRP bank0
  1745  049D  0800               	movf	0,w
  1746  049E  1903               	btfsc	3,2
  1747  049F  2CD5               	goto	l1561
  1748  04A0                     l1539:	
  1749                           
  1750                           ;system_protocol.c: 405: {
  1751                           ;system_protocol.c: 406: data_len = *p_payload;
  1752  04A0  0876               	movf	send_payload@p_payload,w
  1753  04A1  0084               	movwf	4
  1754  04A2  1383               	bcf	3,7	;select IRP bank0
  1755  04A3  0800               	movf	0,w
  1756  04A4  00F7               	movwf	??_send_payload
  1757  04A5  0877               	movf	??_send_payload,w
  1758  04A6  00F8               	movwf	send_payload@data_len
  1759                           
  1760                           ;system_protocol.c: 407: spi_master_send(destination, p_payload++);
  1761  04A7  0876               	movf	send_payload@p_payload,w
  1762  04A8  00F7               	movwf	??_send_payload
  1763  04A9  0877               	movf	??_send_payload,w
  1764  04AA  00F0               	movwf	spi_master_send@data
  1765  04AB  087B               	movf	send_payload@destination,w
  1766  04AC  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1767  04B1  3001               	movlw	1
  1768  04B2  00F7               	movwf	??_send_payload
  1769  04B3  0877               	movf	??_send_payload,w
  1770  04B4  07F6               	addwf	send_payload@p_payload,f
  1771                           
  1772                           ;system_protocol.c: 408: index_pos++;
  1773  04B5  3001               	movlw	1
  1774  04B6  00F7               	movwf	??_send_payload
  1775  04B7  0877               	movf	??_send_payload,w
  1776  04B8  07FA               	addwf	send_payload@index_pos,f
  1777                           
  1778                           ;system_protocol.c: 409: for(i = 0; i < data_len; i++)
  1779  04B9  01F9               	clrf	send_payload@i
  1780  04BA                     l1557:	
  1781  04BA  0878               	movf	send_payload@data_len,w
  1782  04BB  0279               	subwf	send_payload@i,w
  1783  04BC  1803               	btfsc	3,0
  1784  04BD  2C9A               	goto	l1559
  1785                           
  1786                           ;system_protocol.c: 410: {
  1787                           ;system_protocol.c: 411: spi_master_send(destination, p_payload++);
  1788  04BE  0876               	movf	send_payload@p_payload,w
  1789  04BF  00F7               	movwf	??_send_payload
  1790  04C0  0877               	movf	??_send_payload,w
  1791  04C1  00F0               	movwf	spi_master_send@data
  1792  04C2  087B               	movf	send_payload@destination,w
  1793  04C3  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  1794  04C8  3001               	movlw	1
  1795  04C9  00F7               	movwf	??_send_payload
  1796  04CA  0877               	movf	??_send_payload,w
  1797  04CB  07F6               	addwf	send_payload@p_payload,f
  1798                           
  1799                           ;system_protocol.c: 412: index_pos++;
  1800  04CC  3001               	movlw	1
  1801  04CD  00F7               	movwf	??_send_payload
  1802  04CE  0877               	movf	??_send_payload,w
  1803  04CF  07FA               	addwf	send_payload@index_pos,f
  1804  04D0  3001               	movlw	1
  1805  04D1  00F7               	movwf	??_send_payload
  1806  04D2  0877               	movf	??_send_payload,w
  1807  04D3  07F9               	addwf	send_payload@i,f
  1808  04D4  2CBA               	goto	l1557
  1809  04D5                     l1561:	
  1810  04D5  301E               	movlw	30
  1811  04D6  027A               	subwf	send_payload@index_pos,w
  1812  04D7  1803               	btfsc	3,0
  1813  04D8  0008               	return
  1814  04D9  2CA0               	goto	l1539
  1815  04DA                     __end_of_send_payload:	
  1816                           ;system_protocol.c: 413: }
  1817                           ;system_protocol.c: 414: }
  1818                           ;system_protocol.c: 416: return index_pos;
  1819                           ;	Return value of _send_payload is never used
  1820                           
  1821                           
  1822                           	psect	text7
  1823  0679                     __ptext7:	
  1824 ;; *************** function _get_cw_data *****************
  1825 ;; Defined at:
  1826 ;;		line 94 in file "system_protocol.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  buf             2    0[BANK0 ] unsigned int 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;		None               void
  1833 ;; Registers used:
  1834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       2       0       0       0
  1842 ;;      Temps:          1       0       0       0       0
  1843 ;;      Totals:         1       2       0       0       0
  1844 ;;Total ram usage:        3 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    3
  1847 ;; This function calls:
  1848 ;;		_get_adcon
  1849 ;;		_spi_master_receive
  1850 ;;		_spi_master_start
  1851 ;; This function is called by:
  1852 ;;		_command
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _get_cw_data
  1858  0679                     _get_cw_data:	
  1859                           
  1860                           ;system_protocol.c: 96: uint16_t buf;
  1861                           ;system_protocol.c: 98: spi_master_start();
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1865  0679  120A  118A  227F  120A  118A  	fcall	_spi_master_start
  1866                           
  1867                           ;system_protocol.c: 99: cw.power1[0] = spi_master_receive(POW);
  1868  067E  3004               	movlw	4
  1869  067F  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1870  0684  00FD               	movwf	??_get_cw_data
  1871  0685  087D               	movf	??_get_cw_data,w
  1872  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0688  00C1               	movwf	_cw
  1875                           
  1876                           ;system_protocol.c: 100: cw.power1[1] = spi_master_receive(POW);
  1877  0689  3004               	movlw	4
  1878  068A  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1879  068F  00FD               	movwf	??_get_cw_data
  1880  0690  087D               	movf	??_get_cw_data,w
  1881  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0693  00C2               	movwf	_cw+1
  1884                           
  1885                           ;system_protocol.c: 101: cw.power2[0] = spi_master_receive(POW);
  1886  0694  3004               	movlw	4
  1887  0695  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1888  069A  00FD               	movwf	??_get_cw_data
  1889  069B  087D               	movf	??_get_cw_data,w
  1890  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1891  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1892  069E  00C3               	movwf	_cw+2
  1893                           
  1894                           ;system_protocol.c: 102: cw.power2[1] = spi_master_receive(POW);
  1895  069F  3004               	movlw	4
  1896  06A0  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1897  06A5  00FD               	movwf	??_get_cw_data
  1898  06A6  087D               	movf	??_get_cw_data,w
  1899  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1900  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1901  06A9  00C4               	movwf	_cw+3
  1902                           
  1903                           ;system_protocol.c: 103: cw.power3[0] = spi_master_receive(POW);
  1904  06AA  3004               	movlw	4
  1905  06AB  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1906  06B0  00FD               	movwf	??_get_cw_data
  1907  06B1  087D               	movf	??_get_cw_data,w
  1908  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1909  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1910  06B4  00C5               	movwf	_cw+4
  1911                           
  1912                           ;system_protocol.c: 104: cw.power3[1] = spi_master_receive(POW);
  1913  06B5  3004               	movlw	4
  1914  06B6  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1915  06BB  00FD               	movwf	??_get_cw_data
  1916  06BC  087D               	movf	??_get_cw_data,w
  1917  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1918  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1919  06BF  00C6               	movwf	_cw+5
  1920                           
  1921                           ;system_protocol.c: 105: cw.power4[0] = spi_master_receive(POW);
  1922  06C0  3004               	movlw	4
  1923  06C1  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1924  06C6  00FD               	movwf	??_get_cw_data
  1925  06C7  087D               	movf	??_get_cw_data,w
  1926  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1927  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1928  06CA  00C7               	movwf	_cw+6
  1929                           
  1930                           ;system_protocol.c: 106: cw.power4[1] = spi_master_receive(POW);
  1931  06CB  3004               	movlw	4
  1932  06CC  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1933  06D1  00FD               	movwf	??_get_cw_data
  1934  06D2  087D               	movf	??_get_cw_data,w
  1935  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1936  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1937  06D5  00C8               	movwf	_cw+7
  1938                           
  1939                           ;system_protocol.c: 107: cw.power5[0] = spi_master_receive(POW);
  1940  06D6  3004               	movlw	4
  1941  06D7  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1942  06DC  00FD               	movwf	??_get_cw_data
  1943  06DD  087D               	movf	??_get_cw_data,w
  1944  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1945  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1946  06E0  00C9               	movwf	_cw+8
  1947                           
  1948                           ;system_protocol.c: 108: cw.power5[1] = spi_master_receive(POW);
  1949  06E1  3004               	movlw	4
  1950  06E2  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  1951  06E7  00FD               	movwf	??_get_cw_data
  1952  06E8  087D               	movf	??_get_cw_data,w
  1953  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1954  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1955  06EB  00CA               	movwf	_cw+9
  1956                           
  1957                           ;system_protocol.c: 109: buf = get_adcon();
  1958  06EC  120A  118A  229E   	fcall	_get_adcon
  1959  06EF  0877               	movf	?_get_adcon+1,w
  1960  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1961  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1962  06F2  00CF               	movwf	get_cw_data@buf+1
  1963  06F3  0876               	movf	?_get_adcon,w
  1964  06F4  00CE               	movwf	get_cw_data@buf
  1965                           
  1966                           ;system_protocol.c: 110: cw.temp[0] = (uint8_t)(buf >> 8);
  1967  06F5  084F               	movf	get_cw_data@buf+1,w
  1968  06F6  00FD               	movwf	??_get_cw_data
  1969  06F7  087D               	movf	??_get_cw_data,w
  1970  06F8  00CB               	movwf	_cw+10
  1971                           
  1972                           ;system_protocol.c: 111: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  1973  06F9  084E               	movf	get_cw_data@buf,w
  1974  06FA  00FD               	movwf	??_get_cw_data
  1975  06FB  087D               	movf	??_get_cw_data,w
  1976  06FC  00CC               	movwf	_cw+11
  1977                           
  1978                           ;system_protocol.c: 112: cw.obc2 = 1;
  1979  06FD  144D               	bsf	_cw+12,0
  1980                           
  1981                           ;system_protocol.c: 113: cw.powmcu = 1;
  1982  06FE  14CD               	bsf	_cw+12,1
  1983  06FF  0008               	return
  1984  0700                     __end_of_get_cw_data:	
  1985                           
  1986                           	psect	text8
  1987  027F                     __ptext8:	
  1988 ;; *************** function _spi_master_start *****************
  1989 ;; Defined at:
  1990 ;;		line 36 in file "spi_master.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;		None               void
  1997 ;; Registers used:
  1998 ;;		None
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;;		_get_cw_data
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _spi_master_start
  2020  027F                     _spi_master_start:	
  2021                           
  2022                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _spi_master_start: []
  2026  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0281  1187               	bcf	7,3	;volatile
  2029                           
  2030                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  2031  0282  1287               	bcf	7,5	;volatile
  2032                           
  2033                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  2034  0283  1607               	bsf	7,4	;volatile
  2035                           
  2036                           ;spi_master.c: 44: TRISCbits.TRISC2 = 0;
  2037  0284  1107               	bcf	7,2	;volatile
  2038                           
  2039                           ;spi_master.c: 45: TRISCbits.TRISC0 = 0;
  2040  0285  1007               	bcf	7,0	;volatile
  2041                           
  2042                           ;spi_master.c: 46: TRISCbits.TRISC1 = 0;
  2043  0286  1087               	bcf	7,1	;volatile
  2044                           
  2045                           ;spi_master.c: 49: SSPCONbits.SSPEN = 0;
  2046  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0289  1294               	bcf	20,5	;volatile
  2049                           
  2050                           ;spi_master.c: 52: SSPSTATbits.SMP = 0;
  2051  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2052  028B  1303               	bcf	3,6	;RP1=0, select bank1
  2053  028C  1394               	bcf	20,7	;volatile
  2054                           
  2055                           ;spi_master.c: 53: SSPCONbits.CKP = 0;
  2056  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2057  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2058  028F  1214               	bcf	20,4	;volatile
  2059                           
  2060                           ;spi_master.c: 54: SSPSTATbits.CKE = 0;
  2061  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2062  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2063  0292  1314               	bcf	20,6	;volatile
  2064                           
  2065                           ;spi_master.c: 57: SSPCONbits.SSPM3 = 0;
  2066  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0295  1194               	bcf	20,3	;volatile
  2069                           
  2070                           ;spi_master.c: 58: SSPCONbits.SSPM2 = 0;
  2071  0296  1114               	bcf	20,2	;volatile
  2072                           
  2073                           ;spi_master.c: 59: SSPCONbits.SSPM1 = 0;
  2074  0297  1094               	bcf	20,1	;volatile
  2075                           
  2076                           ;spi_master.c: 60: SSPCONbits.SSPM0 = 0;
  2077  0298  1014               	bcf	20,0	;volatile
  2078                           
  2079                           ;spi_master.c: 63: PORTCbits.RC2 = 1;
  2080  0299  1507               	bsf	7,2	;volatile
  2081                           
  2082                           ;spi_master.c: 64: PORTCbits.RC0 = 1;
  2083  029A  1407               	bsf	7,0	;volatile
  2084                           
  2085                           ;spi_master.c: 65: PORTCbits.RC1 = 1;
  2086  029B  1487               	bsf	7,1	;volatile
  2087                           
  2088                           ;spi_master.c: 68: SSPCONbits.SSPEN = 1;
  2089  029C  1694               	bsf	20,5	;volatile
  2090  029D  0008               	return
  2091  029E                     __end_of_spi_master_start:	
  2092                           
  2093                           	psect	text9
  2094  029E                     __ptext9:	
  2095 ;; *************** function _get_adcon *****************
  2096 ;; Defined at:
  2097 ;;		line 91 in file "AD_value.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  voltage_valu    3    0        unsigned int 
  2102 ;;  ad_value        2   11[COMMON] unsigned int 
  2103 ;;  my_adres        2    9[COMMON] struct .
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2    6[COMMON] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         2       0       0       0       0
  2114 ;;      Locals:         4       0       0       0       0
  2115 ;;      Temps:          1       0       0       0       0
  2116 ;;      Totals:         7       0       0       0       0
  2117 ;;Total ram usage:        7 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    2
  2120 ;; This function calls:
  2121 ;;		_bit_shift
  2122 ;; This function is called by:
  2123 ;;		_get_cw_data
  2124 ;;		_get_pt
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _get_adcon
  2130  029E                     _get_adcon:	
  2131                           
  2132                           ;AD_value.c: 94: uint16_t ad_value = 0b0000000000;
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2136  029E  01FB               	clrf	get_adcon@ad_value
  2137  029F  01FC               	clrf	get_adcon@ad_value+1
  2138                           
  2139                           ;AD_value.c: 95: double voltage_value;
  2140                           ;AD_value.c: 96: adres_t my_adres;
  2141                           ;AD_value.c: 99: ADCON0 = 0b10000001;
  2142  02A0  3081               	movlw	129
  2143  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2144  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2145  02A3  009F               	movwf	31	;volatile
  2146                           
  2147                           ;AD_value.c: 100: ADCON0bits.GO_DONE = 1;
  2148  02A4  151F               	bsf	31,2	;volatile
  2149  02A5                     l65:	
  2150                           ;AD_value.c: 103: while(ADCON0bits.GO_DONE){;}
  2151                           
  2152  02A5  191F               	btfsc	31,2	;volatile
  2153  02A6  2AA5               	goto	l65
  2154                           
  2155                           ;AD_value.c: 106: my_adres.my_adres_h = ADRESH;
  2156  02A7  081E               	movf	30,w	;volatile
  2157  02A8  00F8               	movwf	??_get_adcon
  2158  02A9  0878               	movf	??_get_adcon,w
  2159  02AA  00F9               	movwf	get_adcon@my_adres
  2160                           
  2161                           ;AD_value.c: 107: my_adres.my_adres_l = ADRESL;
  2162  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2163  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2164  02AD  081E               	movf	30,w	;volatile
  2165  02AE  00F8               	movwf	??_get_adcon
  2166  02AF  0878               	movf	??_get_adcon,w
  2167  02B0  00FA               	movwf	get_adcon@my_adres+1
  2168                           
  2169                           ;AD_value.c: 108: bit_shift(&ad_value, &my_adres);
  2170  02B1  3079               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  2171  02B2  00F8               	movwf	??_get_adcon
  2172  02B3  0878               	movf	??_get_adcon,w
  2173  02B4  00F0               	movwf	bit_shift@p_adres
  2174  02B5  307B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  2175  02B6  120A  118A  23B9   	fcall	_bit_shift
  2176                           
  2177                           ;AD_value.c: 110: return ad_value;
  2178  02B9  087C               	movf	get_adcon@ad_value+1,w
  2179  02BA  00F7               	movwf	?_get_adcon+1
  2180  02BB  087B               	movf	get_adcon@ad_value,w
  2181  02BC  00F6               	movwf	?_get_adcon
  2182  02BD  0008               	return
  2183  02BE                     __end_of_get_adcon:	
  2184                           
  2185                           	psect	text10
  2186  03B9                     __ptext10:	
  2187 ;; *************** function _bit_shift *****************
  2188 ;; Defined at:
  2189 ;;		line 71 in file "AD_value.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  p_ad_value      1    wreg     PTR unsigned int 
  2192 ;;		 -> get_adcon@ad_value(2), 
  2193 ;;  p_adres         1    0[COMMON] PTR struct .
  2194 ;;		 -> get_adcon@my_adres(2), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  p_ad_value      1    5[COMMON] PTR unsigned int 
  2197 ;;		 -> get_adcon@ad_value(2), 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2207 ;;      Params:         1       0       0       0       0
  2208 ;;      Locals:         1       0       0       0       0
  2209 ;;      Temps:          4       0       0       0       0
  2210 ;;      Totals:         6       0       0       0       0
  2211 ;;Total ram usage:        6 bytes
  2212 ;; Hardware stack levels used:    2
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_get_adcon
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _bit_shift
  2222  03B9                     _bit_shift:	
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  2226                           ;bit_shift@p_ad_value stored from wreg
  2227  03B9  00F5               	movwf	bit_shift@p_ad_value
  2228                           
  2229                           ;AD_value.c: 73: const uint8_t bit_mask_for_l = 0b00000011;
  2230                           ;AD_value.c: 75: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  2231  03BA  0870               	movf	bit_shift@p_adres,w
  2232  03BB  0084               	movwf	4
  2233  03BC  0800               	movf	0,w
  2234  03BD  00F1               	movwf	??_bit_shift
  2235  03BE  01F2               	clrf	??_bit_shift+1
  2236  03BF  0875               	movf	bit_shift@p_ad_value,w
  2237  03C0  0084               	movwf	4
  2238  03C1  0871               	movf	??_bit_shift,w
  2239  03C2  0080               	movwf	0
  2240  03C3  0A84               	incf	4,f
  2241  03C4  0872               	movf	??_bit_shift+1,w
  2242  03C5  0080               	movwf	0
  2243                           
  2244                           ;AD_value.c: 76: *p_ad_value <<= 2;
  2245  03C6  0875               	movf	bit_shift@p_ad_value,w
  2246  03C7  0084               	movwf	4
  2247  03C8  3002               	movlw	2
  2248  03C9                     u665:	
  2249  03C9  1003               	clrc
  2250  03CA  0D80               	rlf	0,f
  2251  03CB  0A84               	incf	4,f
  2252  03CC  0D80               	rlf	0,f
  2253  03CD  0384               	decf	4,f
  2254  03CE  3EFF               	addlw	-1
  2255  03CF  1D03               	skipz
  2256  03D0  2BC9               	goto	u665
  2257                           
  2258                           ;AD_value.c: 77: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  2259  03D1  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  2260  03D2  0084               	movwf	4
  2261  03D3  120A  118A  2003  120A  118A  	fcall	stringdir
  2262  03D8  00F1               	movwf	??_bit_shift
  2263  03D9  0A70               	incf	bit_shift@p_adres,w
  2264  03DA  0084               	movwf	4
  2265  03DB  0800               	movf	0,w
  2266  03DC  00F2               	movwf	??_bit_shift+1
  2267  03DD  3006               	movlw	6
  2268  03DE                     u675:	
  2269  03DE  1003               	clrc
  2270  03DF  0CF2               	rrf	??_bit_shift+1,f
  2271  03E0  3EFF               	addlw	-1
  2272  03E1  1D03               	skipz
  2273  03E2  2BDE               	goto	u675
  2274  03E3  0872               	movf	??_bit_shift+1,w
  2275  03E4  0571               	andwf	??_bit_shift,w
  2276  03E5  00F3               	movwf	??_bit_shift+2
  2277  03E6  01F4               	clrf	??_bit_shift+3
  2278  03E7  0875               	movf	bit_shift@p_ad_value,w
  2279  03E8  0084               	movwf	4
  2280  03E9  0873               	movf	??_bit_shift+2,w
  2281  03EA  0480               	iorwf	0,f
  2282  03EB  0A84               	incf	4,f
  2283  03EC  0874               	movf	??_bit_shift+3,w
  2284  03ED  0480               	iorwf	0,f
  2285  03EE  0008               	return
  2286  03EF                     __end_of_bit_shift:	
  2287                           
  2288                           	psect	text11
  2289  05F9                     __ptext11:	
  2290 ;; *************** function _cw_data_set *****************
  2291 ;; Defined at:
  2292 ;;		line 180 in file "system_protocol.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  p_cw_data       1    wreg     PTR struct .
  2295 ;;		 -> cw(13), 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  p_cw_data       1    5[COMMON] PTR struct .
  2298 ;;		 -> cw(13), 
  2299 ;;  i               1    0        unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         1       0       0       0       0
  2311 ;;      Temps:          1       0       0       0       0
  2312 ;;      Totals:         2       0       0       0       0
  2313 ;;Total ram usage:        2 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    1
  2316 ;; This function calls:
  2317 ;;		_uint8_data_set
  2318 ;; This function is called by:
  2319 ;;		_command
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _cw_data_set
  2325  05F9                     _cw_data_set:	
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2329                           ;cw_data_set@p_cw_data stored from wreg
  2330  05F9  00F5               	movwf	cw_data_set@p_cw_data
  2331                           
  2332                           ;system_protocol.c: 182: uint8_t i;
  2333                           ;system_protocol.c: 185: uint8_data_set(&(p_cw_data->power1), 2);
  2334  05FA  0875               	movf	cw_data_set@p_cw_data,w
  2335  05FB  00F0               	movwf	uint8_data_set@p_data
  2336  05FC  3000               	movlw	0
  2337  05FD  00F1               	movwf	uint8_data_set@p_data+1
  2338  05FE  3002               	movlw	2
  2339  05FF  00F4               	movwf	??_cw_data_set
  2340  0600  0874               	movf	??_cw_data_set,w
  2341  0601  00F2               	movwf	uint8_data_set@data_len
  2342  0602  120A  118A  22DF  120A  118A  	fcall	_uint8_data_set
  2343                           
  2344                           ;system_protocol.c: 186: uint8_data_set(&(p_cw_data->power2), 2);
  2345  0607  0875               	movf	cw_data_set@p_cw_data,w
  2346  0608  3E02               	addlw	2
  2347  0609  00F0               	movwf	uint8_data_set@p_data
  2348  060A  3000               	movlw	0
  2349  060B  00F1               	movwf	uint8_data_set@p_data+1
  2350  060C  3002               	movlw	2
  2351  060D  00F4               	movwf	??_cw_data_set
  2352  060E  0874               	movf	??_cw_data_set,w
  2353  060F  00F2               	movwf	uint8_data_set@data_len
  2354  0610  120A  118A  22DF  120A  118A  	fcall	_uint8_data_set
  2355                           
  2356                           ;system_protocol.c: 187: uint8_data_set(&(p_cw_data->power3), 2);
  2357  0615  0875               	movf	cw_data_set@p_cw_data,w
  2358  0616  3E04               	addlw	4
  2359  0617  00F0               	movwf	uint8_data_set@p_data
  2360  0618  3000               	movlw	0
  2361  0619  00F1               	movwf	uint8_data_set@p_data+1
  2362  061A  3002               	movlw	2
  2363  061B  00F4               	movwf	??_cw_data_set
  2364  061C  0874               	movf	??_cw_data_set,w
  2365  061D  00F2               	movwf	uint8_data_set@data_len
  2366  061E  120A  118A  22DF  120A  118A  	fcall	_uint8_data_set
  2367                           
  2368                           ;system_protocol.c: 188: uint8_data_set(&(p_cw_data->power4), 2);
  2369  0623  0875               	movf	cw_data_set@p_cw_data,w
  2370  0624  3E06               	addlw	6
  2371  0625  00F0               	movwf	uint8_data_set@p_data
  2372  0626  3000               	movlw	0
  2373  0627  00F1               	movwf	uint8_data_set@p_data+1
  2374  0628  3002               	movlw	2
  2375  0629  00F4               	movwf	??_cw_data_set
  2376  062A  0874               	movf	??_cw_data_set,w
  2377  062B  00F2               	movwf	uint8_data_set@data_len
  2378  062C  120A  118A  22DF  120A  118A  	fcall	_uint8_data_set
  2379                           
  2380                           ;system_protocol.c: 189: uint8_data_set(&(p_cw_data->power5), 2);
  2381  0631  0875               	movf	cw_data_set@p_cw_data,w
  2382  0632  3E08               	addlw	8
  2383  0633  00F0               	movwf	uint8_data_set@p_data
  2384  0634  3000               	movlw	0
  2385  0635  00F1               	movwf	uint8_data_set@p_data+1
  2386  0636  3002               	movlw	2
  2387  0637  00F4               	movwf	??_cw_data_set
  2388  0638  0874               	movf	??_cw_data_set,w
  2389  0639  00F2               	movwf	uint8_data_set@data_len
  2390  063A  120A  118A  22DF  120A  118A  	fcall	_uint8_data_set
  2391                           
  2392                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->temp), 2);
  2393  063F  0875               	movf	cw_data_set@p_cw_data,w
  2394  0640  3E0A               	addlw	10
  2395  0641  00F0               	movwf	uint8_data_set@p_data
  2396  0642  3000               	movlw	0
  2397  0643  00F1               	movwf	uint8_data_set@p_data+1
  2398  0644  3002               	movlw	2
  2399  0645  00F4               	movwf	??_cw_data_set
  2400  0646  0874               	movf	??_cw_data_set,w
  2401  0647  00F2               	movwf	uint8_data_set@data_len
  2402  0648  120A  118A  22DF  120A  118A  	fcall	_uint8_data_set
  2403                           
  2404                           ;system_protocol.c: 195: packet.payload[index_pos++] = 1;
  2405  064D  1283               	bcf	3,5	;RP0=0, select bank0
  2406  064E  1303               	bcf	3,6	;RP1=0, select bank0
  2407  064F  0820               	movf	_index_pos,w
  2408  0650  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2409  0651  0084               	movwf	4
  2410  0652  1383               	bcf	3,7	;select IRP bank0
  2411  0653  0180               	clrf	0
  2412  0654  0A80               	incf	0,f
  2413  0655  3001               	movlw	1
  2414  0656  00F4               	movwf	??_cw_data_set
  2415  0657  0874               	movf	??_cw_data_set,w
  2416  0658  07A0               	addwf	_index_pos,f
  2417                           
  2418                           ;system_protocol.c: 196: packet.payload[index_pos++] = cw.obc2;
  2419  0659  0820               	movf	_index_pos,w
  2420  065A  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2421  065B  0084               	movwf	4
  2422  065C  3000               	movlw	0
  2423  065D  184D               	btfsc	_cw+12,0
  2424  065E  3001               	movlw	1
  2425  065F  0080               	movwf	0
  2426  0660  3001               	movlw	1
  2427  0661  00F4               	movwf	??_cw_data_set
  2428  0662  0874               	movf	??_cw_data_set,w
  2429  0663  07A0               	addwf	_index_pos,f
  2430                           
  2431                           ;system_protocol.c: 199: packet.payload[index_pos++] = 1;
  2432  0664  0820               	movf	_index_pos,w
  2433  0665  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2434  0666  0084               	movwf	4
  2435  0667  0180               	clrf	0
  2436  0668  0A80               	incf	0,f
  2437  0669  3001               	movlw	1
  2438  066A  00F4               	movwf	??_cw_data_set
  2439  066B  0874               	movf	??_cw_data_set,w
  2440  066C  07A0               	addwf	_index_pos,f
  2441                           
  2442                           ;system_protocol.c: 200: packet.payload[index_pos++] = cw.powmcu;
  2443  066D  0820               	movf	_index_pos,w
  2444  066E  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2445  066F  0084               	movwf	4
  2446  0670  3000               	movlw	0
  2447  0671  18CD               	btfsc	_cw+12,1
  2448  0672  3001               	movlw	1
  2449  0673  0080               	movwf	0
  2450  0674  3001               	movlw	1
  2451  0675  00F4               	movwf	??_cw_data_set
  2452  0676  0874               	movf	??_cw_data_set,w
  2453  0677  07A0               	addwf	_index_pos,f
  2454  0678  0008               	return
  2455  0679                     __end_of_cw_data_set:	
  2456                           
  2457                           	psect	text12
  2458  0203                     __ptext12:	
  2459 ;; *************** function _LED_data_set *****************
  2460 ;; Defined at:
  2461 ;;		line 78 in file "OBC1_app.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    4
  2482 ;; This function calls:
  2483 ;;		_sent_data_set
  2484 ;; This function is called by:
  2485 ;;		_command
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _LED_data_set
  2491  0203                     _LED_data_set:	
  2492                           
  2493                           ;OBC1_app.c: 80: sent_data_set(0x01, 1, 1);
  2494                           
  2495                           ;incstack = 0
  2496                           ; Regs used in _LED_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2497  0203  3001               	movlw	1
  2498  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0206  00D4               	movwf	sent_data_set@p_data
  2501  0207  3000               	movlw	0
  2502  0208  00D5               	movwf	sent_data_set@p_data+1
  2503  0209  01D6               	clrf	sent_data_set@data_len
  2504  020A  0AD6               	incf	sent_data_set@data_len,f
  2505  020B  01D7               	clrf	sent_data_set@byte_of_data
  2506  020C  0AD7               	incf	sent_data_set@byte_of_data,f
  2507  020D  120A  118A  2596   	fcall	_sent_data_set
  2508  0210  0008               	return
  2509  0211                     __end_of_LED_data_set:	
  2510                           
  2511                           	psect	text13
  2512  0596                     __ptext13:	
  2513 ;; *************** function _sent_data_set *****************
  2514 ;; Defined at:
  2515 ;;		line 141 in file "system_protocol.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  p_data          2    6[BANK0 ] PTR void 
  2518 ;;		 -> RAM(512), 
  2519 ;;  data_len        1    8[BANK0 ] unsigned char 
  2520 ;;  byte_of_data    1    9[BANK0 ] unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       4       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          0       5       0       0       0
  2535 ;;      Totals:         0       9       0       0       0
  2536 ;;Total ram usage:        9 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    3
  2539 ;; This function calls:
  2540 ;;		___wmul
  2541 ;;		_double_data_set
  2542 ;;		_uint16_data_set
  2543 ;;		_uint8_data_set
  2544 ;; This function is called by:
  2545 ;;		_LED_data_set
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _sent_data_set
  2551  0596                     _sent_data_set:	
  2552                           
  2553                           ;system_protocol.c: 144: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2557  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0598  0857               	movf	sent_data_set@byte_of_data,w
  2560  0599  3E01               	addlw	1
  2561  059A  00F0               	movwf	___wmul@multiplier
  2562  059B  3000               	movlw	0
  2563  059C  1803               	skipnc
  2564  059D  3001               	movlw	1
  2565  059E  00F1               	movwf	___wmul@multiplier+1
  2566  059F  0856               	movf	sent_data_set@data_len,w
  2567  05A0  00D8               	movwf	??_sent_data_set
  2568  05A1  01D9               	clrf	??_sent_data_set+1
  2569  05A2  0858               	movf	??_sent_data_set,w
  2570  05A3  00F2               	movwf	___wmul@multiplicand
  2571  05A4  0859               	movf	??_sent_data_set+1,w
  2572  05A5  00F3               	movwf	___wmul@multiplicand+1
  2573  05A6  120A  118A  22BE  120A  118A  	fcall	___wmul
  2574  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2575  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2576  05AD  0820               	movf	_index_pos,w
  2577  05AE  0770               	addwf	?___wmul,w
  2578  05AF  00DA               	movwf	??_sent_data_set+2
  2579  05B0  0871               	movf	?___wmul+1,w
  2580  05B1  1803               	skipnc
  2581  05B2  0A71               	incf	?___wmul+1,w
  2582  05B3  00DB               	movwf	??_sent_data_set+3
  2583  05B4  09DA               	comf	??_sent_data_set+2,f
  2584  05B5  09DB               	comf	??_sent_data_set+3,f
  2585  05B6  0ADA               	incf	??_sent_data_set+2,f
  2586  05B7  1903               	skipnz
  2587  05B8  0ADB               	incf	??_sent_data_set+3,f
  2588  05B9  301E               	movlw	30
  2589  05BA  075A               	addwf	??_sent_data_set+2,w
  2590  05BB  085B               	movf	??_sent_data_set+3,w
  2591  05BC  1803               	skipnc
  2592  05BD  0A5B               	incf	??_sent_data_set+3,w
  2593  05BE  3E00               	addlw	0
  2594  05BF  00DC               	movwf	??_sent_data_set+4
  2595  05C0  1BDC               	btfsc	??_sent_data_set+4,7
  2596  05C1  0008               	return
  2597  05C2  2DEB               	goto	l1605
  2598  05C3                     l1597:	
  2599                           ;system_protocol.c: 151: {
  2600                           ;system_protocol.c: 152: case 1:
  2601                           
  2602                           ;system_protocol.c: 147: }
  2603                           ;system_protocol.c: 150: switch(byte_of_data)
  2604                           
  2605                           ;system_protocol.c: 145: {
  2606                           ;system_protocol.c: 146: return 0xff;
  2607                           ;	Return value of _sent_data_set is never used
  2608                           
  2609                           
  2610                           ;system_protocol.c: 153: uint8_data_set((uint8_t *)p_data, data_len);
  2611  05C3  0854               	movf	sent_data_set@p_data,w
  2612  05C4  00F0               	movwf	uint8_data_set@p_data
  2613  05C5  0855               	movf	sent_data_set@p_data+1,w
  2614  05C6  00F1               	movwf	uint8_data_set@p_data+1
  2615  05C7  0856               	movf	sent_data_set@data_len,w
  2616  05C8  00D8               	movwf	??_sent_data_set
  2617  05C9  0858               	movf	??_sent_data_set,w
  2618  05CA  00F2               	movwf	uint8_data_set@data_len
  2619  05CB  120A  118A  22DF   	fcall	_uint8_data_set
  2620                           
  2621                           ;system_protocol.c: 154: break;
  2622  05CE  0008               	return
  2623  05CF                     l1599:	
  2624                           ;system_protocol.c: 155: case 2:
  2625                           
  2626                           
  2627                           ;system_protocol.c: 156: uint16_data_set((uint16_t *)p_data, data_len);
  2628  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2629  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2630  05D1  0854               	movf	sent_data_set@p_data,w
  2631  05D2  00F6               	movwf	uint16_data_set@p_data
  2632  05D3  0855               	movf	sent_data_set@p_data+1,w
  2633  05D4  00F7               	movwf	uint16_data_set@p_data+1
  2634  05D5  0856               	movf	sent_data_set@data_len,w
  2635  05D6  00D8               	movwf	??_sent_data_set
  2636  05D7  0858               	movf	??_sent_data_set,w
  2637  05D8  00F8               	movwf	uint16_data_set@data_len
  2638  05D9  120A  118A  2426   	fcall	_uint16_data_set
  2639                           
  2640                           ;system_protocol.c: 157: break;
  2641  05DC  0008               	return
  2642  05DD                     l1601:	
  2643                           ;system_protocol.c: 158: case 4:
  2644                           
  2645                           
  2646                           ;system_protocol.c: 159: double_data_set((double *)p_data, data_len);
  2647  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2648  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2649  05DF  0854               	movf	sent_data_set@p_data,w
  2650  05E0  00FA               	movwf	double_data_set@p_data
  2651  05E1  0855               	movf	sent_data_set@p_data+1,w
  2652  05E2  00FB               	movwf	double_data_set@p_data+1
  2653  05E3  0856               	movf	sent_data_set@data_len,w
  2654  05E4  00D8               	movwf	??_sent_data_set
  2655  05E5  0858               	movf	??_sent_data_set,w
  2656  05E6  00FC               	movwf	double_data_set@data_len
  2657  05E7  120A  118A  23EF   	fcall	_double_data_set
  2658                           
  2659                           ;system_protocol.c: 163: }
  2660                           
  2661                           ;system_protocol.c: 162: return 0xff;
  2662                           ;	Return value of _sent_data_set is never used
  2663                           
  2664                           ;system_protocol.c: 161: default:
  2665                           
  2666                           ;system_protocol.c: 160: break;
  2667  05EA  0008               	return
  2668  05EB                     l1605:	
  2669  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2670  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2671  05ED  0857               	movf	sent_data_set@byte_of_data,w
  2672                           
  2673                           ; Switch size 1, requested type "space"
  2674                           ; Number of cases is 3, Range of values is 1 to 4
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte           10     6 (average)
  2678                           ; direct_byte           23    11 (fixed)
  2679                           ; jumptable            263     9 (fixed)
  2680                           ;	Chosen strategy is simple_byte
  2681  05EE  3A01               	xorlw	1	; case 1
  2682  05EF  1903               	skipnz
  2683  05F0  2DC3               	goto	l1597
  2684  05F1  3A03               	xorlw	3	; case 2
  2685  05F2  1903               	skipnz
  2686  05F3  2DCF               	goto	l1599
  2687  05F4  3A06               	xorlw	6	; case 4
  2688  05F5  1903               	skipnz
  2689  05F6  2DDD               	goto	l1601
  2690  05F7  2DF8               	goto	l237
  2691  05F8                     l237:	
  2692                           ;system_protocol.c: 166: return (uint8_t)(30 - index_pos);
  2693                           ;	Return value of _sent_data_set is never used
  2694                           
  2695  05F8  0008               	return
  2696  05F9                     __end_of_sent_data_set:	
  2697                           
  2698                           	psect	text14
  2699  02DF                     __ptext14:	
  2700 ;; *************** function _uint8_data_set *****************
  2701 ;; Defined at:
  2702 ;;		line 260 in file "system_protocol.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  p_data          2    0[COMMON] PTR unsigned char 
  2705 ;;		 -> RAM(512), cw(13), 
  2706 ;;  data_len        1    2[COMMON] unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;		None               void
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         3       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0
  2720 ;;      Temps:          1       0       0       0       0
  2721 ;;      Totals:         4       0       0       0       0
  2722 ;;Total ram usage:        4 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_sent_data_set
  2728 ;;		_cw_data_set
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _uint8_data_set
  2734  02DF                     _uint8_data_set:	
  2735  02DF                     l1481:	
  2736                           ;system_protocol.c: 262: while(data_len)
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  2740                           
  2741  02DF  0872               	movf	uint8_data_set@data_len,w
  2742  02E0  1903               	btfsc	3,2
  2743  02E1  0008               	return
  2744                           
  2745                           ;system_protocol.c: 263: {
  2746                           ;system_protocol.c: 264: packet.payload[index_pos++] = 1;
  2747  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2748  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2749  02E4  0820               	movf	_index_pos,w
  2750  02E5  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2751  02E6  0084               	movwf	4
  2752  02E7  1383               	bcf	3,7	;select IRP bank0
  2753  02E8  0180               	clrf	0
  2754  02E9  0A80               	incf	0,f
  2755  02EA  3001               	movlw	1
  2756  02EB  00F3               	movwf	??_uint8_data_set
  2757  02EC  0873               	movf	??_uint8_data_set,w
  2758  02ED  07A0               	addwf	_index_pos,f
  2759                           
  2760                           ;system_protocol.c: 265: packet.payload[index_pos++] = *p_data++;
  2761  02EE  0870               	movf	uint8_data_set@p_data,w
  2762  02EF  0084               	movwf	4
  2763  02F0  1783               	bsf	3,7
  2764  02F1  1C71               	btfss	uint8_data_set@p_data+1,0
  2765  02F2  1383               	bcf	3,7
  2766  02F3  0800               	movf	0,w
  2767  02F4  00F3               	movwf	??_uint8_data_set
  2768  02F5  0820               	movf	_index_pos,w
  2769  02F6  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2770  02F7  0084               	movwf	4
  2771  02F8  0873               	movf	??_uint8_data_set,w
  2772  02F9  1383               	bcf	3,7	;select IRP bank0
  2773  02FA  0080               	movwf	0
  2774  02FB  3001               	movlw	1
  2775  02FC  07F0               	addwf	uint8_data_set@p_data,f
  2776  02FD  1803               	skipnc
  2777  02FE  0AF1               	incf	uint8_data_set@p_data+1,f
  2778  02FF  3000               	movlw	0
  2779  0300  07F1               	addwf	uint8_data_set@p_data+1,f
  2780  0301  3001               	movlw	1
  2781  0302  00F3               	movwf	??_uint8_data_set
  2782  0303  0873               	movf	??_uint8_data_set,w
  2783  0304  07A0               	addwf	_index_pos,f
  2784                           
  2785                           ;system_protocol.c: 266: data_len--;
  2786  0305  3001               	movlw	1
  2787  0306  02F2               	subwf	uint8_data_set@data_len,f
  2788  0307  2ADF               	goto	l1481
  2789  0308                     __end_of_uint8_data_set:	
  2790                           
  2791                           	psect	text15
  2792  0426                     __ptext15:	
  2793 ;; *************** function _uint16_data_set *****************
  2794 ;; Defined at:
  2795 ;;		line 282 in file "system_protocol.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  p_data          2    6[COMMON] PTR unsigned int 
  2798 ;;		 -> RAM(512), 
  2799 ;;  data_len        1    8[COMMON] unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  buf             3   10[COMMON] unsigned char [3]
  2802 ;;  i               1   13[COMMON] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;		None               void
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         3       0       0       0       0
  2813 ;;      Locals:         4       0       0       0       0
  2814 ;;      Temps:          1       0       0       0       0
  2815 ;;      Totals:         8       0       0       0       0
  2816 ;;Total ram usage:        8 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    2
  2819 ;; This function calls:
  2820 ;;		_uint16_to_byte_array
  2821 ;; This function is called by:
  2822 ;;		_sent_data_set
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _uint16_data_set
  2828  0426                     _uint16_data_set:	
  2829  0426                     l261:	
  2830                           ;system_protocol.c: 284: uint8_t buf[3];
  2831                           ;system_protocol.c: 285: uint8_t i;
  2832                           ;system_protocol.c: 287: while(data_len)
  2833                           
  2834                           ;incstack = 0
  2835                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2836                           
  2837  0426  0878               	movf	uint16_data_set@data_len,w
  2838  0427  1903               	btfsc	3,2
  2839  0428  0008               	return
  2840                           
  2841                           ;system_protocol.c: 288: {
  2842                           ;system_protocol.c: 289: uint16_to_byte_array(p_data++, buf);
  2843  0429  0876               	movf	uint16_data_set@p_data,w
  2844  042A  00F0               	movwf	uint16_to_byte_array@p_data
  2845  042B  0877               	movf	uint16_data_set@p_data+1,w
  2846  042C  00F1               	movwf	uint16_to_byte_array@p_data+1
  2847  042D  307A               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  2848  042E  00F9               	movwf	??_uint16_data_set
  2849  042F  0879               	movf	??_uint16_data_set,w
  2850  0430  00F2               	movwf	uint16_to_byte_array@p_data_array
  2851  0431  120A  118A  2308  120A  118A  	fcall	_uint16_to_byte_array
  2852  0436  3002               	movlw	2
  2853  0437  07F6               	addwf	uint16_data_set@p_data,f
  2854  0438  1803               	skipnc
  2855  0439  0AF7               	incf	uint16_data_set@p_data+1,f
  2856  043A  3000               	movlw	0
  2857  043B  07F7               	addwf	uint16_data_set@p_data+1,f
  2858                           
  2859                           ;system_protocol.c: 291: for(i = 0; i < 3; i++)
  2860  043C  01FD               	clrf	uint16_data_set@i
  2861  043D  3003               	movlw	3
  2862  043E  027D               	subwf	uint16_data_set@i,w
  2863  043F  1803               	btfsc	3,0
  2864  0440  2C5A               	goto	l1503
  2865  0441                     l1495:	
  2866                           
  2867                           ;system_protocol.c: 292: {
  2868                           ;system_protocol.c: 293: packet.payload[index_pos++] = buf[i];
  2869  0441  087D               	movf	uint16_data_set@i,w
  2870  0442  3E7A               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  2871  0443  0084               	movwf	4
  2872  0444  0800               	movf	0,w
  2873  0445  00F9               	movwf	??_uint16_data_set
  2874  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0448  0820               	movf	_index_pos,w
  2877  0449  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2878  044A  0084               	movwf	4
  2879  044B  0879               	movf	??_uint16_data_set,w
  2880  044C  1383               	bcf	3,7	;select IRP bank0
  2881  044D  0080               	movwf	0
  2882  044E  3001               	movlw	1
  2883  044F  00F9               	movwf	??_uint16_data_set
  2884  0450  0879               	movf	??_uint16_data_set,w
  2885  0451  07A0               	addwf	_index_pos,f
  2886  0452  3001               	movlw	1
  2887  0453  00F9               	movwf	??_uint16_data_set
  2888  0454  0879               	movf	??_uint16_data_set,w
  2889  0455  07FD               	addwf	uint16_data_set@i,f
  2890  0456  3003               	movlw	3
  2891  0457  027D               	subwf	uint16_data_set@i,w
  2892  0458  1C03               	skipc
  2893  0459  2C41               	goto	l1495
  2894  045A                     l1503:	
  2895                           
  2896                           ;system_protocol.c: 294: }
  2897                           ;system_protocol.c: 295: data_len--;
  2898  045A  3001               	movlw	1
  2899  045B  02F8               	subwf	uint16_data_set@data_len,f
  2900  045C  2C26               	goto	l261
  2901  045D                     __end_of_uint16_data_set:	
  2902                           
  2903                           	psect	text16
  2904  0308                     __ptext16:	
  2905 ;; *************** function _uint16_to_byte_array *****************
  2906 ;; Defined at:
  2907 ;;		line 340 in file "system_protocol.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  p_data          2    0[COMMON] PTR unsigned int 
  2910 ;;		 -> RAM(512), 
  2911 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  2912 ;;		 -> uint16_data_set@buf(3), 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;		None               void
  2917 ;; Registers used:
  2918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         3       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0
  2926 ;;      Temps:          3       0       0       0       0
  2927 ;;      Totals:         6       0       0       0       0
  2928 ;;Total ram usage:        6 bytes
  2929 ;; Hardware stack levels used:    2
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_uint16_data_set
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function _uint16_to_byte_array
  2939  0308                     _uint16_to_byte_array:	
  2940                           
  2941                           ;system_protocol.c: 342: const uint16_t bit_mask = 0b0000000011111111;
  2942                           ;system_protocol.c: 345: p_data_array[0] = 2;
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  2946  0308  3002               	movlw	2
  2947  0309  00F3               	movwf	??_uint16_to_byte_array
  2948  030A  0872               	movf	uint16_to_byte_array@p_data_array,w
  2949  030B  0084               	movwf	4
  2950  030C  0873               	movf	??_uint16_to_byte_array,w
  2951  030D  0080               	movwf	0
  2952                           
  2953                           ;system_protocol.c: 346: p_data_array[1] = (uint8_t)(*p_data >> 8);
  2954  030E  0870               	movf	uint16_to_byte_array@p_data,w
  2955  030F  0084               	movwf	4
  2956  0310  1783               	bsf	3,7
  2957  0311  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  2958  0312  1383               	bcf	3,7
  2959  0313  0800               	movf	0,w
  2960  0314  00F3               	movwf	??_uint16_to_byte_array
  2961  0315  0A84               	incf	4,f
  2962  0316  0800               	movf	0,w
  2963  0317  00F4               	movwf	??_uint16_to_byte_array+1
  2964  0318  0874               	movf	??_uint16_to_byte_array+1,w
  2965  0319  00F5               	movwf	??_uint16_to_byte_array+2
  2966  031A  0A72               	incf	uint16_to_byte_array@p_data_array,w
  2967  031B  0084               	movwf	4
  2968  031C  0875               	movf	??_uint16_to_byte_array+2,w
  2969  031D  0080               	movwf	0
  2970                           
  2971                           ;system_protocol.c: 347: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  2972  031E  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  2973  031F  0084               	movwf	4
  2974  0320  120A  118A  2003   	fcall	stringdir
  2975  0323  00F3               	movwf	??_uint16_to_byte_array
  2976  0324  0870               	movf	uint16_to_byte_array@p_data,w
  2977  0325  0084               	movwf	4
  2978  0326  1783               	bsf	3,7
  2979  0327  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  2980  0328  1383               	bcf	3,7
  2981  0329  0800               	movf	0,w
  2982  032A  0573               	andwf	??_uint16_to_byte_array,w
  2983  032B  00F4               	movwf	??_uint16_to_byte_array+1
  2984  032C  0872               	movf	uint16_to_byte_array@p_data_array,w
  2985  032D  3E02               	addlw	2
  2986  032E  0084               	movwf	4
  2987  032F  0874               	movf	??_uint16_to_byte_array+1,w
  2988  0330  0080               	movwf	0
  2989  0331  0008               	return
  2990  0332                     __end_of_uint16_to_byte_array:	
  2991                           
  2992                           	psect	text17
  2993  03EF                     __ptext17:	
  2994 ;; *************** function _double_data_set *****************
  2995 ;; Defined at:
  2996 ;;		line 311 in file "system_protocol.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  p_data          2   10[COMMON] PTR 
  2999 ;;		 -> RAM(512), 
  3000 ;;  data_len        1   12[COMMON] unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  buf             5    0[BANK0 ] unsigned char [5]
  3003 ;;  i               1    5[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         3       0       0       0       0
  3014 ;;      Locals:         0       6       0       0       0
  3015 ;;      Temps:          1       0       0       0       0
  3016 ;;      Totals:         4       6       0       0       0
  3017 ;;Total ram usage:       10 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    1
  3020 ;; This function calls:
  3021 ;;		_double_to_byte_array
  3022 ;; This function is called by:
  3023 ;;		_sent_data_set
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _double_data_set
  3029  03EF                     _double_data_set:	
  3030  03EF                     l269:	
  3031                           ;system_protocol.c: 313: uint8_t buf[5];
  3032                           ;system_protocol.c: 314: uint8_t i;
  3033                           ;system_protocol.c: 316: while(data_len)
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3037                           
  3038  03EF  087C               	movf	double_data_set@data_len,w
  3039  03F0  1903               	btfsc	3,2
  3040  03F1  0008               	return
  3041                           
  3042                           ;system_protocol.c: 317: {
  3043                           ;system_protocol.c: 318: double_to_byte_array(p_data++, buf);
  3044  03F2  087A               	movf	double_data_set@p_data,w
  3045  03F3  00F0               	movwf	double_to_byte_array@p_data
  3046  03F4  087B               	movf	double_data_set@p_data+1,w
  3047  03F5  00F1               	movwf	double_to_byte_array@p_data+1
  3048  03F6  304E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  3049  03F7  00FD               	movwf	??_double_data_set
  3050  03F8  087D               	movf	??_double_data_set,w
  3051  03F9  00F2               	movwf	double_to_byte_array@p_data_array
  3052  03FA  120A  118A  2332  120A  118A  	fcall	_double_to_byte_array
  3053  03FF  3003               	movlw	3
  3054  0400  07FA               	addwf	double_data_set@p_data,f
  3055  0401  1803               	skipnc
  3056  0402  0AFB               	incf	double_data_set@p_data+1,f
  3057  0403  3000               	movlw	0
  3058  0404  07FB               	addwf	double_data_set@p_data+1,f
  3059                           
  3060                           ;system_protocol.c: 320: for(i = 0; i < 5; i++)
  3061  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0407  01D3               	clrf	double_data_set@i
  3064  0408  3005               	movlw	5
  3065  0409  0253               	subwf	double_data_set@i,w
  3066  040A  1803               	btfsc	3,0
  3067  040B  2C23               	goto	l1525
  3068  040C                     l1517:	
  3069                           
  3070                           ;system_protocol.c: 321: {
  3071                           ;system_protocol.c: 322: packet.payload[index_pos++] = buf[i];
  3072  040C  0853               	movf	double_data_set@i,w
  3073  040D  3E4E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  3074  040E  0084               	movwf	4
  3075  040F  1383               	bcf	3,7	;select IRP bank0
  3076  0410  0800               	movf	0,w
  3077  0411  00FD               	movwf	??_double_data_set
  3078  0412  0820               	movf	_index_pos,w
  3079  0413  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3080  0414  0084               	movwf	4
  3081  0415  087D               	movf	??_double_data_set,w
  3082  0416  0080               	movwf	0
  3083  0417  3001               	movlw	1
  3084  0418  00FD               	movwf	??_double_data_set
  3085  0419  087D               	movf	??_double_data_set,w
  3086  041A  07A0               	addwf	_index_pos,f
  3087  041B  3001               	movlw	1
  3088  041C  00FD               	movwf	??_double_data_set
  3089  041D  087D               	movf	??_double_data_set,w
  3090  041E  07D3               	addwf	double_data_set@i,f
  3091  041F  3005               	movlw	5
  3092  0420  0253               	subwf	double_data_set@i,w
  3093  0421  1C03               	skipc
  3094  0422  2C0C               	goto	l1517
  3095  0423                     l1525:	
  3096                           
  3097                           ;system_protocol.c: 323: }
  3098                           ;system_protocol.c: 324: data_len--;
  3099  0423  3001               	movlw	1
  3100  0424  02FC               	subwf	double_data_set@data_len,f
  3101  0425  2BEF               	goto	l269
  3102  0426                     __end_of_double_data_set:	
  3103                           
  3104                           	psect	text18
  3105  0332                     __ptext18:	
  3106 ;; *************** function _double_to_byte_array *****************
  3107 ;; Defined at:
  3108 ;;		line 362 in file "system_protocol.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  p_data          2    0[COMMON] PTR 
  3111 ;;		 -> RAM(512), 
  3112 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3113 ;;		 -> double_data_set@buf(5), 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  converter       4    5[COMMON] struct .
  3116 ;;  i               1    9[COMMON] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         3       0       0       0       0
  3127 ;;      Locals:         5       0       0       0       0
  3128 ;;      Temps:          2       0       0       0       0
  3129 ;;      Totals:        10       0       0       0       0
  3130 ;;Total ram usage:       10 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_double_data_set
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function _double_to_byte_array
  3141  0332                     _double_to_byte_array:	
  3142                           
  3143                           ;system_protocol.c: 364: uint8_t i;
  3144                           ;system_protocol.c: 365: union
  3145                           ;system_protocol.c: 366: {
  3146                           ;system_protocol.c: 367: double data;
  3147                           ;system_protocol.c: 368: uint8_t array[4];
  3148                           ;system_protocol.c: 369: } converter;
  3149                           ;system_protocol.c: 372: converter.data = *p_data;
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  3153  0332  0870               	movf	double_to_byte_array@p_data,w
  3154  0333  0084               	movwf	4
  3155  0334  1783               	bsf	3,7
  3156  0335  1C71               	btfss	double_to_byte_array@p_data+1,0
  3157  0336  1383               	bcf	3,7
  3158  0337  0800               	movf	0,w
  3159  0338  00F5               	movwf	double_to_byte_array@converter
  3160  0339  0A84               	incf	4,f
  3161  033A  0800               	movf	0,w
  3162  033B  00F6               	movwf	double_to_byte_array@converter+1
  3163  033C  0A84               	incf	4,f
  3164  033D  0800               	movf	0,w
  3165  033E  00F7               	movwf	double_to_byte_array@converter+2
  3166                           
  3167                           ;system_protocol.c: 375: p_data_array[0] = 4;
  3168  033F  3004               	movlw	4
  3169  0340  00F3               	movwf	??_double_to_byte_array
  3170  0341  0872               	movf	double_to_byte_array@p_data_array,w
  3171  0342  0084               	movwf	4
  3172  0343  0873               	movf	??_double_to_byte_array,w
  3173  0344  1383               	bcf	3,7	;select IRP bank0
  3174  0345  0080               	movwf	0
  3175                           
  3176                           ;system_protocol.c: 378: for(i = 0; i < 4; i++)
  3177  0346  01F9               	clrf	double_to_byte_array@i
  3178  0347                     L1:	
  3179  0347  3004               	movlw	4
  3180  0348  0279               	subwf	double_to_byte_array@i,w
  3181  0349  1803               	btfsc	3,0
  3182  034A  0008               	return
  3183                           
  3184                           ;system_protocol.c: 379: {
  3185                           ;system_protocol.c: 380: p_data_array[i + 1] = converter.array[i];
  3186  034B  0879               	movf	double_to_byte_array@i,w
  3187  034C  3E75               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  3188  034D  0084               	movwf	4
  3189  034E  0800               	movf	0,w
  3190  034F  00F3               	movwf	??_double_to_byte_array
  3191  0350  0879               	movf	double_to_byte_array@i,w
  3192  0351  3E01               	addlw	1
  3193  0352  0772               	addwf	double_to_byte_array@p_data_array,w
  3194  0353  00F4               	movwf	??_double_to_byte_array+1
  3195  0354  0874               	movf	??_double_to_byte_array+1,w
  3196  0355  0084               	movwf	4
  3197  0356  0873               	movf	??_double_to_byte_array,w
  3198  0357  0080               	movwf	0
  3199  0358  3001               	movlw	1
  3200  0359  00F3               	movwf	??_double_to_byte_array
  3201  035A  0873               	movf	??_double_to_byte_array,w
  3202  035B  07F9               	addwf	double_to_byte_array@i,f
  3203  035C  2B47               	goto	L1
  3204  035D                     __end_of_double_to_byte_array:	
  3205                           
  3206                           	psect	text19
  3207  02BE                     __ptext19:	
  3208 ;; *************** function ___wmul *****************
  3209 ;; Defined at:
  3210 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  multiplier      2    0[COMMON] unsigned int 
  3213 ;;  multiplicand    2    2[COMMON] unsigned int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  product         2    4[COMMON] unsigned int 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  2    0[COMMON] unsigned int 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         4       0       0       0       0
  3226 ;;      Locals:         2       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         6       0       0       0       0
  3229 ;;Total ram usage:        6 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_sent_data_set
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function ___wmul
  3240  02BE                     ___wmul:	
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3244  02BE  01F4               	clrf	___wmul@product
  3245  02BF  01F5               	clrf	___wmul@product+1
  3246  02C0                     l1565:	
  3247  02C0  1C70               	btfss	___wmul@multiplier,0
  3248  02C1  2AC8               	goto	l475
  3249  02C2  0872               	movf	___wmul@multiplicand,w
  3250  02C3  07F4               	addwf	___wmul@product,f
  3251  02C4  1803               	skipnc
  3252  02C5  0AF5               	incf	___wmul@product+1,f
  3253  02C6  0873               	movf	___wmul@multiplicand+1,w
  3254  02C7  07F5               	addwf	___wmul@product+1,f
  3255  02C8                     l475:	
  3256  02C8  3001               	movlw	1
  3257  02C9                     u795:	
  3258  02C9  1003               	clrc
  3259  02CA  0DF2               	rlf	___wmul@multiplicand,f
  3260  02CB  0DF3               	rlf	___wmul@multiplicand+1,f
  3261  02CC  3EFF               	addlw	-1
  3262  02CD  1D03               	skipz
  3263  02CE  2AC9               	goto	u795
  3264  02CF  3001               	movlw	1
  3265  02D0                     u805:	
  3266  02D0  1003               	clrc
  3267  02D1  0CF1               	rrf	___wmul@multiplier+1,f
  3268  02D2  0CF0               	rrf	___wmul@multiplier,f
  3269  02D3  3EFF               	addlw	-1
  3270  02D4  1D03               	skipz
  3271  02D5  2AD0               	goto	u805
  3272  02D6  0870               	movf	___wmul@multiplier,w
  3273  02D7  0471               	iorwf	___wmul@multiplier+1,w
  3274  02D8  1D03               	btfss	3,2
  3275  02D9  2AC0               	goto	l1565
  3276  02DA  0875               	movf	___wmul@product+1,w
  3277  02DB  00F1               	movwf	?___wmul+1
  3278  02DC  0874               	movf	___wmul@product,w
  3279  02DD  00F0               	movwf	?___wmul
  3280  02DE  0008               	return
  3281  02DF                     __end_of___wmul:	
  3282                           
  3283                           	psect	text20
  3284  01CE                     __ptext20:	
  3285 ;; *************** function _I2Ctemp_data_set *****************
  3286 ;; Defined at:
  3287 ;;		line 84 in file "OBC1_app.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;		None               void
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    4
  3308 ;; This function calls:
  3309 ;;		_receive_data_master
  3310 ;; This function is called by:
  3311 ;;		_command
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _I2Ctemp_data_set
  3317  01CE                     _I2Ctemp_data_set:	
  3318                           
  3319                           ;OBC1_app.c: 86: receive_data_master(OBC2);
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _I2Ctemp_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3323  01CE  3002               	movlw	2
  3324  01CF  120A  118A  21EB   	fcall	_receive_data_master
  3325  01D2  0008               	return
  3326  01D3                     __end_of_I2Ctemp_data_set:	
  3327                           
  3328                           	psect	text21
  3329  01EB                     __ptext21:	
  3330 ;; *************** function _receive_data_master *****************
  3331 ;; Defined at:
  3332 ;;		line 238 in file "system_protocol.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  destination     1    wreg     enum E1099
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  destination     1    2[BANK0 ] enum E1099
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       0       0       0       0
  3347 ;;      Locals:         0       1       0       0       0
  3348 ;;      Temps:          1       0       0       0       0
  3349 ;;      Totals:         1       1       0       0       0
  3350 ;;Total ram usage:        2 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    3
  3353 ;; This function calls:
  3354 ;;		_packet_receive_master
  3355 ;; This function is called by:
  3356 ;;		_I2Ctemp_data_set
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _receive_data_master
  3362  01EB                     _receive_data_master:	
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _receive_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3366                           ;receive_data_master@destination stored from wreg
  3367  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3368  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3369  01ED  00D0               	movwf	receive_data_master@destination
  3370                           
  3371                           ;system_protocol.c: 240: packet_receive_master(destination, &packet);
  3372  01EE  3021               	movlw	(low (_packet| 0))& (0+255)
  3373  01EF  00FD               	movwf	??_receive_data_master
  3374  01F0  087D               	movf	??_receive_data_master,w
  3375  01F1  00FB               	movwf	packet_receive_master@p_packet
  3376  01F2  0850               	movf	receive_data_master@destination,w
  3377  01F3  120A  118A  235D   	fcall	_packet_receive_master
  3378  01F6  0008               	return
  3379  01F7                     __end_of_receive_data_master:	
  3380                           
  3381                           	psect	text22
  3382  035D                     __ptext22:	
  3383 ;; *************** function _packet_receive_master *****************
  3384 ;; Defined at:
  3385 ;;		line 492 in file "system_protocol.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  destination     1    wreg     enum E1099
  3388 ;;  p_packet        1   11[COMMON] PTR struct .
  3389 ;;		 -> packet(32), 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  destination     1    1[BANK0 ] enum E1099
  3392 ;;  use_obc         1    0[BANK0 ] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;		None               void
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         1       0       0       0       0
  3403 ;;      Locals:         0       2       0       0       0
  3404 ;;      Temps:          1       0       0       0       0
  3405 ;;      Totals:         2       2       0       0       0
  3406 ;;Total ram usage:        4 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    2
  3409 ;; This function calls:
  3410 ;;		_receive_payload
  3411 ;;		_spi_master_receive
  3412 ;; This function is called by:
  3413 ;;		_receive_data_master
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _packet_receive_master
  3419  035D                     _packet_receive_master:	
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _packet_receive_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3423                           ;packet_receive_master@destination stored from wreg
  3424  035D  1283               	bcf	3,5	;RP0=0, select bank0
  3425  035E  1303               	bcf	3,6	;RP1=0, select bank0
  3426  035F  00CF               	movwf	packet_receive_master@destination
  3427                           
  3428                           ;system_protocol.c: 494: uint8_t use_obc = 0x00;
  3429  0360  01CE               	clrf	packet_receive_master@use_obc
  3430                           
  3431                           ;system_protocol.c: 497: use_obc = spi_master_receive(destination);
  3432  0361  084F               	movf	packet_receive_master@destination,w
  3433  0362  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  3434  0367  00FC               	movwf	??_packet_receive_master
  3435  0368  087C               	movf	??_packet_receive_master,w
  3436  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3437  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3438  036B  00CE               	movwf	packet_receive_master@use_obc
  3439                           
  3440                           ;system_protocol.c: 500: packet.data_type = spi_master_receive(destination);
  3441  036C  084F               	movf	packet_receive_master@destination,w
  3442  036D  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  3443  0372  00FC               	movwf	??_packet_receive_master
  3444  0373  087C               	movf	??_packet_receive_master,w
  3445  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0376  00A1               	movwf	_packet
  3448                           
  3449                           ;system_protocol.c: 503: receive_payload(destination);
  3450  0377  084F               	movf	packet_receive_master@destination,w
  3451  0378  120A  118A  245D  120A  118A  	fcall	_receive_payload
  3452                           
  3453                           ;system_protocol.c: 506: packet.data_end_command = spi_master_receive(destination);
  3454  037D  1283               	bcf	3,5	;RP0=0, select bank0
  3455  037E  1303               	bcf	3,6	;RP1=0, select bank0
  3456  037F  084F               	movf	packet_receive_master@destination,w
  3457  0380  120A  118A  24DA   	fcall	_spi_master_receive
  3458  0383  00FC               	movwf	??_packet_receive_master
  3459  0384  087C               	movf	??_packet_receive_master,w
  3460  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3462  0387  00C0               	movwf	_packet+31
  3463  0388  0008               	return
  3464  0389                     __end_of_packet_receive_master:	
  3465                           
  3466                           	psect	text23
  3467  045D                     __ptext23:	
  3468 ;; *************** function _receive_payload *****************
  3469 ;; Defined at:
  3470 ;;		line 432 in file "system_protocol.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  destination     1    wreg     enum E1099
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  destination     1   10[COMMON] enum E1099
  3475 ;;  rec_index_po    1    9[COMMON] unsigned char 
  3476 ;;  p_payload       1    8[COMMON] PTR unsigned char 
  3477 ;;		 -> packet.payload(30), packet(32), 
  3478 ;;  i               1    7[COMMON] unsigned char 
  3479 ;;  data_len        1    6[COMMON] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;		None               void
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         0       0       0       0       0
  3490 ;;      Locals:         5       0       0       0       0
  3491 ;;      Temps:          1       0       0       0       0
  3492 ;;      Totals:         6       0       0       0       0
  3493 ;;Total ram usage:        6 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    1
  3496 ;; This function calls:
  3497 ;;		_spi_master_receive
  3498 ;; This function is called by:
  3499 ;;		_packet_receive_master
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _receive_payload
  3505  045D                     _receive_payload:	
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _receive_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3509                           ;receive_payload@destination stored from wreg
  3510  045D  00FA               	movwf	receive_payload@destination
  3511                           
  3512                           ;system_protocol.c: 434: uint8_t i;
  3513                           ;system_protocol.c: 435: uint8_t data_len;
  3514                           ;system_protocol.c: 436: uint8_t rec_index_pos = 0;
  3515  045E  01F9               	clrf	receive_payload@rec_index_pos
  3516                           
  3517                           ;system_protocol.c: 437: uint8_t *p_payload = packet.payload;
  3518  045F  3022               	movlw	(low ((_packet| 0+1)))& (0+255)
  3519  0460  00F5               	movwf	??_receive_payload
  3520  0461  0875               	movf	??_receive_payload,w
  3521  0462  00F8               	movwf	receive_payload@p_payload
  3522  0463                     l1459:	
  3523                           ;system_protocol.c: 440: while(index_pos != 0x00 || rec_index_pos < 30)
  3524                           
  3525  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0465  0820               	movf	_index_pos,w
  3528  0466  1903               	btfsc	3,2
  3529  0467  2C93               	goto	l1461
  3530  0468                     l1443:	
  3531                           
  3532                           ;system_protocol.c: 441: {
  3533                           ;system_protocol.c: 442: data_len = spi_master_receive(destination);
  3534  0468  087A               	movf	receive_payload@destination,w
  3535  0469  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  3536  046E  00F5               	movwf	??_receive_payload
  3537  046F  0875               	movf	??_receive_payload,w
  3538  0470  00F6               	movwf	receive_payload@data_len
  3539                           
  3540                           ;system_protocol.c: 443: rec_index_pos++;
  3541  0471  3001               	movlw	1
  3542  0472  00F5               	movwf	??_receive_payload
  3543  0473  0875               	movf	??_receive_payload,w
  3544  0474  07F9               	addwf	receive_payload@rec_index_pos,f
  3545                           
  3546                           ;system_protocol.c: 444: for(i = 0; i < data_len; i++)
  3547  0475  01F7               	clrf	receive_payload@i
  3548  0476                     l1457:	
  3549  0476  0876               	movf	receive_payload@data_len,w
  3550  0477  0277               	subwf	receive_payload@i,w
  3551  0478  1803               	btfsc	3,0
  3552  0479  2C63               	goto	l1459
  3553                           
  3554                           ;system_protocol.c: 445: {
  3555                           ;system_protocol.c: 446: *p_payload = spi_master_receive(destination);
  3556  047A  087A               	movf	receive_payload@destination,w
  3557  047B  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  3558  0480  00F5               	movwf	??_receive_payload
  3559  0481  0878               	movf	receive_payload@p_payload,w
  3560  0482  0084               	movwf	4
  3561  0483  0875               	movf	??_receive_payload,w
  3562  0484  1383               	bcf	3,7	;select IRP bank0
  3563  0485  0080               	movwf	0
  3564                           
  3565                           ;system_protocol.c: 447: p_payload++;
  3566  0486  3001               	movlw	1
  3567  0487  00F5               	movwf	??_receive_payload
  3568  0488  0875               	movf	??_receive_payload,w
  3569  0489  07F8               	addwf	receive_payload@p_payload,f
  3570                           
  3571                           ;system_protocol.c: 448: rec_index_pos++;
  3572  048A  3001               	movlw	1
  3573  048B  00F5               	movwf	??_receive_payload
  3574  048C  0875               	movf	??_receive_payload,w
  3575  048D  07F9               	addwf	receive_payload@rec_index_pos,f
  3576  048E  3001               	movlw	1
  3577  048F  00F5               	movwf	??_receive_payload
  3578  0490  0875               	movf	??_receive_payload,w
  3579  0491  07F7               	addwf	receive_payload@i,f
  3580  0492  2C76               	goto	l1457
  3581  0493                     l1461:	
  3582  0493  301E               	movlw	30
  3583  0494  0279               	subwf	receive_payload@rec_index_pos,w
  3584  0495  1803               	btfsc	3,0
  3585  0496  0008               	return
  3586  0497  2C68               	goto	l1443
  3587  0498                     __end_of_receive_payload:	
  3588                           
  3589                           	psect	text24
  3590  01E0                     __ptext24:	
  3591 ;; *************** function _ad_con_init *****************
  3592 ;; Defined at:
  3593 ;;		line 49 in file "AD_value.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;		None               void
  3600 ;; Registers used:
  3601 ;;		wreg
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3607 ;;      Params:         0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _ad_con_init
  3622  01E0                     _ad_con_init:	
  3623                           
  3624                           ;AD_value.c: 52: PORTAbits.RA0 = 0;
  3625                           
  3626                           ;incstack = 0
  3627                           ; Regs used in _ad_con_init: [wreg]
  3628  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  3629  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  3630  01E2  1005               	bcf	5,0	;volatile
  3631                           
  3632                           ;AD_value.c: 53: PORTAbits.RA3 = 0;
  3633  01E3  1185               	bcf	5,3	;volatile
  3634                           
  3635                           ;AD_value.c: 54: TRISAbits.TRISA0 = 1;
  3636  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  3637  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  3638  01E6  1405               	bsf	5,0	;volatile
  3639                           
  3640                           ;AD_value.c: 55: TRISAbits.TRISA3 = 1;
  3641  01E7  1585               	bsf	5,3	;volatile
  3642                           
  3643                           ;AD_value.c: 56: ADCON1 = 0b00000001;
  3644  01E8  3001               	movlw	1
  3645  01E9  009F               	movwf	31	;volatile
  3646  01EA  0008               	return
  3647  01EB                     __end_of_ad_con_init:	
  3648                           
  3649                           	psect	text25
  3650  0221                     __ptext25:	
  3651 ;; *************** function _POW_status *****************
  3652 ;; Defined at:
  3653 ;;		line 41 in file "OBC1_app.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;		None               void
  3660 ;; Registers used:
  3661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0
  3670 ;;      Totals:         0       0       0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    1
  3674 ;; This function calls:
  3675 ;;		_MCLR_reset
  3676 ;;		_spi_master_send
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _POW_status
  3684  0221                     _POW_status:	
  3685                           
  3686                           ;OBC1_app.c: 43: spi_master_send(POW, 0x01);
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _POW_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3690  0221  01F0               	clrf	spi_master_send@data
  3691  0222  0AF0               	incf	spi_master_send@data,f
  3692  0223  3004               	movlw	4
  3693  0224  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  3694                           
  3695                           ;OBC1_app.c: 44: if(PORTDbits.RD1==0) MCLR_reset(0x06);
  3696  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3697  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3698  022B  1888               	btfsc	8,1	;volatile
  3699  022C  0008               	return
  3700  022D  3006               	movlw	6
  3701  022E  120A  118A  2262   	fcall	_MCLR_reset
  3702  0231  0008               	return
  3703  0232                     __end_of_POW_status:	
  3704                           
  3705                           	psect	text26
  3706  0211                     __ptext26:	
  3707 ;; *************** function _MCLR_init *****************
  3708 ;; Defined at:
  3709 ;;		line 35 in file "MCLR_reset.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  nin             2    0[COMMON] PTR unsigned char 
  3714 ;;		 -> RAM(512), 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;		None               void
  3717 ;; Registers used:
  3718 ;;		wreg, fsr0l, fsr0h
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         0       0       0       0       0
  3725 ;;      Locals:         2       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0
  3727 ;;      Totals:         2       0       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           
  3738                           ;psect for function _MCLR_init
  3739  0211                     _MCLR_init:	
  3740                           
  3741                           ;MCLR_reset.c: 37: uint8_t *nin;
  3742                           ;MCLR_reset.c: 38: nin = 0x09;
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _MCLR_init: [wregfsr0]
  3746  0211  3009               	movlw	9
  3747  0212  00F0               	movwf	MCLR_init@nin
  3748  0213  3000               	movlw	0
  3749  0214  00F1               	movwf	MCLR_init@nin+1
  3750                           
  3751                           ;MCLR_reset.c: 41: TRISEbits.TRISE1 = 0;
  3752  0215  1683               	bsf	3,5	;RP0=1, select bank1
  3753  0216  1303               	bcf	3,6	;RP1=0, select bank1
  3754  0217  1089               	bcf	9,1	;volatile
  3755                           
  3756                           ;MCLR_reset.c: 42: TRISEbits.TRISE0 = 0;
  3757  0218  1009               	bcf	9,0	;volatile
  3758                           
  3759                           ;MCLR_reset.c: 45: *nin = 0x03;
  3760  0219  0870               	movf	MCLR_init@nin,w
  3761  021A  0084               	movwf	4
  3762  021B  1383               	bcf	3,7
  3763  021C  1871               	btfsc	MCLR_init@nin+1,0
  3764  021D  1783               	bsf	3,7
  3765  021E  3003               	movlw	3
  3766  021F  0080               	movwf	0
  3767  0220  0008               	return
  3768  0221                     __end_of_MCLR_init:	
  3769                           
  3770                           	psect	text27
  3771  0246                     __ptext27:	
  3772 ;; *************** function _COM_status *****************
  3773 ;; Defined at:
  3774 ;;		line 30 in file "OBC1_app.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  COM_status      1    7[COMMON] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;		None               void
  3781 ;; Registers used:
  3782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3788 ;;      Params:         0       0       0       0       0
  3789 ;;      Locals:         1       0       0       0       0
  3790 ;;      Temps:          1       0       0       0       0
  3791 ;;      Totals:         2       0       0       0       0
  3792 ;;Total ram usage:        2 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    1
  3795 ;; This function calls:
  3796 ;;		_MCLR_reset
  3797 ;;		_spi_master_receive
  3798 ;;		_spi_master_send
  3799 ;; This function is called by:
  3800 ;;		_main
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _COM_status
  3806  0246                     _COM_status:	
  3807                           
  3808                           ;OBC1_app.c: 32: uint8_t COM_status = 0;
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _COM_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3812  0246  01F7               	clrf	COM_status@COM_status
  3813                           
  3814                           ;OBC1_app.c: 33: spi_master_send(COM, 0x01);
  3815  0247  01F0               	clrf	spi_master_send@data
  3816  0248  0AF0               	incf	spi_master_send@data,f
  3817  0249  3003               	movlw	3
  3818  024A  120A  118A  2536  120A  118A  	fcall	_spi_master_send
  3819                           
  3820                           ;OBC1_app.c: 34: COM_status = spi_master_receive(COM);
  3821  024F  3003               	movlw	3
  3822  0250  120A  118A  24DA  120A  118A  	fcall	_spi_master_receive
  3823  0255  00F6               	movwf	??_COM_status
  3824  0256  0876               	movf	??_COM_status,w
  3825  0257  00F7               	movwf	COM_status@COM_status
  3826                           
  3827                           ;OBC1_app.c: 35: if(COM_status == 0x00 || COM_status == 0xFF)
  3828  0258  0877               	movf	COM_status@COM_status,w
  3829  0259  1D03               	btfss	3,2
  3830  025A  0A77               	incf	COM_status@COM_status,w
  3831  025B  1D03               	btfss	3,2
  3832  025C  0008               	return
  3833                           
  3834                           ;OBC1_app.c: 36: {
  3835                           ;OBC1_app.c: 37: MCLR_reset(0x05);
  3836  025D  3005               	movlw	5
  3837  025E  120A  118A  2262   	fcall	_MCLR_reset
  3838  0261  0008               	return
  3839  0262                     __end_of_COM_status:	
  3840                           
  3841                           	psect	text28
  3842  0536                     __ptext28:	
  3843 ;; *************** function _spi_master_send *****************
  3844 ;; Defined at:
  3845 ;;		line 165 in file "spi_master.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  destination     1    wreg     enum E1099
  3848 ;;  data            1    0[COMMON] unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  destination     1    5[COMMON] enum E1099
  3851 ;;  timeout_coun    2    3[COMMON] unsigned int 
  3852 ;;  dummy           1    2[COMMON] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         1       0       0       0       0
  3863 ;;      Locals:         4       0       0       0       0
  3864 ;;      Temps:          1       0       0       0       0
  3865 ;;      Totals:         6       0       0       0       0
  3866 ;;Total ram usage:        6 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_send_payload
  3872 ;;		_packet_send_master
  3873 ;;		_COM_status
  3874 ;;		_POW_status
  3875 ;;		_command
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _spi_master_send
  3881  0536                     _spi_master_send:	
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  3885                           ;spi_master_send@destination stored from wreg
  3886  0536  00F5               	movwf	spi_master_send@destination
  3887                           
  3888                           ;spi_master.c: 167: uint8_t dummy;
  3889                           ;spi_master.c: 168: uint16_t timeout_counter = 1000;
  3890  0537  30E8               	movlw	232
  3891  0538  00F3               	movwf	spi_master_send@timeout_counter
  3892  0539  3003               	movlw	3
  3893  053A  00F4               	movwf	spi_master_send@timeout_counter+1
  3894                           
  3895                           ;spi_master.c: 171: dummy = SSPBUF;
  3896  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3897  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3898  053D  0813               	movf	19,w	;volatile
  3899  053E  00F1               	movwf	??_spi_master_send
  3900  053F  0871               	movf	??_spi_master_send,w
  3901  0540  00F2               	movwf	spi_master_send@dummy
  3902                           
  3903                           ;spi_master.c: 174: switch(destination)
  3904  0541  2D4B               	goto	l1397
  3905  0542                     l121:	
  3906                           ;spi_master.c: 177: while(PORTDbits.RD2 == 0){;}
  3907                           
  3908                           ;spi_master.c: 175: {
  3909                           ;spi_master.c: 176: case OBC2:
  3910                           
  3911  0542  1908               	btfsc	8,2	;volatile
  3912  0543  2D5D               	goto	l1401
  3913  0544  2D42               	goto	l121
  3914  0545                     l126:	
  3915                           ;spi_master.c: 180: while(PORTDbits.RD0 == 0){;}
  3916                           
  3917                           ;spi_master.c: 179: case COM:
  3918                           
  3919                           ;spi_master.c: 178: break;
  3920                           
  3921  0545  1808               	btfsc	8,0	;volatile
  3922  0546  2D5D               	goto	l1401
  3923  0547  2D45               	goto	l126
  3924  0548                     l130:	
  3925                           ;spi_master.c: 183: while(PORTDbits.RD1 == 0){;}
  3926                           
  3927                           ;spi_master.c: 182: case POW:
  3928                           
  3929                           ;spi_master.c: 181: break;
  3930                           
  3931  0548  1888               	btfsc	8,1	;volatile
  3932  0549  2D5D               	goto	l1401
  3933  054A  2D48               	goto	l130
  3934  054B                     l1397:	
  3935                           ;spi_master.c: 185: }
  3936                           
  3937                           ;spi_master.c: 184: break;
  3938                           
  3939  054B  0875               	movf	spi_master_send@destination,w
  3940                           
  3941                           ; Switch size 1, requested type "space"
  3942                           ; Number of cases is 3, Range of values is 2 to 4
  3943                           ; switch strategies available:
  3944                           ; Name         Instructions Cycles
  3945                           ; simple_byte           10     6 (average)
  3946                           ; direct_byte           20    11 (fixed)
  3947                           ; jumptable            263     9 (fixed)
  3948                           ;	Chosen strategy is simple_byte
  3949  054C  3A02               	xorlw	2	; case 2
  3950  054D  1903               	skipnz
  3951  054E  2D42               	goto	l121
  3952  054F  3A01               	xorlw	1	; case 3
  3953  0550  1903               	skipnz
  3954  0551  2D45               	goto	l126
  3955  0552  3A07               	xorlw	7	; case 4
  3956  0553  1903               	skipnz
  3957  0554  2D48               	goto	l130
  3958  0555  2D5D               	goto	l1401
  3959                           
  3960                           ;spi_master.c: 188: switch(destination)
  3961  0556  2D5D               	goto	l1401
  3962  0557                     l134:	
  3963                           ;spi_master.c: 189: {
  3964                           ;spi_master.c: 190: case OBC2:
  3965                           
  3966                           
  3967                           ;spi_master.c: 191: PORTCbits.RC2 = 0;
  3968  0557  1107               	bcf	7,2	;volatile
  3969                           
  3970                           ;spi_master.c: 192: break;
  3971  0558  2D68               	goto	l1403
  3972  0559                     l136:	
  3973                           ;spi_master.c: 193: case COM:
  3974                           
  3975                           
  3976                           ;spi_master.c: 194: PORTCbits.RC0 = 0;
  3977  0559  1007               	bcf	7,0	;volatile
  3978                           
  3979                           ;spi_master.c: 195: break;
  3980  055A  2D68               	goto	l1403
  3981  055B                     l137:	
  3982                           ;spi_master.c: 196: case POW:
  3983                           
  3984                           
  3985                           ;spi_master.c: 197: PORTCbits.RC1 = 0;
  3986  055B  1087               	bcf	7,1	;volatile
  3987                           
  3988                           ;spi_master.c: 199: }
  3989                           
  3990                           ;spi_master.c: 198: break;
  3991  055C  2D68               	goto	l1403
  3992  055D                     l1401:	
  3993  055D  0875               	movf	spi_master_send@destination,w
  3994                           
  3995                           ; Switch size 1, requested type "space"
  3996                           ; Number of cases is 3, Range of values is 2 to 4
  3997                           ; switch strategies available:
  3998                           ; Name         Instructions Cycles
  3999                           ; simple_byte           10     6 (average)
  4000                           ; direct_byte           20    11 (fixed)
  4001                           ; jumptable            263     9 (fixed)
  4002                           ;	Chosen strategy is simple_byte
  4003  055E  3A02               	xorlw	2	; case 2
  4004  055F  1903               	skipnz
  4005  0560  2D57               	goto	l134
  4006  0561  3A01               	xorlw	1	; case 3
  4007  0562  1903               	skipnz
  4008  0563  2D59               	goto	l136
  4009  0564  3A07               	xorlw	7	; case 4
  4010  0565  1903               	skipnz
  4011  0566  2D5B               	goto	l137
  4012  0567  2D68               	goto	l1403
  4013  0568                     l1403:	
  4014                           
  4015                           ;spi_master.c: 202: SSPBUF = data;
  4016  0568  0870               	movf	spi_master_send@data,w
  4017  0569  0093               	movwf	19	;volatile
  4018  056A                     l1411:	
  4019                           ;spi_master.c: 205: while(SSPSTATbits.BF == 0)
  4020                           
  4021  056A  1683               	bsf	3,5	;RP0=1, select bank1
  4022  056B  1303               	bcf	3,6	;RP1=0, select bank1
  4023  056C  1814               	btfsc	20,0	;volatile
  4024  056D  2D85               	goto	l1415
  4025                           
  4026                           ;spi_master.c: 206: {
  4027                           ;spi_master.c: 208: if(timeout_counter == 0)
  4028  056E  0873               	movf	spi_master_send@timeout_counter,w
  4029  056F  0474               	iorwf	spi_master_send@timeout_counter+1,w
  4030  0570  1903               	btfsc	3,2
  4031  0571  0008               	return
  4032                           
  4033                           ;spi_master.c: 211: }
  4034                           ;spi_master.c: 214: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4035                           
  4036                           ;spi_master.c: 209: {
  4037                           ;spi_master.c: 210: return;
  4038  0572  2D73               	nop2	;2 cycle nop
  4039  0573  2D74               	nop2	;2 cycle nop
  4040  0574  0000               	nop
  4041                           
  4042                           ;spi_master.c: 215: timeout_counter--;
  4043  0575  3001               	movlw	1
  4044  0576  02F3               	subwf	spi_master_send@timeout_counter,f
  4045  0577  3000               	movlw	0
  4046  0578  1C03               	skipc
  4047  0579  03F4               	decf	spi_master_send@timeout_counter+1,f
  4048  057A  02F4               	subwf	spi_master_send@timeout_counter+1,f
  4049  057B  2D6A               	goto	l1411
  4050  057C                     l144:	
  4051                           ;spi_master.c: 220: {
  4052                           ;spi_master.c: 221: case OBC2:
  4053                           
  4054                           ;spi_master.c: 216: }
  4055                           ;spi_master.c: 219: switch(destination)
  4056                           
  4057                           
  4058                           ;spi_master.c: 222: PORTCbits.RC2 = 1;
  4059  057C  1283               	bcf	3,5	;RP0=0, select bank0
  4060  057D  1507               	bsf	7,2	;volatile
  4061                           
  4062                           ;spi_master.c: 223: break;
  4063  057E  2D90               	goto	l1417
  4064  057F                     l146:	
  4065                           ;spi_master.c: 224: case COM:
  4066                           
  4067                           
  4068                           ;spi_master.c: 225: PORTCbits.RC0 = 1;
  4069  057F  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0580  1407               	bsf	7,0	;volatile
  4071                           
  4072                           ;spi_master.c: 226: break;
  4073  0581  2D90               	goto	l1417
  4074  0582                     l147:	
  4075                           ;spi_master.c: 227: case POW:
  4076                           
  4077                           
  4078                           ;spi_master.c: 228: PORTCbits.RC1 = 1;
  4079  0582  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0583  1487               	bsf	7,1	;volatile
  4081                           
  4082                           ;spi_master.c: 230: }
  4083                           
  4084                           ;spi_master.c: 229: break;
  4085  0584  2D90               	goto	l1417
  4086  0585                     l1415:	
  4087  0585  0875               	movf	spi_master_send@destination,w
  4088                           
  4089                           ; Switch size 1, requested type "space"
  4090                           ; Number of cases is 3, Range of values is 2 to 4
  4091                           ; switch strategies available:
  4092                           ; Name         Instructions Cycles
  4093                           ; simple_byte           10     6 (average)
  4094                           ; direct_byte           20    11 (fixed)
  4095                           ; jumptable            263     9 (fixed)
  4096                           ;	Chosen strategy is simple_byte
  4097  0586  3A02               	xorlw	2	; case 2
  4098  0587  1903               	skipnz
  4099  0588  2D7C               	goto	l144
  4100  0589  3A01               	xorlw	1	; case 3
  4101  058A  1903               	skipnz
  4102  058B  2D7F               	goto	l146
  4103  058C  3A07               	xorlw	7	; case 4
  4104  058D  1903               	skipnz
  4105  058E  2D82               	goto	l147
  4106  058F  2D90               	goto	l1417
  4107  0590                     l1417:	
  4108                           
  4109                           ;spi_master.c: 233: dummy = SSPBUF;
  4110  0590  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0591  0813               	movf	19,w	;volatile
  4112  0592  00F1               	movwf	??_spi_master_send
  4113  0593  0871               	movf	??_spi_master_send,w
  4114  0594  00F2               	movwf	spi_master_send@dummy
  4115  0595  0008               	return
  4116  0596                     __end_of_spi_master_send:	
  4117                           
  4118                           	psect	text29
  4119  04DA                     __ptext29:	
  4120 ;; *************** function _spi_master_receive *****************
  4121 ;; Defined at:
  4122 ;;		line 82 in file "spi_master.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  destination     1    wreg     enum E1099
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  destination     1    4[COMMON] enum E1099
  4127 ;;  timeout_coun    2    2[COMMON] unsigned int 
  4128 ;;  dummy           1    1[COMMON] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       0       0       0       0
  4139 ;;      Locals:         4       0       0       0       0
  4140 ;;      Temps:          1       0       0       0       0
  4141 ;;      Totals:         5       0       0       0       0
  4142 ;;Total ram usage:        5 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_get_cw_data
  4148 ;;		_receive_payload
  4149 ;;		_packet_receive_master
  4150 ;;		_COM_status
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _spi_master_receive
  4156  04DA                     _spi_master_receive:	
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  4160                           ;spi_master_receive@destination stored from wreg
  4161  04DA  00F4               	movwf	spi_master_receive@destination
  4162                           
  4163                           ;spi_master.c: 84: uint8_t dummy;
  4164                           ;spi_master.c: 85: uint16_t timeout_counter = 1000;
  4165  04DB  30E8               	movlw	232
  4166  04DC  00F2               	movwf	spi_master_receive@timeout_counter
  4167  04DD  3003               	movlw	3
  4168  04DE  00F3               	movwf	spi_master_receive@timeout_counter+1
  4169                           
  4170                           ;spi_master.c: 88: dummy = SSPBUF;
  4171  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  4172  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  4173  04E1  0813               	movf	19,w	;volatile
  4174  04E2  00F0               	movwf	??_spi_master_receive
  4175  04E3  0870               	movf	??_spi_master_receive,w
  4176  04E4  00F1               	movwf	spi_master_receive@dummy
  4177                           
  4178                           ;spi_master.c: 91: switch(destination)
  4179  04E5  2CEF               	goto	l1367
  4180  04E6                     l90:	
  4181                           ;spi_master.c: 94: while(PORTDbits.RD2 == 0){;}
  4182                           
  4183                           ;spi_master.c: 92: {
  4184                           ;spi_master.c: 93: case OBC2:
  4185                           
  4186  04E6  1908               	btfsc	8,2	;volatile
  4187  04E7  2D01               	goto	l1371
  4188  04E8  2CE6               	goto	l90
  4189  04E9                     l95:	
  4190                           ;spi_master.c: 97: while(PORTDbits.RD0 == 0){;}
  4191                           
  4192                           ;spi_master.c: 96: case COM:
  4193                           
  4194                           ;spi_master.c: 95: break;
  4195                           
  4196  04E9  1808               	btfsc	8,0	;volatile
  4197  04EA  2D01               	goto	l1371
  4198  04EB  2CE9               	goto	l95
  4199  04EC                     l99:	
  4200                           ;spi_master.c: 100: while(PORTDbits.RD1 == 0){;}
  4201                           
  4202                           ;spi_master.c: 99: case POW:
  4203                           
  4204                           ;spi_master.c: 98: break;
  4205                           
  4206  04EC  1888               	btfsc	8,1	;volatile
  4207  04ED  2D01               	goto	l1371
  4208  04EE  2CEC               	goto	l99
  4209  04EF                     l1367:	
  4210                           ;spi_master.c: 102: }
  4211                           
  4212                           ;spi_master.c: 101: break;
  4213                           
  4214  04EF  0874               	movf	spi_master_receive@destination,w
  4215                           
  4216                           ; Switch size 1, requested type "space"
  4217                           ; Number of cases is 3, Range of values is 2 to 4
  4218                           ; switch strategies available:
  4219                           ; Name         Instructions Cycles
  4220                           ; simple_byte           10     6 (average)
  4221                           ; direct_byte           20    11 (fixed)
  4222                           ; jumptable            263     9 (fixed)
  4223                           ;	Chosen strategy is simple_byte
  4224  04F0  3A02               	xorlw	2	; case 2
  4225  04F1  1903               	skipnz
  4226  04F2  2CE6               	goto	l90
  4227  04F3  3A01               	xorlw	1	; case 3
  4228  04F4  1903               	skipnz
  4229  04F5  2CE9               	goto	l95
  4230  04F6  3A07               	xorlw	7	; case 4
  4231  04F7  1903               	skipnz
  4232  04F8  2CEC               	goto	l99
  4233  04F9  2D01               	goto	l1371
  4234                           
  4235                           ;spi_master.c: 105: switch(destination)
  4236  04FA  2D01               	goto	l1371
  4237  04FB                     l103:	
  4238                           ;spi_master.c: 106: {
  4239                           ;spi_master.c: 107: case OBC2:
  4240                           
  4241                           
  4242                           ;spi_master.c: 108: PORTCbits.RC2 = 0;
  4243  04FB  1107               	bcf	7,2	;volatile
  4244                           
  4245                           ;spi_master.c: 109: break;
  4246  04FC  2D0C               	goto	l1373
  4247  04FD                     l105:	
  4248                           ;spi_master.c: 110: case COM:
  4249                           
  4250                           
  4251                           ;spi_master.c: 111: PORTCbits.RC0 = 0;
  4252  04FD  1007               	bcf	7,0	;volatile
  4253                           
  4254                           ;spi_master.c: 112: break;
  4255  04FE  2D0C               	goto	l1373
  4256  04FF                     l106:	
  4257                           ;spi_master.c: 113: case POW:
  4258                           
  4259                           
  4260                           ;spi_master.c: 114: PORTCbits.RC1 = 0;
  4261  04FF  1087               	bcf	7,1	;volatile
  4262                           
  4263                           ;spi_master.c: 116: }
  4264                           
  4265                           ;spi_master.c: 115: break;
  4266  0500  2D0C               	goto	l1373
  4267  0501                     l1371:	
  4268  0501  0874               	movf	spi_master_receive@destination,w
  4269                           
  4270                           ; Switch size 1, requested type "space"
  4271                           ; Number of cases is 3, Range of values is 2 to 4
  4272                           ; switch strategies available:
  4273                           ; Name         Instructions Cycles
  4274                           ; simple_byte           10     6 (average)
  4275                           ; direct_byte           20    11 (fixed)
  4276                           ; jumptable            263     9 (fixed)
  4277                           ;	Chosen strategy is simple_byte
  4278  0502  3A02               	xorlw	2	; case 2
  4279  0503  1903               	skipnz
  4280  0504  2CFB               	goto	l103
  4281  0505  3A01               	xorlw	1	; case 3
  4282  0506  1903               	skipnz
  4283  0507  2CFD               	goto	l105
  4284  0508  3A07               	xorlw	7	; case 4
  4285  0509  1903               	skipnz
  4286  050A  2CFF               	goto	l106
  4287  050B  2D0C               	goto	l1373
  4288  050C                     l1373:	
  4289                           
  4290                           ;spi_master.c: 120: SSPBUF = 0x00;
  4291  050C  0193               	clrf	19	;volatile
  4292  050D                     l1381:	
  4293                           ;spi_master.c: 123: while(SSPSTATbits.BF == 0)
  4294                           
  4295  050D  1683               	bsf	3,5	;RP0=1, select bank1
  4296  050E  1303               	bcf	3,6	;RP1=0, select bank1
  4297  050F  1814               	btfsc	20,0	;volatile
  4298  0510  2D28               	goto	l1385
  4299                           
  4300                           ;spi_master.c: 124: {
  4301                           ;spi_master.c: 126: if(timeout_counter == 0)
  4302  0511  0872               	movf	spi_master_receive@timeout_counter,w
  4303  0512  0473               	iorwf	spi_master_receive@timeout_counter+1,w
  4304  0513  1903               	btfsc	3,2
  4305  0514  0008               	return
  4306                           
  4307                           ;spi_master.c: 129: }
  4308                           ;spi_master.c: 132: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4309                           
  4310                           ;spi_master.c: 127: {
  4311                           ;spi_master.c: 128: return;
  4312  0515  2D16               	nop2	;2 cycle nop
  4313  0516  2D17               	nop2	;2 cycle nop
  4314  0517  0000               	nop
  4315                           
  4316                           ;spi_master.c: 133: timeout_counter--;
  4317  0518  3001               	movlw	1
  4318  0519  02F2               	subwf	spi_master_receive@timeout_counter,f
  4319  051A  3000               	movlw	0
  4320  051B  1C03               	skipc
  4321  051C  03F3               	decf	spi_master_receive@timeout_counter+1,f
  4322  051D  02F3               	subwf	spi_master_receive@timeout_counter+1,f
  4323  051E  2D0D               	goto	l1381
  4324  051F                     l113:	
  4325                           ;spi_master.c: 138: {
  4326                           ;spi_master.c: 139: case OBC2:
  4327                           
  4328                           ;spi_master.c: 134: }
  4329                           ;spi_master.c: 137: switch(destination)
  4330                           
  4331                           
  4332                           ;spi_master.c: 140: PORTCbits.RC2 = 1;
  4333  051F  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0520  1507               	bsf	7,2	;volatile
  4335                           
  4336                           ;spi_master.c: 141: break;
  4337  0521  2D33               	goto	l1387
  4338  0522                     l115:	
  4339                           ;spi_master.c: 142: case COM:
  4340                           
  4341                           
  4342                           ;spi_master.c: 143: PORTCbits.RC0 = 1;
  4343  0522  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0523  1407               	bsf	7,0	;volatile
  4345                           
  4346                           ;spi_master.c: 144: break;
  4347  0524  2D33               	goto	l1387
  4348  0525                     l116:	
  4349                           ;spi_master.c: 145: case POW:
  4350                           
  4351                           
  4352                           ;spi_master.c: 146: PORTCbits.RC1 = 1;
  4353  0525  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0526  1487               	bsf	7,1	;volatile
  4355                           
  4356                           ;spi_master.c: 148: }
  4357                           
  4358                           ;spi_master.c: 147: break;
  4359  0527  2D33               	goto	l1387
  4360  0528                     l1385:	
  4361  0528  0874               	movf	spi_master_receive@destination,w
  4362                           
  4363                           ; Switch size 1, requested type "space"
  4364                           ; Number of cases is 3, Range of values is 2 to 4
  4365                           ; switch strategies available:
  4366                           ; Name         Instructions Cycles
  4367                           ; simple_byte           10     6 (average)
  4368                           ; direct_byte           20    11 (fixed)
  4369                           ; jumptable            263     9 (fixed)
  4370                           ;	Chosen strategy is simple_byte
  4371  0529  3A02               	xorlw	2	; case 2
  4372  052A  1903               	skipnz
  4373  052B  2D1F               	goto	l113
  4374  052C  3A01               	xorlw	1	; case 3
  4375  052D  1903               	skipnz
  4376  052E  2D22               	goto	l115
  4377  052F  3A07               	xorlw	7	; case 4
  4378  0530  1903               	skipnz
  4379  0531  2D25               	goto	l116
  4380  0532  2D33               	goto	l1387
  4381  0533                     l1387:	
  4382                           
  4383                           ;spi_master.c: 150: return SSPBUF;
  4384  0533  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0534  0813               	movf	19,w	;volatile
  4386  0535  0008               	return
  4387  0536                     __end_of_spi_master_receive:	
  4388                           
  4389                           	psect	text30
  4390  0262                     __ptext30:	
  4391 ;; *************** function _MCLR_reset *****************
  4392 ;; Defined at:
  4393 ;;		line 60 in file "MCLR_reset.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  resetted_mcu    1    wreg     unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  resetted_mcu    1    2[COMMON] unsigned char 
  4398 ;;  nin             2    3[COMMON] PTR unsigned char 
  4399 ;;		 -> RAM(512), 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         0       0       0       0       0
  4410 ;;      Locals:         3       0       0       0       0
  4411 ;;      Temps:          2       0       0       0       0
  4412 ;;      Totals:         5       0       0       0       0
  4413 ;;Total ram usage:        5 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_COM_status
  4419 ;;		_POW_status
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _MCLR_reset
  4425  0262                     _MCLR_reset:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in _MCLR_reset: [wregfsr0]
  4429                           ;MCLR_reset@resetted_mcu stored from wreg
  4430  0262  00F2               	movwf	MCLR_reset@resetted_mcu
  4431                           
  4432                           ;MCLR_reset.c: 62: uint8_t *nin;
  4433                           ;MCLR_reset.c: 63: nin = 0x09;
  4434  0263  3009               	movlw	9
  4435  0264  00F3               	movwf	MCLR_reset@nin
  4436  0265  3000               	movlw	0
  4437  0266  00F4               	movwf	MCLR_reset@nin+1
  4438                           
  4439                           ;MCLR_reset.c: 66: *nin = resetted_mcu;
  4440  0267  0873               	movf	MCLR_reset@nin,w
  4441  0268  0084               	movwf	4
  4442  0269  1383               	bcf	3,7
  4443  026A  1874               	btfsc	MCLR_reset@nin+1,0
  4444  026B  1783               	bsf	3,7
  4445  026C  0872               	movf	MCLR_reset@resetted_mcu,w
  4446  026D  0080               	movwf	0
  4447                           
  4448                           ;MCLR_reset.c: 67: _delay((unsigned long)((10)*(20000000/4000.0)));
  4449  026E  3041               	movlw	65
  4450  026F  00F1               	movwf	??_MCLR_reset+1
  4451  0270  30EE               	movlw	238
  4452  0271  00F0               	movwf	??_MCLR_reset
  4453  0272                     u937:	
  4454  0272  0BF0               	decfsz	??_MCLR_reset,f
  4455  0273  2A72               	goto	u937
  4456  0274  0BF1               	decfsz	??_MCLR_reset+1,f
  4457  0275  2A72               	goto	u937
  4458  0276  0000               	nop
  4459                           
  4460                           ;MCLR_reset.c: 68: *nin = 0x03;
  4461  0277  0873               	movf	MCLR_reset@nin,w
  4462  0278  0084               	movwf	4
  4463  0279  1383               	bcf	3,7
  4464  027A  1874               	btfsc	MCLR_reset@nin+1,0
  4465  027B  1783               	bsf	3,7
  4466  027C  3003               	movlw	3
  4467  027D  0080               	movwf	0
  4468  027E  0008               	return
  4469  027F                     __end_of_MCLR_reset:	
  4470  0002                     
  4471                           	psect	functab
  4472  0700                     __pfunctab:	
  4473  0700                     __fptable:	
  4474  0700                     fptable:	
  4475  0700  00FF               	movwf	(btemp+1)& (0+127)
  4476  0701  3007               	movlw	high fptable
  4477  0702  008A               	movwf	10
  4478  0703  087F               	movf	(btemp+1)& (0+127),w
  4479  0704  0782               	addwf	2,f
  4480  0705                     fpbase:	
  4481  0705  2F05               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4482  0706                     fp__COM_status:	
  4483  0706                     entry__COM_status:	
  4484  0706  120A  118A  2A46   	ljmp	_COM_status
  4485  0709                     __end_of__fptable:	
  4486  007E                     btemp	set	126	;btemp
  4487  007E                     wtemp	set	126
  4488  007E                     wtemp0	set	126
  4489  0080                     wtemp1	set	128
  4490  0082                     wtemp2	set	130
  4491  0084                     wtemp3	set	132
  4492  0086                     wtemp4	set	134
  4493  0088                     wtemp5	set	136
  4494  007F                     wtemp6	set	127
  4495  007E                     ttemp	set	126
  4496  007E                     ttemp0	set	126
  4497  0081                     ttemp1	set	129
  4498  0084                     ttemp2	set	132
  4499  0087                     ttemp3	set	135
  4500  007F                     ttemp4	set	127
  4501  007E                     ltemp	set	126
  4502  007E                     ltemp0	set	126
  4503  0082                     ltemp1	set	130
  4504  0086                     ltemp2	set	134
  4505  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    packet_receive_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    receive_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet.payload(BANK0[30]), packet(BANK0[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint16_data_set@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    MCLR_reset@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    MCLR_init@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(COMMON[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(COMMON[2]), 


Critical Paths under _main in COMMON

    _command->_get_cw_data
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set
    _sent_data_set->_double_data_set
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _I2Ctemp_data_set->_receive_data_master
    _receive_data_master->_packet_receive_master
    _packet_receive_master->_receive_payload
    _receive_payload->_spi_master_receive
    _POW_status->_spi_master_send
    _COM_status->_spi_master_send

Critical Paths under _main in BANK0

    _main->_command
    _send_data_master->_packet_send_master
    _LED_data_set->_sent_data_set
    _sent_data_set->_double_data_set
    _I2Ctemp_data_set->_receive_data_master
    _receive_data_master->_packet_receive_master

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8850
                                             19 BANK0      3     3      0
                         _COM_status
                          _MCLR_init
                         _POW_status
                        _ad_con_init
                            _command
                   _spi_master_start
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command                                              4     4      0    7214
                                             15 BANK0      4     4      0
                   _I2Ctemp_data_set
                       _LED_data_set
                        _cw_data_set
                        _get_cw_data
                   _send_data_master
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _send_data_master                                     4     2      2    2250
                                              1 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (3) _packet_send_master                                   3     2      1    1866
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (4) _send_payload                                         6     5      1     962
                                              6 COMMON     6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _get_cw_data                                          3     3      0     426
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           10     8      2     290
                                              6 COMMON     7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (5) _bit_shift                                            6     5      1     190
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _cw_data_set                                          3     3      0     947
                                              4 COMMON     2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _LED_data_set                                         0     0      0    2385
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (3) _sent_data_set                                        9     5      4    2385
                                              6 BANK0      9     5      4
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) _uint16_data_set                                      8     5      3     487
                                              6 COMMON     8     5      3
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (6) _uint16_to_byte_array                                 6     3      3     216
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (4) _double_data_set                                     10     7      3     555
                                             10 COMMON     4     1      3
                                              0 BANK0      6     6      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (5) _double_to_byte_array                                10     7      3     286
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2Ctemp_data_set                                     0     0      0     487
                _receive_data_master
 ---------------------------------------------------------------------------------
 (3) _receive_data_master                                  2     2      0     487
                                             13 COMMON     1     1      0
                                              2 BANK0      1     1      0
              _packet_receive_master
 ---------------------------------------------------------------------------------
 (4) _packet_receive_master                                4     3      1     465
                                             11 COMMON     2     1      1
                                              0 BANK0      2     2      0
                    _receive_payload
                 _spi_master_receive
 ---------------------------------------------------------------------------------
 (5) _receive_payload                                      6     6      0     231
                                              5 COMMON     6     6      0
                 _spi_master_receive
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POW_status                                           0     0      0     742
                         _MCLR_reset
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (1) _MCLR_init                                            2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _COM_status                                           2     2      0     879
                                              6 COMMON     2     2      0
                         _MCLR_reset
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      6     5      1     697
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _spi_master_receive                                   5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _MCLR_reset                                           5     5      0      45
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COM_status
     _MCLR_reset
     _spi_master_receive
     _spi_master_send
   _MCLR_init
   _POW_status
     _MCLR_reset
     _spi_master_send
   _ad_con_init
   _command
     _I2Ctemp_data_set
       _receive_data_master
         _packet_receive_master
           _receive_payload
             _spi_master_receive
           _spi_master_receive
     _LED_data_set
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _cw_data_set
       _uint8_data_set
     _get_cw_data
       _get_adcon
         _bit_shift
       _spi_master_receive
       _spi_master_start
     _send_data_master
       _packet_send_master
         _send_payload
           _spi_master_send
         _spi_master_send
     _spi_master_send
   _spi_master_start
   _sysprot_init
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      52       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      52      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 06 20:13:35 2016

                                   pc 0002                           __CFG_CP$OFF 0000  
                         _SSPSTATbits 0094                                    l65 02A5  
                                  l90 04E6                                    l95 04E9  
                                  l99 04EC                ??_uint16_to_byte_array 0073  
                                  _cw 0041                                    fsr 0004  
                 ___wmul@multiplicand 0072                  __size_of_ad_con_init 000B  
                                 l103 04FB                                   l113 051F  
                                 l105 04FD                                   l121 0542  
                                 l106 04FF                                   l130 0548  
                                 l115 0522                                   l116 0525  
                                 l134 0557                                   l126 0545  
                                 l144 057C                                   l136 0559  
                                 l137 055B                                   l146 057F  
                                 l147 0582                                   l261 0426  
                                 l237 05F8                                   l269 03EF  
                                 l383 0731                                   l385 07A2  
                                 l475 02C8                      ?_receive_payload 0070  
                        __CFG_CPD$OFF 0000                                   u805 02D0  
                                 u665 03C9                                   u675 03DE  
                                 u907 07EB                                   u917 0738  
                                 u927 0748                                   u937 0272  
                                 u795 02C9                            _POW_status 0221  
                                 u897 07CB                           ?_COM_status 0070  
                uint8_data_set@p_data 0070                                   fsr0 0004  
                                 indf 0000           send_data_master@destination 0052  
              ??_double_to_byte_array 0073                          __CFG_FOSC$HS 0000  
                         ?_MCLR_reset 0070                           command@data 0060  
                        __CFG_LVP$OFF 0000                                  l1401 055D  
                                l1411 056A                                  l1403 0568  
                                l1415 0585                                  l1503 045A  
                                l1417 0590                                  l1601 05DD  
                                l1371 0501                                  l1443 0468  
                                l1381 050D                                  l1373 050C  
                                l1461 0493                                  l1525 0423  
                                l1517 040C                                  l1605 05EB  
                                l1701 076D                                  l1367 04EF  
                                l1385 0528                                  l1457 0476  
                                l1481 02DF                                  l1561 04D5  
                                l1705 0795                                  l1387 0533  
                                l1459 0463                                  l1539 04A0  
                                l1397 054B                                  l1565 02C0  
                                l1557 04BA                                  l1495 0441  
                                l1559 049A                                  l1739 07C2  
                                l1597 05C3                                  l1599 05CF  
                                l1689 070D                                  _RCIF 0065  
                                _TXIF 0064                          __CFG_WRT$OFF 0000  
                                _main 07A3                      ??_uint8_data_set 0073  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                                ltemp 007E                  __end_of_sysprot_init 01D8  
                                start 0000                                  ttemp 007E  
                                wtemp 007E                    __size_of_MCLR_init 0010  
       spi_master_receive@destination 0074                   _receive_data_master 01EB  
                   ??_double_data_set 007D                                 ?_main 0070  
                       __CFG_WDTE$OFF 0000                uint8_data_set@data_len 0072  
                               _RCREG 001A                                 _RCSTA 0018  
                               _SPBRG 0099                                 _TXREG 0019  
                               _TXSTA 0098                         __CFG_PWRTE$ON 0000  
                     __end_of_command 07A3                  ?_receive_data_master 0070  
    double_to_byte_array@p_data_array 0072              __end_of_send_data_master 0246  
                               fpbase 0705                         ?_LED_data_set 0070  
                    ?_uint16_data_set 0076                                 pclath 000A  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               ttemp4 007F                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F                      bit_shift@p_adres 0070  
                 __size_of_COM_status 001C           __size_of_spi_master_receive 005C  
                     __initialization 07F5                   __size_of_MCLR_reset 001D  
               uint16_data_set@p_data 0076                          __end_of_main 07F3  
        packet_receive_master@use_obc 004E                                ??_main 0061  
                      get_cw_data@buf 004E      uint16_to_byte_array@p_data_array 0072  
                COM_status@COM_status 0077                           ?_POW_status 0070  
      __size_of_packet_receive_master 002C         __end_of_packet_receive_master 0389  
                    entry__COM_status 0706                 ??_receive_data_master 007D  
                   __end_of_MCLR_init 0221                                _ADCON0 001F  
                              _ADCON1 009F                        ??_LED_data_set 007E  
                              _ADRESH 001E                                _ADRESL 009E  
      spi_master_send@timeout_counter 0073                                _SSPBUF 0013  
                    __end_of__fptable 0709            __end_of_packet_send_master 03B9  
                __size_of_get_cw_data 0087                  __size_of_cw_data_set 0080  
                              ___wmul 02BE              __end_of_I2Ctemp_data_set 01D3  
               double_data_set@p_data 007A                                _packet 0021  
                           ??_command 005D                                fptable 0700  
                              fptotal 0002             __size_of_spi_master_start 001F  
                    receive_payload@i 0077                 __size_of_sysprot_init 0005  
             __end_of__initialization 07FC                 send_payload@index_pos 007A  
                 __size_of_POW_status 0011                 send_payload@p_payload 0076  
                      __pcstackCOMMON 0070         packet_receive_master@p_packet 007B  
               __end_of_sent_data_set 05F9                   spi_master_send@data 0070  
                  __size_of_bit_shift 0036                          ??_COM_status 0076  
                        _sysprot_init 01D3                          ??_MCLR_reset 0070  
                  __size_of_get_adcon 0020                          MCLR_init@nin 0070  
                          __pbssBANK0 0020            uint16_to_byte_array@p_data 0070  
            __size_of_spi_master_send 0060     spi_master_receive@timeout_counter 0072  
                     _double_data_set 03EF                    __end_of_COM_status 0262  
                          __pmaintext 07A3          receive_payload@rec_index_pos 0079  
                             ?___wmul 0070                    __end_of_MCLR_reset 027F  
                       ??_ad_con_init 0070                  __end_of_LED_data_set 0211  
                       ?_send_payload 0076         __size_of_uint16_to_byte_array 002A  
                  __size_of_uart_init 000C        receive_data_master@destination 0050  
       __size_of_double_to_byte_array 002B              __size_of_receive_payload 003B  
             bit_shift@bit_mask_for_l 000B                            __stringtab 0003  
                   ?_send_data_master 004F                    ??_send_data_master 0051  
                  uint16_data_set@buf 007A                     __end_of_bit_shift 03EF  
                   __end_of_get_adcon 02BE                       __size_of___wmul 0021  
             spi_master_receive@dummy 0071                        ??_send_payload 0077  
                             __ptext1 01F7                               __ptext2 01D3  
                             __ptext3 0709                               __ptext4 0232  
                             __ptext5 0389                               __ptext6 0498  
                             __ptext7 0679                               __ptext8 027F  
                             __ptext9 029E                               _command 0709  
                        ??_POW_status 0076                   __end_of_ad_con_init 01EB  
                cw_data_set@p_cw_data 0075                      _spi_master_start 027F  
                             clrloop0 01D9                  end_of_initialization 07FC  
             __end_of_double_data_set 0426                             _MCLR_init 0211  
          __end_of_spi_master_receive 0536             sent_data_set@byte_of_data 0057  
                   __end_of_uart_init 0203                    __end_of_POW_status 0232  
            __size_of_uint16_data_set 0037                     ??_spi_master_send 0071  
                    double_data_set@i 0053               __size_of_uint8_data_set 0029  
                   ?_I2Ctemp_data_set 0070                             _PORTAbits 0005  
         __end_of_receive_data_master 01F7                    _packet_send_master 0389  
                           _PORTCbits 0007                             _PORTDbits 0008  
                  ??_I2Ctemp_data_set 007E                 double_to_byte_array@i 0079  
                           _TRISAbits 0085                             _TRISCbits 0087  
                           _TRISDbits 0088                             _TRISEbits 0089  
                 ?_packet_send_master 007C                 _packet_receive_master 035D  
                       fp__COM_status 0706                            ?_MCLR_init 0070  
                       ??_get_cw_data 007D                     ??_receive_payload 0075  
                       ??_cw_data_set 0074                 __size_of_LED_data_set 000E  
             uint16_data_set@data_len 0078                 sent_data_set@data_len 0056  
                ??_packet_send_master 007D                           _ad_con_init 01E0  
                      __end_of___wmul 02DF                         send_payload@i 0079  
          spi_master_send@destination 0075                  spi_master_send@dummy 0072  
                 start_initialization 07F5                          _LED_data_set 0203  
                    ?_double_data_set 007A                  __end_of_send_payload 04DA  
     __end_ofbit_shift@bit_mask_for_l 000C                      uint16_data_set@i 007D  
                            ??___wmul 0074                  send_payload@data_len 0078  
                 __end_of_get_cw_data 0700                   __end_of_cw_data_set 0679  
                   ??_uint16_data_set 0079         double_to_byte_array@converter 0075  
              ?_packet_receive_master 007B                             ___latbits 0002  
                       __pcstackBANK0 004E                     __size_of__fptable 0009  
                 sent_data_set@p_data 0054                __size_of_sent_data_set 0063  
                         ??_MCLR_init 0070          __end_of_uint16_to_byte_array 0332  
                       MCLR_reset@nin 0073          __end_of_double_to_byte_array 035D  
                           __pfunctab 0700                             _bit_shift 03B9  
            __end_of_spi_master_start 029E                        _uint8_data_set 02DF  
           __size_of_send_data_master 0014                             _get_adcon 029E  
          double_to_byte_array@p_data 0070                             __pstrings 0003  
                            ?_command 0070             send_data_master@data_type 004F  
                           _index_pos 0020                       _spi_master_send 0536  
                      ___wmul@product 0074                             clear_ram0 01D8  
                         _get_cw_data 0679                           _cw_data_set 05F9  
              __end_of_uint8_data_set 0308                            ?_bit_shift 0070  
                           _uart_init 01F7                         _sent_data_set 0596  
                          ?_get_adcon 0076                    _spi_master_receive 04DA  
                          _ADCON0bits 001F                           __stringbase 0008  
                   ___wmul@multiplier 0070                   ?_spi_master_receive 0070  
                     _receive_payload 045D                 __size_of_send_payload 0042  
           __size_of_I2Ctemp_data_set 0005              receive_payload@p_payload 0078  
                ??_spi_master_receive 0070                       ?_uint8_data_set 0070  
                          ?_uart_init 0070                        ?_sent_data_set 0054  
                        ?_ad_con_init 0070            receive_payload@destination 007A  
                  __end_of__stringtab 0009                          _send_payload 0498  
                _uint16_to_byte_array 0308                      __size_of_command 009A  
                       ?_sysprot_init 0070                              __fptable 0700  
             double_data_set@data_len 007C               __end_of_spi_master_send 0596  
                            __ptext10 03B9                              __ptext11 05F9  
                            __ptext20 01CE                              __ptext12 0203  
                            __ptext21 01EB                              __ptext13 0596  
                            __ptext30 0262                              __ptext22 035D  
                            __ptext14 02DF                              __ptext23 045D  
                            __ptext15 0426                              __ptext24 01E0  
                            __ptext16 0308                              __ptext25 0221  
                            __ptext17 03EF                              __ptext26 0211  
                            __ptext18 0332                              __ptext27 0246  
                            __ptext19 02BE                              __ptext28 0536  
                            __ptext29 04DA          __size_of_receive_data_master 000C  
                _double_to_byte_array 0332  __end_ofuint16_to_byte_array@bit_mask 000B  
        uint16_to_byte_array@bit_mask 0009                         __size_of_main 0050  
              MCLR_reset@resetted_mcu 0072                       _uint16_data_set 0426  
          packet_send_master@p_packet 007C           __size_of_packet_send_master 0030  
             receive_payload@data_len 0076                           ??_bit_shift 0071  
    packet_receive_master@destination 004F                      _send_data_master 0232  
                         ??_get_adcon 0078                 ?_uint16_to_byte_array 0070  
             ??_packet_receive_master 007C               __end_of_receive_payload 0498  
                      ??_sysprot_init 0070                            _COM_status 0246  
                          _MCLR_reset 0262                    double_data_set@buf 004E  
               ?_double_to_byte_array 0070                     get_adcon@ad_value 007B  
                           stringcode 0003              __size_of_double_data_set 0037  
                     ??_sent_data_set 0058                           ??_uart_init 0070  
             send_payload@destination 007B                     ?_spi_master_start 0070  
                  ??_spi_master_start 0070                     get_adcon@my_adres 0079  
                            stringdir 0003                              stringtab 0003  
                    ?_spi_master_send 0070                      _I2Ctemp_data_set 01CE  
             __end_of_uint16_data_set 045D      send_data_master@data_end_command 0050  
                          _SSPCONbits 0014                          ?_get_cw_data 0070  
                        ?_cw_data_set 0070         packet_send_master@destination 004E  
                 bit_shift@p_ad_value 0075  
