

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Mar 15 21:35:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  010F                     	;# 
   344  018C                     	;# 
   345  018D                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000D                     	;# 
   360  000E                     	;# 
   361  000E                     	;# 
   362  000F                     	;# 
   363  0010                     	;# 
   364  0011                     	;# 
   365  0012                     	;# 
   366  0013                     	;# 
   367  0014                     	;# 
   368  0015                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0017                     	;# 
   372  0018                     	;# 
   373  0019                     	;# 
   374  001A                     	;# 
   375  001B                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  001D                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  0081                     	;# 
   382  0085                     	;# 
   383  0086                     	;# 
   384  0087                     	;# 
   385  0088                     	;# 
   386  0089                     	;# 
   387  008C                     	;# 
   388  008D                     	;# 
   389  008E                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0093                     	;# 
   393  0094                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  010F                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0088                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  000E                     	;# 
   482  000F                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0013                     	;# 
   487  0014                     	;# 
   488  0015                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0017                     	;# 
   492  0018                     	;# 
   493  0019                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001D                     	;# 
   499  001E                     	;# 
   500  001F                     	;# 
   501  0081                     	;# 
   502  0085                     	;# 
   503  0086                     	;# 
   504  0087                     	;# 
   505  0088                     	;# 
   506  0089                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  0000                     	;# 
   527  0001                     	;# 
   528  0002                     	;# 
   529  0003                     	;# 
   530  0004                     	;# 
   531  0005                     	;# 
   532  0006                     	;# 
   533  0007                     	;# 
   534  0008                     	;# 
   535  0009                     	;# 
   536  000A                     	;# 
   537  000B                     	;# 
   538  000C                     	;# 
   539  000D                     	;# 
   540  000E                     	;# 
   541  000E                     	;# 
   542  000F                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0013                     	;# 
   547  0014                     	;# 
   548  0015                     	;# 
   549  0015                     	;# 
   550  0016                     	;# 
   551  0017                     	;# 
   552  0018                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001B                     	;# 
   556  001B                     	;# 
   557  001C                     	;# 
   558  001D                     	;# 
   559  001E                     	;# 
   560  001F                     	;# 
   561  0081                     	;# 
   562  0085                     	;# 
   563  0086                     	;# 
   564  0087                     	;# 
   565  0088                     	;# 
   566  0089                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  0091                     	;# 
   571  0092                     	;# 
   572  0093                     	;# 
   573  0094                     	;# 
   574  0098                     	;# 
   575  0099                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  010D                     	;# 
   582  010E                     	;# 
   583  010F                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586                           
   587                           	psect	strings
   588  0800                     __pstrings:	
   589  0800                     stringtab:	
   590  0800                     __stringtab:	
   591  0800                     stringcode:	
   592                           ;	String table - string pointers are 1 byte each
   593                           
   594  0800                     stringdir:	
   595  0800  3008               	movlw	high stringdir
   596  0801  008A               	movwf	10
   597  0802  0804               	movf	4,w
   598  0803  0A84               	incf	4,f
   599  0804  0782               	addwf	2,f
   600  0805                     __stringbase:	
   601  0805  3400               	retlw	0
   602  0806                     __end_of__stringtab:	
   603  0806                     uint16_to_byte_array@bit_mask:	
   604  0806  34FF               	retlw	255
   605  0807  3400               	retlw	0
   606  0808                     __end_ofuint16_to_byte_array@bit_mask:	
   607  0808                     bit_shift@bit_mask_for_l:	
   608  0808  3403               	retlw	3
   609  0809                     __end_ofbit_shift@bit_mask_for_l:	
   610  0809                     check_bit@bit_mask:	
   611  0809  3480               	retlw	128
   612  080A                     __end_ofcheck_bit@bit_mask:	
   613  001F                     _ADCON0	set	31
   614  001F                     _ADCON0bits	set	31
   615  001E                     _ADRESH	set	30
   616  000B                     _INTCONbits	set	11
   617  000C                     _PIR1bits	set	12
   618  0005                     _PORTAbits	set	5
   619  0007                     _PORTCbits	set	7
   620  0008                     _PORTDbits	set	8
   621  001A                     _RCREG	set	26
   622  0018                     _RCSTA	set	24
   623  0013                     _SSPBUF	set	19
   624  0014                     _SSPCONbits	set	20
   625  0019                     _TXREG	set	25
   626  0065                     _RCIF	set	101
   627  0064                     _TXIF	set	100
   628  009F                     _ADCON1	set	159
   629  009E                     _ADRESL	set	158
   630  008C                     _PIE1bits	set	140
   631  0099                     _SPBRG	set	153
   632  0094                     _SSPSTATbits	set	148
   633  0085                     _TRISAbits	set	133
   634  0087                     _TRISCbits	set	135
   635  0088                     _TRISDbits	set	136
   636  0089                     _TRISEbits	set	137
   637  0098                     _TXSTA	set	152
   638                           
   639                           ; #config settings
   640  0000                     
   641                           	psect	cinit
   642  0015                     start_initialization:	
   643  0015                     __initialization:	
   644                           
   645                           ; Clear objects allocated to COMMON
   646  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   647  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   648                           
   649                           ; Clear objects allocated to BANK0
   650  0017  1383               	bcf	3,7	;select IRP bank0
   651  0018  304C               	movlw	low __pbssBANK0
   652  0019  0084               	movwf	4
   653  001A  305C               	movlw	low (__pbssBANK0+16)
   654  001B  120A  158A  26BD  120A  118A  	fcall	clear_ram0
   655                           
   656                           ; Clear objects allocated to BANK1
   657  0020  30A0               	movlw	low __pbssBANK1
   658  0021  0084               	movwf	4
   659  0022  30C0               	movlw	low (__pbssBANK1+32)
   660  0023  120A  158A  26BD   	fcall	clear_ram0
   661  0026                     end_of_initialization:	
   662                           ;End of C runtime variable initialization code
   663                           
   664  0026                     __end_of__initialization:	
   665  0026  0183               	clrf	3
   666  0027  120A  118A  282A   	ljmp	_main	;jump to C main() function
   667                           
   668                           	psect	bssCOMMON
   669  0079                     __pbssCOMMON:	
   670  0079                     _uart_interrupt:	
   671  0079                     	ds	2
   672                           
   673                           	psect	bssBANK0
   674  004C                     __pbssBANK0:	
   675  004C                     _index_pos:	
   676  004C                     	ds	1
   677  004D                     _cw:	
   678  004D                     	ds	13
   679  005A                     _I2CTEMP_data:	
   680  005A                     	ds	2
   681                           
   682                           	psect	bssBANK1
   683  00A0                     __pbssBANK1:	
   684  00A0                     _packet:	
   685  00A0                     	ds	32
   686                           
   687                           	psect	clrtext
   688  0EBD                     clear_ram0:	
   689                           ;	Called with FSR containing the base address, and
   690                           ;	W with the last address+1
   691                           
   692  0EBD  0064               	clrwdt	;clear the watchdog before getting into this loop
   693  0EBE                     clrloop0:	
   694  0EBE  0180               	clrf	0	;clear RAM location pointed to by FSR
   695  0EBF  0A84               	incf	4,f	;increment pointer
   696  0EC0  0604               	xorwf	4,w	;XOR with final address
   697  0EC1  1903               	btfsc	3,2	;have we reached the end yet?
   698  0EC2  3400               	retlw	0	;all done for this memory range, return
   699  0EC3  0604               	xorwf	4,w	;XOR again to restore value
   700  0EC4  2EBE               	goto	clrloop0	;do the next byte
   701                           
   702                           	psect	cstackCOMMON
   703  0070                     __pcstackCOMMON:	
   704  0070                     ?_MCLR_init:	
   705  0070                     ?_sysprot_init:	
   706                           ; 0 bytes @ 0x0
   707                           
   708  0070                     ?_ad_con_init:	
   709                           ; 0 bytes @ 0x0
   710                           
   711  0070                     ?_spi_master_start:	
   712                           ; 0 bytes @ 0x0
   713                           
   714  0070                     ?_uart_init:	
   715                           ; 0 bytes @ 0x0
   716                           
   717  0070                     ?_command:	
   718                           ; 0 bytes @ 0x0
   719                           
   720  0070                     ?_check_bit:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0070                     ??_getch:	
   724                           ; 0 bytes @ 0x0
   725                           
   726  0070                     ?_LED_data_set:	
   727                           ; 0 bytes @ 0x0
   728                           
   729  0070                     ?_get_uart:	
   730                           ; 0 bytes @ 0x0
   731                           
   732  0070                     ?_putch:	
   733                           ; 0 bytes @ 0x0
   734                           
   735  0070                     ?_get_cw_data:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ?_cw_data_set:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ?_getch:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ?_spi_master_receive:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_main:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     getch@count:	
   751                           ; 2 bytes @ 0x0
   752                           
   753                           
   754                           ; 2 bytes @ 0x0
   755  0070                     	ds	2
   756  0072                     ??_get_uart:	
   757                           
   758                           ; 0 bytes @ 0x2
   759  0072                     	ds	7
   760                           
   761                           	psect	cstackBANK0
   762  0020                     __pcstackBANK0:	
   763  0020                     ??_MCLR_init:	
   764  0020                     ??_sysprot_init:	
   765                           ; 0 bytes @ 0x0
   766                           
   767  0020                     ??_ad_con_init:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0020                     ??_spi_master_start:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0020                     ??_uart_init:	
   774                           ; 0 bytes @ 0x0
   775                           
   776  0020                     ??_check_bit:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0020                     ?_uint8_data_set:	
   780                           ; 0 bytes @ 0x0
   781                           
   782  0020                     ?_uint16_to_byte_array:	
   783                           ; 0 bytes @ 0x0
   784                           
   785  0020                     ?_double_to_byte_array:	
   786                           ; 0 bytes @ 0x0
   787                           
   788  0020                     ?_bit_shift:	
   789                           ; 0 bytes @ 0x0
   790                           
   791  0020                     ??_spi_master_receive:	
   792                           ; 0 bytes @ 0x0
   793                           
   794  0020                     ?_spi_master_send:	
   795                           ; 0 bytes @ 0x0
   796                           
   797  0020                     ??_putch:	
   798                           ; 0 bytes @ 0x0
   799                           
   800  0020                     ?___ftge:	
   801                           ; 0 bytes @ 0x0
   802                           
   803  0020                     ?___wmul:	
   804                           ; 1 bit 
   805                           
   806  0020                     ?___ftpack:	
   807                           ; 2 bytes @ 0x0
   808                           
   809  0020                     bit_shift@p_adres:	
   810                           ; 3 bytes @ 0x0
   811                           
   812  0020                     spi_master_send@data:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     putch@byte:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     MCLR_init@nin:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     uint8_data_set@p_data:	
   822                           ; 2 bytes @ 0x0
   823                           
   824  0020                     uint16_to_byte_array@p_data:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0020                     double_to_byte_array@p_data:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0020                     ___wmul@multiplier:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0020                     ___ftpack@arg:	
   834                           ; 2 bytes @ 0x0
   835                           
   836  0020                     ___ftge@ff1:	
   837                           ; 3 bytes @ 0x0
   838                           
   839                           
   840                           ; 3 bytes @ 0x0
   841  0020                     	ds	1
   842  0021                     ??_bit_shift:	
   843  0021                     ??_spi_master_send:	
   844                           ; 0 bytes @ 0x1
   845                           
   846  0021                     spi_master_receive@dummy:	
   847                           ; 0 bytes @ 0x1
   848                           
   849                           
   850                           ; 1 bytes @ 0x1
   851  0021                     	ds	1
   852  0022                     spi_master_send@dummy:	
   853  0022                     uint8_data_set@data_len:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0022                     uint16_to_byte_array@p_data_array:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0022                     double_to_byte_array@p_data_array:	
   860                           ; 1 bytes @ 0x2
   861                           
   862  0022                     spi_master_receive@timeout_counter:	
   863                           ; 1 bytes @ 0x2
   864                           
   865  0022                     ___wmul@multiplicand:	
   866                           ; 2 bytes @ 0x2
   867                           
   868                           
   869                           ; 2 bytes @ 0x2
   870  0022                     	ds	1
   871  0023                     ??_uint8_data_set:	
   872  0023                     ??_uint16_to_byte_array:	
   873                           ; 0 bytes @ 0x3
   874                           
   875  0023                     ??_double_to_byte_array:	
   876                           ; 0 bytes @ 0x3
   877                           
   878  0023                     check_bit@data:	
   879                           ; 0 bytes @ 0x3
   880                           
   881  0023                     ___ftpack@exp:	
   882                           ; 1 bytes @ 0x3
   883                           
   884  0023                     spi_master_send@timeout_counter:	
   885                           ; 1 bytes @ 0x3
   886                           
   887  0023                     ___ftge@ff2:	
   888                           ; 2 bytes @ 0x3
   889                           
   890                           
   891                           ; 3 bytes @ 0x3
   892  0023                     	ds	1
   893  0024                     ??_cw_data_set:	
   894  0024                     ??___wmul:	
   895                           ; 0 bytes @ 0x4
   896                           
   897  0024                     check_bit@check_bit:	
   898                           ; 0 bytes @ 0x4
   899                           
   900  0024                     spi_master_receive@destination:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0024                     ___ftpack@sign:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0024                     ___wmul@product:	
   907                           ; 1 bytes @ 0x4
   908                           
   909                           
   910                           ; 2 bytes @ 0x4
   911  0024                     	ds	1
   912  0025                     ??___ftpack:	
   913  0025                     check_bit@i:	
   914                           ; 0 bytes @ 0x5
   915                           
   916  0025                     bit_shift@p_ad_value:	
   917                           ; 1 bytes @ 0x5
   918                           
   919  0025                     spi_master_send@destination:	
   920                           ; 1 bytes @ 0x5
   921                           
   922  0025                     cw_data_set@p_cw_data:	
   923                           ; 1 bytes @ 0x5
   924                           
   925  0025                     double_to_byte_array@converter:	
   926                           ; 1 bytes @ 0x5
   927                           
   928                           
   929                           ; 4 bytes @ 0x5
   930  0025                     	ds	1
   931  0026                     ?_uint16_data_set:	
   932  0026                     ??___ftge:	
   933                           ; 0 bytes @ 0x6
   934                           
   935  0026                     ?_send_payload:	
   936                           ; 0 bytes @ 0x6
   937                           
   938  0026                     ?_get_adcon:	
   939                           ; 1 bytes @ 0x6
   940                           
   941  0026                     send_payload@p_payload:	
   942                           ; 2 bytes @ 0x6
   943                           
   944  0026                     uint16_data_set@p_data:	
   945                           ; 1 bytes @ 0x6
   946                           
   947                           
   948                           ; 2 bytes @ 0x6
   949  0026                     	ds	1
   950  0027                     ??_send_payload:	
   951                           
   952                           ; 0 bytes @ 0x7
   953  0027                     	ds	1
   954  0028                     ??_get_adcon:	
   955  0028                     ?___altoft:	
   956                           ; 0 bytes @ 0x8
   957                           
   958  0028                     uint16_data_set@data_len:	
   959                           ; 3 bytes @ 0x8
   960                           
   961  0028                     send_payload@data_len:	
   962                           ; 1 bytes @ 0x8
   963                           
   964  0028                     ___altoft@c:	
   965                           ; 1 bytes @ 0x8
   966                           
   967                           
   968                           ; 4 bytes @ 0x8
   969  0028                     	ds	1
   970  0029                     ??_uint16_data_set:	
   971  0029                     double_to_byte_array@i:	
   972                           ; 0 bytes @ 0x9
   973                           
   974  0029                     send_payload@i:	
   975                           ; 1 bytes @ 0x9
   976                           
   977  0029                     get_adcon@my_adres:	
   978                           ; 1 bytes @ 0x9
   979                           
   980                           
   981                           ; 2 bytes @ 0x9
   982  0029                     	ds	1
   983  002A                     ?_double_data_set:	
   984  002A                     send_payload@index_pos:	
   985                           ; 0 bytes @ 0xA
   986                           
   987  002A                     double_data_set@p_data:	
   988                           ; 1 bytes @ 0xA
   989                           
   990  002A                     uint16_data_set@buf:	
   991                           ; 2 bytes @ 0xA
   992                           
   993                           
   994                           ; 3 bytes @ 0xA
   995  002A                     	ds	1
   996  002B                     send_payload@destination:	
   997  002B                     get_adcon@ad_value:	
   998                           ; 1 bytes @ 0xB
   999                           
  1000                           
  1001                           ; 2 bytes @ 0xB
  1002  002B                     	ds	1
  1003  002C                     ?_packet_send_master:	
  1004  002C                     ??___altoft:	
  1005                           ; 0 bytes @ 0xC
  1006                           
  1007  002C                     double_data_set@data_len:	
  1008                           ; 0 bytes @ 0xC
  1009                           
  1010  002C                     packet_send_master@p_packet:	
  1011                           ; 1 bytes @ 0xC
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  002C                     	ds	1
  1016  002D                     ??_double_data_set:	
  1017  002D                     ??_packet_send_master:	
  1018                           ; 0 bytes @ 0xD
  1019                           
  1020  002D                     ??_get_cw_data:	
  1021                           ; 0 bytes @ 0xD
  1022                           
  1023  002D                     uint16_data_set@i:	
  1024                           ; 0 bytes @ 0xD
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0xD
  1028  002D                     	ds	1
  1029  002E                     packet_send_master@destination:	
  1030  002E                     ___altoft@exp:	
  1031                           ; 1 bytes @ 0xE
  1032                           
  1033  002E                     get_cw_data@buf:	
  1034                           ; 1 bytes @ 0xE
  1035                           
  1036  002E                     double_data_set@buf:	
  1037                           ; 2 bytes @ 0xE
  1038                           
  1039                           
  1040                           ; 5 bytes @ 0xE
  1041  002E                     	ds	1
  1042  002F                     ?_send_data_master:	
  1043  002F                     send_data_master@data_type:	
  1044                           ; 0 bytes @ 0xF
  1045                           
  1046  002F                     ___altoft@sign:	
  1047                           ; 1 bytes @ 0xF
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0xF
  1051  002F                     	ds	1
  1052  0030                     ?___ftdiv:	
  1053  0030                     send_data_master@data_end_command:	
  1054                           ; 3 bytes @ 0x10
  1055                           
  1056  0030                     ___ftdiv@f2:	
  1057                           ; 1 bytes @ 0x10
  1058                           
  1059                           
  1060                           ; 3 bytes @ 0x10
  1061  0030                     	ds	1
  1062  0031                     ??_send_data_master:	
  1063                           
  1064                           ; 0 bytes @ 0x11
  1065  0031                     	ds	1
  1066  0032                     send_data_master@destination:	
  1067                           
  1068                           ; 1 bytes @ 0x12
  1069  0032                     	ds	1
  1070  0033                     double_data_set@i:	
  1071  0033                     ___ftdiv@f1:	
  1072                           ; 1 bytes @ 0x13
  1073                           
  1074                           
  1075                           ; 3 bytes @ 0x13
  1076  0033                     	ds	1
  1077  0034                     ?_sent_data_set:	
  1078  0034                     sent_data_set@p_data:	
  1079                           ; 1 bytes @ 0x14
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x14
  1083  0034                     	ds	2
  1084  0036                     ??___ftdiv:	
  1085  0036                     sent_data_set@data_len:	
  1086                           ; 0 bytes @ 0x16
  1087                           
  1088                           
  1089                           ; 1 bytes @ 0x16
  1090  0036                     	ds	1
  1091  0037                     sent_data_set@byte_of_data:	
  1092                           
  1093                           ; 1 bytes @ 0x17
  1094  0037                     	ds	1
  1095  0038                     ??_sent_data_set:	
  1096                           
  1097                           ; 0 bytes @ 0x18
  1098  0038                     	ds	2
  1099  003A                     ___ftdiv@cntr:	
  1100                           
  1101                           ; 1 bytes @ 0x1A
  1102  003A                     	ds	1
  1103  003B                     ___ftdiv@f3:	
  1104                           
  1105                           ; 3 bytes @ 0x1B
  1106  003B                     	ds	2
  1107  003D                     ??_command:	
  1108  003D                     ??_LED_data_set:	
  1109                           ; 0 bytes @ 0x1D
  1110                           
  1111                           
  1112                           ; 0 bytes @ 0x1D
  1113  003D                     	ds	1
  1114  003E                     ___ftdiv@exp:	
  1115                           
  1116                           ; 1 bytes @ 0x1E
  1117  003E                     	ds	1
  1118  003F                     ___ftdiv@sign:	
  1119                           
  1120                           ; 1 bytes @ 0x1F
  1121  003F                     	ds	1
  1122  0040                     command@data:	
  1123                           
  1124                           ; 1 bytes @ 0x20
  1125  0040                     	ds	1
  1126  0041                     ??_main:	
  1127                           
  1128                           ; 0 bytes @ 0x21
  1129  0041                     	ds	4
  1130  0045                     main@temp:	
  1131                           
  1132                           ; 3 bytes @ 0x25
  1133  0045                     	ds	3
  1134  0048                     main@t:	
  1135                           
  1136                           ; 4 bytes @ 0x28
  1137  0048                     	ds	4
  1138                           
  1139                           	psect	maintext
  1140  002A                     __pmaintext:	
  1141 ;;
  1142 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1143 ;;
  1144 ;; *************** function _main *****************
  1145 ;; Defined at:
  1146 ;;		line 31 in file "OBC1_main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  t               4   40[BANK0 ] long 
  1151 ;;  temp            3   37[BANK0 ] long 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2   32[None  ] int 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : B00/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       7       0       0       0
  1163 ;;      Temps:          0       4       0       0       0
  1164 ;;      Totals:         0      11       0       0       0
  1165 ;;Total ram usage:       11 bytes
  1166 ;; Hardware stack levels required when called:    7
  1167 ;; This function calls:
  1168 ;;		_MCLR_init
  1169 ;;		___altoft
  1170 ;;		___ftdiv
  1171 ;;		___ftge
  1172 ;;		_ad_con_init
  1173 ;;		_check_bit
  1174 ;;		_command
  1175 ;;		_spi_master_start
  1176 ;;		_sysprot_init
  1177 ;;		_uart_init
  1178 ;; This function is called by:
  1179 ;;		Startup code after reset
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _main
  1185  002A                     _main:	
  1186                           
  1187                           ;OBC1_main.c: 35: TRISDbits.TRISD7 = 0;
  1188                           
  1189                           ;incstack = 0
  1190                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1191  002A  1683               	bsf	3,5	;RP0=1, select bank1
  1192  002B  1303               	bcf	3,6	;RP1=0, select bank1
  1193  002C  1388               	bcf	8,7	;volatile
  1194                           
  1195                           ;OBC1_main.c: 36: PORTDbits.RD7 = 0;
  1196  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1197  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1198  002F  1388               	bcf	8,7	;volatile
  1199                           
  1200                           ;OBC1_main.c: 37: TRISDbits.TRISD6 = 0;
  1201  0030  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0031  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0032  1308               	bcf	8,6	;volatile
  1204                           
  1205                           ;OBC1_main.c: 38: PORTDbits.RD6 = 0;
  1206  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0035  1308               	bcf	8,6	;volatile
  1209                           
  1210                           ;OBC1_main.c: 41: TRISDbits.TRISD2 = 0;
  1211  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1212  0037  1303               	bcf	3,6	;RP1=0, select bank1
  1213  0038  1108               	bcf	8,2	;volatile
  1214                           
  1215                           ;OBC1_main.c: 42: PORTDbits.RD2 = 1;
  1216  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1217  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1218  003B  1508               	bsf	8,2	;volatile
  1219                           
  1220                           ;OBC1_main.c: 45: MCLR_init();
  1221  003C  120A  158A  26EA  120A  118A  	fcall	_MCLR_init
  1222                           
  1223                           ;OBC1_main.c: 46: sysprot_init();
  1224  0041  120A  118A  27FB  120A  118A  	fcall	_sysprot_init
  1225                           
  1226                           ;OBC1_main.c: 47: ad_con_init();
  1227  0046  120A  158A  26C5  120A  118A  	fcall	_ad_con_init
  1228                           
  1229                           ;OBC1_main.c: 48: spi_master_start();
  1230  004B  120A  158A  271A  120A  118A  	fcall	_spi_master_start
  1231                           
  1232                           ;OBC1_main.c: 49: uart_init();
  1233  0050  120A  158A  26D0  120A  118A  	fcall	_uart_init
  1234                           
  1235                           ;OBC1_main.c: 50: uart_interrupt = 0;
  1236  0055  01F9               	clrf	_uart_interrupt
  1237  0056  01FA               	clrf	_uart_interrupt+1
  1238                           
  1239                           ;OBC1_main.c: 51: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1240  0057  301A               	movlw	26
  1241  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1243  005A  00C3               	movwf	??_main+2
  1244  005B  305E               	movlw	94
  1245  005C  00C2               	movwf	??_main+1
  1246  005D  3086               	movlw	134
  1247  005E  00C1               	movwf	??_main
  1248  005F                     u1627:	
  1249  005F  0BC1               	decfsz	??_main,f
  1250  0060  285F               	goto	u1627
  1251  0061  0BC2               	decfsz	??_main+1,f
  1252  0062  285F               	goto	u1627
  1253  0063  0BC3               	decfsz	??_main+2,f
  1254  0064  285F               	goto	u1627
  1255  0065  0000               	nop
  1256  0066                     l2183:	
  1257                           ;OBC1_main.c: 55: while(1)
  1258                           
  1259                           
  1260                           ;OBC1_main.c: 56: {
  1261                           ;OBC1_main.c: 57: PORTDbits.RD7 = 1;
  1262  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0068  1788               	bsf	8,7	;volatile
  1265                           
  1266                           ;OBC1_main.c: 58: _delay((unsigned long)((100)*(20000000/4000.0)));
  1267  0069  3003               	movlw	3
  1268  006A  00C3               	movwf	??_main+2
  1269  006B  308A               	movlw	138
  1270  006C  00C2               	movwf	??_main+1
  1271  006D  3056               	movlw	86
  1272  006E  00C1               	movwf	??_main
  1273  006F                     u1637:	
  1274  006F  0BC1               	decfsz	??_main,f
  1275  0070  286F               	goto	u1637
  1276  0071  0BC2               	decfsz	??_main+1,f
  1277  0072  286F               	goto	u1637
  1278  0073  0BC3               	decfsz	??_main+2,f
  1279  0074  286F               	goto	u1637
  1280  0075  2876               	nop2
  1281                           
  1282                           ;OBC1_main.c: 68: command(0x02);
  1283  0076  3002               	movlw	2
  1284  0077  120A  118A  216F  120A  118A  	fcall	_command
  1285                           
  1286                           ;OBC1_main.c: 70: PORTDbits.RD7 = 1;
  1287  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1288  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1289  007E  1788               	bsf	8,7	;volatile
  1290                           
  1291                           ;OBC1_main.c: 71: PORTDbits.RD6 = 1;
  1292  007F  1708               	bsf	8,6	;volatile
  1293                           
  1294                           ;OBC1_main.c: 72: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1295  0080  301A               	movlw	26
  1296  0081  00C3               	movwf	??_main+2
  1297  0082  305E               	movlw	94
  1298  0083  00C2               	movwf	??_main+1
  1299  0084  3086               	movlw	134
  1300  0085  00C1               	movwf	??_main
  1301  0086                     u1647:	
  1302  0086  0BC1               	decfsz	??_main,f
  1303  0087  2886               	goto	u1647
  1304  0088  0BC2               	decfsz	??_main+1,f
  1305  0089  2886               	goto	u1647
  1306  008A  0BC3               	decfsz	??_main+2,f
  1307  008B  2886               	goto	u1647
  1308  008C  0000               	nop
  1309                           
  1310                           ;OBC1_main.c: 73: PORTDbits.RD7 = 0;
  1311  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1312  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1313  008F  1388               	bcf	8,7	;volatile
  1314                           
  1315                           ;OBC1_main.c: 74: PORTDbits.RD6 = 0;
  1316  0090  1308               	bcf	8,6	;volatile
  1317                           
  1318                           ;OBC1_main.c: 75: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1319  0091  301A               	movlw	26
  1320  0092  00C3               	movwf	??_main+2
  1321  0093  305E               	movlw	94
  1322  0094  00C2               	movwf	??_main+1
  1323  0095  3086               	movlw	134
  1324  0096  00C1               	movwf	??_main
  1325  0097                     u1657:	
  1326  0097  0BC1               	decfsz	??_main,f
  1327  0098  2897               	goto	u1657
  1328  0099  0BC2               	decfsz	??_main+1,f
  1329  009A  2897               	goto	u1657
  1330  009B  0BC3               	decfsz	??_main+2,f
  1331  009C  2897               	goto	u1657
  1332  009D  0000               	nop
  1333                           
  1334                           ;OBC1_main.c: 76: check_bit(I2CTEMP_data[0]);
  1335  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1336  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1337  00A0  085A               	movf	_I2CTEMP_data,w
  1338  00A1  120A  118A  2462  120A  118A  	fcall	_check_bit
  1339                           
  1340                           ;OBC1_main.c: 77: PORTDbits.RD7 = 1;
  1341  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1342  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1343  00A8  1788               	bsf	8,7	;volatile
  1344                           
  1345                           ;OBC1_main.c: 78: PORTDbits.RD6 = 1;
  1346  00A9  1708               	bsf	8,6	;volatile
  1347                           
  1348                           ;OBC1_main.c: 79: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1349  00AA  301A               	movlw	26
  1350  00AB  00C3               	movwf	??_main+2
  1351  00AC  305E               	movlw	94
  1352  00AD  00C2               	movwf	??_main+1
  1353  00AE  3086               	movlw	134
  1354  00AF  00C1               	movwf	??_main
  1355  00B0                     u1667:	
  1356  00B0  0BC1               	decfsz	??_main,f
  1357  00B1  28B0               	goto	u1667
  1358  00B2  0BC2               	decfsz	??_main+1,f
  1359  00B3  28B0               	goto	u1667
  1360  00B4  0BC3               	decfsz	??_main+2,f
  1361  00B5  28B0               	goto	u1667
  1362  00B6  0000               	nop
  1363                           
  1364                           ;OBC1_main.c: 80: PORTDbits.RD7 = 0;
  1365  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1367  00B9  1388               	bcf	8,7	;volatile
  1368                           
  1369                           ;OBC1_main.c: 81: PORTDbits.RD6 = 0;
  1370  00BA  1308               	bcf	8,6	;volatile
  1371                           
  1372                           ;OBC1_main.c: 82: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1373  00BB  301A               	movlw	26
  1374  00BC  00C3               	movwf	??_main+2
  1375  00BD  305E               	movlw	94
  1376  00BE  00C2               	movwf	??_main+1
  1377  00BF  3086               	movlw	134
  1378  00C0  00C1               	movwf	??_main
  1379  00C1                     u1677:	
  1380  00C1  0BC1               	decfsz	??_main,f
  1381  00C2  28C1               	goto	u1677
  1382  00C3  0BC2               	decfsz	??_main+1,f
  1383  00C4  28C1               	goto	u1677
  1384  00C5  0BC3               	decfsz	??_main+2,f
  1385  00C6  28C1               	goto	u1677
  1386  00C7  0000               	nop
  1387                           
  1388                           ;OBC1_main.c: 83: check_bit(I2CTEMP_data[1]);
  1389  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1391  00CA  085B               	movf	_I2CTEMP_data+1,w
  1392  00CB  120A  118A  2462  120A  118A  	fcall	_check_bit
  1393                           
  1394                           ;OBC1_main.c: 85: long t;
  1395                           ;OBC1_main.c: 86: double temp = 0.0;
  1396  00D0  3000               	movlw	0
  1397  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1398  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1399  00D3  00C5               	movwf	main@temp
  1400  00D4  3000               	movlw	0
  1401  00D5  00C6               	movwf	main@temp+1
  1402  00D6  3000               	movlw	0
  1403  00D7  00C7               	movwf	main@temp+2
  1404                           
  1405                           ;OBC1_main.c: 87: t = (cw.temp[0] << 8) | cw.temp[1];
  1406  00D8  0858               	movf	_cw+11,w
  1407  00D9  00C1               	movwf	??_main
  1408  00DA  01C2               	clrf	??_main+1
  1409  00DB  0857               	movf	_cw+10,w
  1410  00DC  00C3               	movwf	??_main+2
  1411  00DD  01C4               	clrf	??_main+3
  1412  00DE  0843               	movf	??_main+2,w
  1413  00DF  00C4               	movwf	??_main+3
  1414  00E0  01C3               	clrf	??_main+2
  1415  00E1  0841               	movf	??_main,w
  1416  00E2  0443               	iorwf	??_main+2,w
  1417  00E3  00C8               	movwf	main@t
  1418  00E4  0842               	movf	??_main+1,w
  1419  00E5  0444               	iorwf	??_main+3,w
  1420  00E6  00C9               	movwf	main@t+1
  1421  00E7  01CA               	clrf	main@t+2
  1422  00E8  1BC9               	btfsc	main@t+1,7
  1423  00E9  03CA               	decf	main@t+2,f
  1424  00EA  084A               	movf	main@t+2,w
  1425  00EB  00CB               	movwf	main@t+3
  1426                           
  1427                           ;OBC1_main.c: 88: if (t < 0) t = t - 65536;
  1428  00EC  1FCB               	btfss	main@t+3,7
  1429  00ED  2910               	goto	l2225
  1430  00EE  3000               	movlw	0
  1431  00EF  00C1               	movwf	??_main
  1432  00F0  3000               	movlw	0
  1433  00F1  00C2               	movwf	??_main+1
  1434  00F2  30FF               	movlw	255
  1435  00F3  00C3               	movwf	??_main+2
  1436  00F4  30FF               	movlw	255
  1437  00F5  00C4               	movwf	??_main+3
  1438  00F6  0848               	movf	main@t,w
  1439  00F7  07C1               	addwf	??_main,f
  1440  00F8  0849               	movf	main@t+1,w
  1441  00F9  1803               	skipnc
  1442  00FA  0F49               	incfsz	main@t+1,w
  1443  00FB  28FD               	goto	u1530
  1444  00FC  28FE               	goto	u1531
  1445  00FD                     u1530:	
  1446  00FD  07C2               	addwf	??_main+1,f
  1447  00FE                     u1531:	
  1448  00FE  084A               	movf	main@t+2,w
  1449  00FF  1803               	skipnc
  1450  0100  0F4A               	incfsz	main@t+2,w
  1451  0101  2903               	goto	u1532
  1452  0102  2904               	goto	u1533
  1453  0103                     u1532:	
  1454  0103  07C3               	addwf	??_main+2,f
  1455  0104                     u1533:	
  1456  0104  084B               	movf	main@t+3,w
  1457  0105  1803               	skipnc
  1458  0106  0A4B               	incf	main@t+3,w
  1459  0107  07C4               	addwf	??_main+3,f
  1460  0108  0844               	movf	??_main+3,w
  1461  0109  00CB               	movwf	main@t+3
  1462  010A  0843               	movf	??_main+2,w
  1463  010B  00CA               	movwf	main@t+2
  1464  010C  0842               	movf	??_main+1,w
  1465  010D  00C9               	movwf	main@t+1
  1466  010E  0841               	movf	??_main,w
  1467  010F  00C8               	movwf	main@t
  1468  0110                     l2225:	
  1469                           
  1470                           ;OBC1_main.c: 89: temp = (double)t / 128.0;
  1471  0110  3000               	movlw	0
  1472  0111  00B0               	movwf	___ftdiv@f2
  1473  0112  3000               	movlw	0
  1474  0113  00B1               	movwf	___ftdiv@f2+1
  1475  0114  3043               	movlw	67
  1476  0115  00B2               	movwf	___ftdiv@f2+2
  1477  0116  084B               	movf	main@t+3,w
  1478  0117  00AB               	movwf	___altoft@c+3
  1479  0118  084A               	movf	main@t+2,w
  1480  0119  00AA               	movwf	___altoft@c+2
  1481  011A  0849               	movf	main@t+1,w
  1482  011B  00A9               	movwf	___altoft@c+1
  1483  011C  0848               	movf	main@t,w
  1484  011D  00A8               	movwf	___altoft@c
  1485  011E  120A  118A  2674  120A  118A  	fcall	___altoft
  1486  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0125  0828               	movf	?___altoft,w
  1489  0126  00B3               	movwf	___ftdiv@f1
  1490  0127  0829               	movf	?___altoft+1,w
  1491  0128  00B4               	movwf	___ftdiv@f1+1
  1492  0129  082A               	movf	?___altoft+2,w
  1493  012A  00B5               	movwf	___ftdiv@f1+2
  1494  012B  120A  118A  2229  120A  118A  	fcall	___ftdiv
  1495  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0132  0830               	movf	?___ftdiv,w
  1498  0133  00C5               	movwf	main@temp
  1499  0134  0831               	movf	?___ftdiv+1,w
  1500  0135  00C6               	movwf	main@temp+1
  1501  0136  0832               	movf	?___ftdiv+2,w
  1502  0137  00C7               	movwf	main@temp+2
  1503                           
  1504                           ;OBC1_main.c: 91: if(temp >= 10.0){
  1505  0138  0845               	movf	main@temp,w
  1506  0139  00A0               	movwf	___ftge@ff1
  1507  013A  0846               	movf	main@temp+1,w
  1508  013B  00A1               	movwf	___ftge@ff1+1
  1509  013C  0847               	movf	main@temp+2,w
  1510  013D  00A2               	movwf	___ftge@ff1+2
  1511  013E  3000               	movlw	0
  1512  013F  00A3               	movwf	___ftge@ff2
  1513  0140  3020               	movlw	32
  1514  0141  00A4               	movwf	___ftge@ff2+1
  1515  0142  3041               	movlw	65
  1516  0143  00A5               	movwf	___ftge@ff2+2
  1517  0144  120A  118A  2531  120A  118A  	fcall	___ftge
  1518  0149  1C03               	btfss	3,0
  1519  014A  295E               	goto	l2237
  1520                           
  1521                           ;OBC1_main.c: 92: PORTDbits.RD6 = 1;
  1522  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1523  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1524  014D  1708               	bsf	8,6	;volatile
  1525                           
  1526                           ;OBC1_main.c: 93: _delay((unsigned long)((100)*(20000000/4000.0)));
  1527  014E  3003               	movlw	3
  1528  014F  00C3               	movwf	??_main+2
  1529  0150  308A               	movlw	138
  1530  0151  00C2               	movwf	??_main+1
  1531  0152  3056               	movlw	86
  1532  0153  00C1               	movwf	??_main
  1533  0154                     u1687:	
  1534  0154  0BC1               	decfsz	??_main,f
  1535  0155  2954               	goto	u1687
  1536  0156  0BC2               	decfsz	??_main+1,f
  1537  0157  2954               	goto	u1687
  1538  0158  0BC3               	decfsz	??_main+2,f
  1539  0159  2954               	goto	u1687
  1540  015A  295B               	nop2
  1541                           
  1542                           ;OBC1_main.c: 94: PORTDbits.RD6 = 0;
  1543  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1544  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1545  015D  1308               	bcf	8,6	;volatile
  1546  015E                     l2237:	
  1547                           ;OBC1_main.c: 95: _delay((unsigned long)((00)*(20000000/4000.0)));
  1548                           
  1549                           
  1550                           ;OBC1_main.c: 96: }
  1551                           ;OBC1_main.c: 98: PORTDbits.RD7 = 0;
  1552  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1553  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0160  1388               	bcf	8,7	;volatile
  1555                           
  1556                           ;OBC1_main.c: 99: _delay((unsigned long)((100)*(20000000/4000.0)));
  1557  0161  3003               	movlw	3
  1558  0162  00C3               	movwf	??_main+2
  1559  0163  308A               	movlw	138
  1560  0164  00C2               	movwf	??_main+1
  1561  0165  3056               	movlw	86
  1562  0166  00C1               	movwf	??_main
  1563  0167                     u1697:	
  1564  0167  0BC1               	decfsz	??_main,f
  1565  0168  2967               	goto	u1697
  1566  0169  0BC2               	decfsz	??_main+1,f
  1567  016A  2967               	goto	u1697
  1568  016B  0BC3               	decfsz	??_main+2,f
  1569  016C  2967               	goto	u1697
  1570  016D  296E               	nop2
  1571  016E  2866               	goto	l2183
  1572  016F                     __end_of_main:	
  1573                           ;OBC1_main.c: 100: }
  1574                           ;OBC1_main.c: 102: return 0;
  1575                           ;	Return value of _main is never used
  1576                           
  1577                           
  1578                           	psect	text1
  1579  0ED0                     __ptext1:	
  1580 ;; *************** function _uart_init *****************
  1581 ;; Defined at:
  1582 ;;		line 34 in file "uart_serial.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;		None               void
  1589 ;; Registers used:
  1590 ;;		wreg
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    2
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _uart_init
  1612  0ED0                     _uart_init:	
  1613                           
  1614                           ;uart_serial.c: 36: TRISCbits.TRISC7 = 1;
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _uart_init: [wreg]
  1618  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0ED2  1787               	bsf	7,7	;volatile
  1621                           
  1622                           ;uart_serial.c: 37: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1623  0ED3  3081               	movlw	129
  1624  0ED4  0099               	movwf	25	;volatile
  1625                           
  1626                           ;uart_serial.c: 38: TXSTA = (0x00 | 0x04 | 0x20);
  1627  0ED5  3024               	movlw	36
  1628  0ED6  0098               	movwf	24	;volatile
  1629                           
  1630                           ;uart_serial.c: 39: RCSTA = (0x00 | 0x90);
  1631  0ED7  3090               	movlw	144
  1632  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0EDA  0098               	movwf	24	;volatile
  1635  0EDB  0008               	return
  1636  0EDC                     __end_of_uart_init:	
  1637                           
  1638                           	psect	text2
  1639  07FB                     __ptext2:	
  1640 ;; *************** function _sysprot_init *****************
  1641 ;; Defined at:
  1642 ;;		line 85 in file "system_protocol.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		None
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _sysprot_init
  1672  07FB                     _sysprot_init:	
  1673                           
  1674                           ;system_protocol.c: 87: TRISDbits.TRISD0 = 1;
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _sysprot_init: []
  1678  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  1679  07FC  1303               	bcf	3,6	;RP1=0, select bank1
  1680  07FD  1408               	bsf	8,0	;volatile
  1681                           
  1682                           ;system_protocol.c: 88: TRISDbits.TRISD1 = 1;
  1683  07FE  1488               	bsf	8,1	;volatile
  1684  07FF  0008               	return
  1685  0800                     __end_of_sysprot_init:	
  1686                           
  1687                           	psect	text3
  1688  016F                     __ptext3:	
  1689 ;; *************** function _command *****************
  1690 ;; Defined at:
  1691 ;;		line 52 in file "OBC1_app.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  data            1    wreg     unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  data            1   32[BANK0 ] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;		None               void
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       0       0       0
  1706 ;;      Locals:         0       1       0       0       0
  1707 ;;      Temps:          0       3       0       0       0
  1708 ;;      Totals:         0       4       0       0       0
  1709 ;;Total ram usage:        4 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    6
  1712 ;; This function calls:
  1713 ;;		_LED_data_set
  1714 ;;		_cw_data_set
  1715 ;;		_get_cw_data
  1716 ;;		_putch
  1717 ;;		_send_data_master
  1718 ;;		_sent_data_set
  1719 ;;		_spi_master_send
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _command
  1727  016F                     _command:	
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1731                           ;command@data stored from wreg
  1732  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0171  00C0               	movwf	command@data
  1735                           
  1736                           ;OBC1_app.c: 54: switch(data)
  1737  0172  2A1B               	goto	l1997
  1738  0173                     l1959:	
  1739                           ;OBC1_app.c: 55: {
  1740                           ;OBC1_app.c: 56: case (0x03):
  1741                           
  1742                           
  1743                           ;OBC1_app.c: 57: get_cw_data();
  1744  0173  120A  118A  236D  120A  118A  	fcall	_get_cw_data
  1745                           
  1746                           ;OBC1_app.c: 58: cw_data_set(&cw);
  1747  0178  304D               	movlw	(low (_cw| 0))& (0+255)
  1748  0179  120A  118A  22E1  120A  118A  	fcall	_cw_data_set
  1749                           
  1750                           ;OBC1_app.c: 59: spi_master_send(COM, 0x11);
  1751  017E  3011               	movlw	17
  1752  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0181  00BD               	movwf	??_command
  1755  0182  083D               	movf	??_command,w
  1756  0183  00A0               	movwf	spi_master_send@data
  1757  0184  3003               	movlw	3
  1758  0185  120A  118A  2590  120A  118A  	fcall	_spi_master_send
  1759                           
  1760                           ;OBC1_app.c: 60: send_data_master(COM, 0x01, DATA_END);
  1761  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1762  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1763  018C  01AF               	clrf	send_data_master@data_type
  1764  018D  0AAF               	incf	send_data_master@data_type,f
  1765  018E  3010               	movlw	16
  1766  018F  00BD               	movwf	??_command
  1767  0190  083D               	movf	??_command,w
  1768  0191  00B0               	movwf	send_data_master@data_end_command
  1769  0192  3003               	movlw	3
  1770  0193  120A  158A  26FE   	fcall	_send_data_master
  1771                           
  1772                           ;OBC1_app.c: 61: break;
  1773  0196  0008               	return
  1774  0197                     l402:	
  1775                           ;OBC1_app.c: 63: case (0x01):
  1776                           
  1777                           
  1778                           ;OBC1_app.c: 64: PORTDbits.RD6 = 1;
  1779  0197  1708               	bsf	8,6	;volatile
  1780                           
  1781                           ;OBC1_app.c: 65: _delay((unsigned long)((100)*(20000000/4000.0)));
  1782  0198  3003               	movlw	3
  1783  0199  00BF               	movwf	??_command+2
  1784  019A  308A               	movlw	138
  1785  019B  00BE               	movwf	??_command+1
  1786  019C  3056               	movlw	86
  1787  019D  00BD               	movwf	??_command
  1788  019E                     u1707:	
  1789  019E  0BBD               	decfsz	??_command,f
  1790  019F  299E               	goto	u1707
  1791  01A0  0BBE               	decfsz	??_command+1,f
  1792  01A1  299E               	goto	u1707
  1793  01A2  0BBF               	decfsz	??_command+2,f
  1794  01A3  299E               	goto	u1707
  1795  01A4  29A5               	nop2
  1796                           
  1797                           ;OBC1_app.c: 66: PORTDbits.RD6 = 0;
  1798  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1799  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1800  01A7  1308               	bcf	8,6	;volatile
  1801                           
  1802                           ;OBC1_app.c: 67: _delay((unsigned long)((100)*(20000000/4000.0)));
  1803  01A8  3003               	movlw	3
  1804  01A9  00BF               	movwf	??_command+2
  1805  01AA  308A               	movlw	138
  1806  01AB  00BE               	movwf	??_command+1
  1807  01AC  3056               	movlw	86
  1808  01AD  00BD               	movwf	??_command
  1809  01AE                     u1717:	
  1810  01AE  0BBD               	decfsz	??_command,f
  1811  01AF  29AE               	goto	u1717
  1812  01B0  0BBE               	decfsz	??_command+1,f
  1813  01B1  29AE               	goto	u1717
  1814  01B2  0BBF               	decfsz	??_command+2,f
  1815  01B3  29AE               	goto	u1717
  1816  01B4  29B5               	nop2
  1817                           
  1818                           ;OBC1_app.c: 68: LED_data_set();
  1819  01B5  120A  158A  26DC  120A  118A  	fcall	_LED_data_set
  1820                           
  1821                           ;OBC1_app.c: 69: spi_master_send(COM, 0x11);
  1822  01BA  3011               	movlw	17
  1823  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1824  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1825  01BD  00BD               	movwf	??_command
  1826  01BE  083D               	movf	??_command,w
  1827  01BF  00A0               	movwf	spi_master_send@data
  1828  01C0  3003               	movlw	3
  1829  01C1  120A  118A  2590  120A  118A  	fcall	_spi_master_send
  1830                           
  1831                           ;OBC1_app.c: 70: send_data_master(COM, (0x01), DATA_END);
  1832  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1833  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1834  01C8  01AF               	clrf	send_data_master@data_type
  1835  01C9  0AAF               	incf	send_data_master@data_type,f
  1836  01CA  3010               	movlw	16
  1837  01CB  00BD               	movwf	??_command
  1838  01CC  083D               	movf	??_command,w
  1839  01CD  00B0               	movwf	send_data_master@data_end_command
  1840  01CE  3003               	movlw	3
  1841  01CF  120A  158A  26FE   	fcall	_send_data_master
  1842                           
  1843                           ;OBC1_app.c: 71: break;
  1844  01D2  0008               	return
  1845  01D3                     l1971:	
  1846                           ;OBC1_app.c: 73: case (0x02):
  1847                           
  1848                           
  1849                           ;OBC1_app.c: 74: putch(0x01);
  1850  01D3  3001               	movlw	1
  1851  01D4  120A  158A  26B5  120A  118A  	fcall	_putch
  1852                           
  1853                           ;OBC1_app.c: 75: PIE1bits.RCIE = 1;
  1854  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  1855  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  1856  01DB  168C               	bsf	12,5	;volatile
  1857                           
  1858                           ;OBC1_app.c: 76: INTCONbits.GIE = 1;
  1859  01DC  178B               	bsf	11,7	;volatile
  1860                           
  1861                           ;OBC1_app.c: 77: INTCONbits.PEIE = 1;
  1862  01DD  170B               	bsf	11,6	;volatile
  1863  01DE                     l1983:	
  1864                           ;OBC1_app.c: 79: while(uart_interrupt!=2){
  1865                           
  1866  01DE  3002               	movlw	2
  1867  01DF  0679               	xorwf	_uart_interrupt,w
  1868  01E0  047A               	iorwf	_uart_interrupt+1,w
  1869  01E1  1903               	btfsc	3,2
  1870  01E2  2A04               	goto	l1985
  1871                           
  1872                           ;OBC1_app.c: 80: PORTDbits.RD6 = 1;
  1873  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1874  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1875  01E5  1708               	bsf	8,6	;volatile
  1876                           
  1877                           ;OBC1_app.c: 81: _delay((unsigned long)((40)*(20000000/4000.0)));
  1878  01E6  3002               	movlw	2
  1879  01E7  00BF               	movwf	??_command+2
  1880  01E8  3004               	movlw	4
  1881  01E9  00BE               	movwf	??_command+1
  1882  01EA  30BA               	movlw	186
  1883  01EB  00BD               	movwf	??_command
  1884  01EC                     u1727:	
  1885  01EC  0BBD               	decfsz	??_command,f
  1886  01ED  29EC               	goto	u1727
  1887  01EE  0BBE               	decfsz	??_command+1,f
  1888  01EF  29EC               	goto	u1727
  1889  01F0  0BBF               	decfsz	??_command+2,f
  1890  01F1  29EC               	goto	u1727
  1891  01F2  0000               	nop
  1892                           
  1893                           ;OBC1_app.c: 82: PORTDbits.RD6 = 0;
  1894  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1895  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1896  01F5  1308               	bcf	8,6	;volatile
  1897                           
  1898                           ;OBC1_app.c: 83: _delay((unsigned long)((40)*(20000000/4000.0)));
  1899  01F6  3002               	movlw	2
  1900  01F7  00BF               	movwf	??_command+2
  1901  01F8  3004               	movlw	4
  1902  01F9  00BE               	movwf	??_command+1
  1903  01FA  30BA               	movlw	186
  1904  01FB  00BD               	movwf	??_command
  1905  01FC                     u1737:	
  1906  01FC  0BBD               	decfsz	??_command,f
  1907  01FD  29FC               	goto	u1737
  1908  01FE  0BBE               	decfsz	??_command+1,f
  1909  01FF  29FC               	goto	u1737
  1910  0200  0BBF               	decfsz	??_command+2,f
  1911  0201  29FC               	goto	u1737
  1912  0202  0000               	nop
  1913  0203  29DE               	goto	l1983
  1914  0204                     l1985:	
  1915                           
  1916                           ;OBC1_app.c: 84: }
  1917                           ;OBC1_app.c: 85: uart_interrupt = 0;
  1918  0204  01F9               	clrf	_uart_interrupt
  1919  0205  01FA               	clrf	_uart_interrupt+1
  1920                           
  1921                           ;OBC1_app.c: 86: PIE1bits.RCIE = 0;
  1922  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1924  0208  128C               	bcf	12,5	;volatile
  1925                           
  1926                           ;OBC1_app.c: 87: INTCONbits.GIE = 0;
  1927  0209  138B               	bcf	11,7	;volatile
  1928                           
  1929                           ;OBC1_app.c: 88: INTCONbits.PEIE = 0;
  1930  020A  130B               	bcf	11,6	;volatile
  1931                           
  1932                           ;OBC1_app.c: 89: sent_data_set(I2CTEMP_data, 2, 1);
  1933  020B  305A               	movlw	(low (_I2CTEMP_data| 0))& (0+255)
  1934  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1935  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1936  020E  00B4               	movwf	sent_data_set@p_data
  1937  020F  3000               	movlw	0
  1938  0210  00B5               	movwf	sent_data_set@p_data+1
  1939  0211  3002               	movlw	2
  1940  0212  00BD               	movwf	??_command
  1941  0213  083D               	movf	??_command,w
  1942  0214  00B6               	movwf	sent_data_set@data_len
  1943  0215  01B7               	clrf	sent_data_set@byte_of_data
  1944  0216  0AB7               	incf	sent_data_set@byte_of_data,f
  1945  0217  120A  118A  24CE   	fcall	_sent_data_set
  1946                           
  1947                           ;OBC1_app.c: 94: }
  1948                           
  1949                           ;OBC1_app.c: 93: break;
  1950  021A  0008               	return
  1951  021B                     l1997:	
  1952  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1953  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1954  021D  0840               	movf	command@data,w
  1955                           
  1956                           ; Switch size 1, requested type "space"
  1957                           ; Number of cases is 3, Range of values is 1 to 3
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte           10     6 (average)
  1961                           ; direct_byte           20    11 (fixed)
  1962                           ; jumptable            263     9 (fixed)
  1963                           ;	Chosen strategy is simple_byte
  1964  021E  3A01               	xorlw	1	; case 1
  1965  021F  1903               	skipnz
  1966  0220  2997               	goto	l402
  1967  0221  3A03               	xorlw	3	; case 2
  1968  0222  1903               	skipnz
  1969  0223  29D3               	goto	l1971
  1970  0224  3A01               	xorlw	1	; case 3
  1971  0225  1903               	skipnz
  1972  0226  2973               	goto	l1959
  1973  0227  2A28               	goto	l407
  1974  0228                     l407:	
  1975  0228  0008               	return
  1976  0229                     __end_of_command:	
  1977                           
  1978                           	psect	text4
  1979  0EFE                     __ptext4:	
  1980 ;; *************** function _send_data_master *****************
  1981 ;; Defined at:
  1982 ;;		line 217 in file "system_protocol.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  destination     1    wreg     enum E1099
  1985 ;;  data_type       1   15[BANK0 ] enum E1104
  1986 ;;  data_end_com    1   16[BANK0 ] enum E1108
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  destination     1   18[BANK0 ] enum E1099
  1989 ;; Return value:  Size  Location     Type
  1990 ;;		None               void
  1991 ;; Registers used:
  1992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       2       0       0       0
  1999 ;;      Locals:         0       1       0       0       0
  2000 ;;      Temps:          0       1       0       0       0
  2001 ;;      Totals:         0       4       0       0       0
  2002 ;;Total ram usage:        4 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    5
  2005 ;; This function calls:
  2006 ;;		_packet_send_master
  2007 ;; This function is called by:
  2008 ;;		_command
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _send_data_master
  2014  0EFE                     _send_data_master:	
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2018                           ;send_data_master@destination stored from wreg
  2019  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0F00  00B2               	movwf	send_data_master@destination
  2022                           
  2023                           ;system_protocol.c: 219: packet.data_type = (uint8_t)data_type;
  2024  0F01  082F               	movf	send_data_master@data_type,w
  2025  0F02  00B1               	movwf	??_send_data_master
  2026  0F03  0831               	movf	??_send_data_master,w
  2027  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0F06  00A0               	movwf	_packet^(0+128)
  2030                           
  2031                           ;system_protocol.c: 220: packet.data_end_command = (uint8_t)data_end_command;
  2032  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0F09  0830               	movf	send_data_master@data_end_command,w
  2035  0F0A  00B1               	movwf	??_send_data_master
  2036  0F0B  0831               	movf	??_send_data_master,w
  2037  0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0F0E  00BF               	movwf	(_packet^(0+128)+31)
  2040                           
  2041                           ;system_protocol.c: 221: packet_send_master(destination, &packet);
  2042  0F0F  30A0               	movlw	(low (_packet| 0))& (0+255)
  2043  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0F12  00B1               	movwf	??_send_data_master
  2046  0F13  0831               	movf	??_send_data_master,w
  2047  0F14  00AC               	movwf	packet_send_master@p_packet
  2048  0F15  0832               	movf	send_data_master@destination,w
  2049  0F16  120A  118A  27A7   	fcall	_packet_send_master
  2050  0F19  0008               	return
  2051  0F1A                     __end_of_send_data_master:	
  2052                           
  2053                           	psect	text5
  2054  07A7                     __ptext5:	
  2055 ;; *************** function _packet_send_master *****************
  2056 ;; Defined at:
  2057 ;;		line 462 in file "system_protocol.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  destination     1    wreg     enum E1099
  2060 ;;  p_packet        1   12[BANK0 ] PTR struct .
  2061 ;;		 -> packet(32), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  destination     1   14[BANK0 ] enum E1099
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       1       0       0       0
  2074 ;;      Locals:         0       1       0       0       0
  2075 ;;      Temps:          0       1       0       0       0
  2076 ;;      Totals:         0       3       0       0       0
  2077 ;;Total ram usage:        3 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    4
  2080 ;; This function calls:
  2081 ;;		_send_payload
  2082 ;;		_spi_master_send
  2083 ;; This function is called by:
  2084 ;;		_send_data_master
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _packet_send_master
  2090  07A7                     _packet_send_master:	
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2094                           ;packet_send_master@destination stored from wreg
  2095  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2096  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2097  07A9  00AE               	movwf	packet_send_master@destination
  2098                           
  2099                           ;system_protocol.c: 465: spi_master_send(destination, 0x01);
  2100  07AA  01A0               	clrf	spi_master_send@data
  2101  07AB  0AA0               	incf	spi_master_send@data,f
  2102  07AC  082E               	movf	packet_send_master@destination,w
  2103  07AD  120A  118A  2590  120A  118A  	fcall	_spi_master_send
  2104                           
  2105                           ;system_protocol.c: 468: spi_master_send(destination, &p_packet->data_type);
  2106  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2107  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2108  07B4  082C               	movf	packet_send_master@p_packet,w
  2109  07B5  00AD               	movwf	??_packet_send_master
  2110  07B6  082D               	movf	??_packet_send_master,w
  2111  07B7  00A0               	movwf	spi_master_send@data
  2112  07B8  082E               	movf	packet_send_master@destination,w
  2113  07B9  120A  118A  2590  120A  118A  	fcall	_spi_master_send
  2114                           
  2115                           ;system_protocol.c: 471: send_payload(destination, &p_packet->payload);
  2116  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2117  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  2118  07C0  082C               	movf	packet_send_master@p_packet,w
  2119  07C1  3E01               	addlw	1
  2120  07C2  00AD               	movwf	??_packet_send_master
  2121  07C3  082D               	movf	??_packet_send_master,w
  2122  07C4  00A6               	movwf	send_payload@p_payload
  2123  07C5  082E               	movf	packet_send_master@destination,w
  2124  07C6  120A  118A  262C  120A  118A  	fcall	_send_payload
  2125                           
  2126                           ;system_protocol.c: 474: spi_master_send(destination, &p_packet->data_end_command);
  2127  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  2128  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  2129  07CD  082C               	movf	packet_send_master@p_packet,w
  2130  07CE  3E1F               	addlw	31
  2131  07CF  00AD               	movwf	??_packet_send_master
  2132  07D0  082D               	movf	??_packet_send_master,w
  2133  07D1  00A0               	movwf	spi_master_send@data
  2134  07D2  082E               	movf	packet_send_master@destination,w
  2135  07D3  120A  118A  2590   	fcall	_spi_master_send
  2136  07D6  0008               	return
  2137  07D7                     __end_of_packet_send_master:	
  2138                           
  2139                           	psect	text6
  2140  062C                     __ptext6:	
  2141 ;; *************** function _send_payload *****************
  2142 ;; Defined at:
  2143 ;;		line 394 in file "system_protocol.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  destination     1    wreg     enum E1099
  2146 ;;  p_payload       1    6[BANK0 ] PTR unsigned char 
  2147 ;;		 -> packet(32), 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  destination     1   11[BANK0 ] enum E1099
  2150 ;;  index_pos       1   10[BANK0 ] unsigned char 
  2151 ;;  i               1    9[BANK0 ] unsigned char 
  2152 ;;  data_len        1    8[BANK0 ] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      unsigned char 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       1       0       0       0
  2163 ;;      Locals:         0       4       0       0       0
  2164 ;;      Temps:          0       1       0       0       0
  2165 ;;      Totals:         0       6       0       0       0
  2166 ;;Total ram usage:        6 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    3
  2169 ;; This function calls:
  2170 ;;		_spi_master_send
  2171 ;; This function is called by:
  2172 ;;		_packet_send_master
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _send_payload
  2178  062C                     _send_payload:	
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2182                           ;send_payload@destination stored from wreg
  2183  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2184  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2185  062E  00AB               	movwf	send_payload@destination
  2186                           
  2187                           ;system_protocol.c: 396: uint8_t i;
  2188                           ;system_protocol.c: 397: uint8_t data_len;
  2189                           ;system_protocol.c: 398: uint8_t index_pos = 0;
  2190  062F  01AA               	clrf	send_payload@index_pos
  2191  0630                     l1767:	
  2192                           ;system_protocol.c: 401: while(*p_payload != 0x00 || index_pos < 30)
  2193                           
  2194  0630  0826               	movf	send_payload@p_payload,w
  2195  0631  0084               	movwf	4
  2196  0632  1383               	bcf	3,7	;select IRP bank0
  2197  0633  0800               	movf	0,w
  2198  0634  1903               	btfsc	3,2
  2199  0635  2E6F               	goto	l1769
  2200  0636                     l1747:	
  2201                           
  2202                           ;system_protocol.c: 402: {
  2203                           ;system_protocol.c: 403: data_len = *p_payload;
  2204  0636  0826               	movf	send_payload@p_payload,w
  2205  0637  0084               	movwf	4
  2206  0638  1383               	bcf	3,7	;select IRP bank0
  2207  0639  0800               	movf	0,w
  2208  063A  00A7               	movwf	??_send_payload
  2209  063B  0827               	movf	??_send_payload,w
  2210  063C  00A8               	movwf	send_payload@data_len
  2211                           
  2212                           ;system_protocol.c: 404: spi_master_send(destination, p_payload++);
  2213  063D  0826               	movf	send_payload@p_payload,w
  2214  063E  00A7               	movwf	??_send_payload
  2215  063F  0827               	movf	??_send_payload,w
  2216  0640  00A0               	movwf	spi_master_send@data
  2217  0641  082B               	movf	send_payload@destination,w
  2218  0642  120A  118A  2590  120A  118A  	fcall	_spi_master_send
  2219  0647  3001               	movlw	1
  2220  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2222  064A  00A7               	movwf	??_send_payload
  2223  064B  0827               	movf	??_send_payload,w
  2224  064C  07A6               	addwf	send_payload@p_payload,f
  2225                           
  2226                           ;system_protocol.c: 405: index_pos++;
  2227  064D  3001               	movlw	1
  2228  064E  00A7               	movwf	??_send_payload
  2229  064F  0827               	movf	??_send_payload,w
  2230  0650  07AA               	addwf	send_payload@index_pos,f
  2231                           
  2232                           ;system_protocol.c: 406: for(i = 0; i < data_len; i++)
  2233  0651  01A9               	clrf	send_payload@i
  2234  0652                     l1765:	
  2235  0652  0828               	movf	send_payload@data_len,w
  2236  0653  0229               	subwf	send_payload@i,w
  2237  0654  1803               	btfsc	3,0
  2238  0655  2E30               	goto	l1767
  2239                           
  2240                           ;system_protocol.c: 407: {
  2241                           ;system_protocol.c: 408: spi_master_send(destination, p_payload++);
  2242  0656  0826               	movf	send_payload@p_payload,w
  2243  0657  00A7               	movwf	??_send_payload
  2244  0658  0827               	movf	??_send_payload,w
  2245  0659  00A0               	movwf	spi_master_send@data
  2246  065A  082B               	movf	send_payload@destination,w
  2247  065B  120A  118A  2590  120A  118A  	fcall	_spi_master_send
  2248  0660  3001               	movlw	1
  2249  0661  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0662  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0663  00A7               	movwf	??_send_payload
  2252  0664  0827               	movf	??_send_payload,w
  2253  0665  07A6               	addwf	send_payload@p_payload,f
  2254                           
  2255                           ;system_protocol.c: 409: index_pos++;
  2256  0666  3001               	movlw	1
  2257  0667  00A7               	movwf	??_send_payload
  2258  0668  0827               	movf	??_send_payload,w
  2259  0669  07AA               	addwf	send_payload@index_pos,f
  2260  066A  3001               	movlw	1
  2261  066B  00A7               	movwf	??_send_payload
  2262  066C  0827               	movf	??_send_payload,w
  2263  066D  07A9               	addwf	send_payload@i,f
  2264  066E  2E52               	goto	l1765
  2265  066F                     l1769:	
  2266  066F  301E               	movlw	30
  2267  0670  022A               	subwf	send_payload@index_pos,w
  2268  0671  1803               	btfsc	3,0
  2269  0672  0008               	return
  2270  0673  2E36               	goto	l1747
  2271  0674                     __end_of_send_payload:	
  2272                           ;system_protocol.c: 410: }
  2273                           ;system_protocol.c: 411: }
  2274                           ;system_protocol.c: 413: return index_pos;
  2275                           ;	Return value of _send_payload is never used
  2276                           
  2277                           
  2278                           	psect	text7
  2279  0590                     __ptext7:	
  2280 ;; *************** function _spi_master_send *****************
  2281 ;; Defined at:
  2282 ;;		line 154 in file "spi_master.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  destination     1    wreg     enum E1099
  2285 ;;  data            1    0[BANK0 ] unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  destination     1    5[BANK0 ] enum E1099
  2288 ;;  timeout_coun    2    3[BANK0 ] unsigned int 
  2289 ;;  dummy           1    2[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;		None               void
  2292 ;; Registers used:
  2293 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         0       1       0       0       0
  2300 ;;      Locals:         0       4       0       0       0
  2301 ;;      Temps:          0       1       0       0       0
  2302 ;;      Totals:         0       6       0       0       0
  2303 ;;Total ram usage:        6 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_send_payload
  2310 ;;		_packet_send_master
  2311 ;;		_command
  2312 ;;		_COM_status
  2313 ;;		_POW_status
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _spi_master_send
  2319  0590                     _spi_master_send:	
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  2323                           ;spi_master_send@destination stored from wreg
  2324  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0592  00A5               	movwf	spi_master_send@destination
  2327                           
  2328                           ;spi_master.c: 156: uint8_t dummy;
  2329                           ;spi_master.c: 157: uint16_t timeout_counter = 1000;
  2330  0593  30E8               	movlw	232
  2331  0594  00A3               	movwf	spi_master_send@timeout_counter
  2332  0595  3003               	movlw	3
  2333  0596  00A4               	movwf	spi_master_send@timeout_counter+1
  2334                           
  2335                           ;spi_master.c: 160: dummy = SSPBUF;
  2336  0597  0813               	movf	19,w	;volatile
  2337  0598  00A1               	movwf	??_spi_master_send
  2338  0599  0821               	movf	??_spi_master_send,w
  2339  059A  00A2               	movwf	spi_master_send@dummy
  2340                           
  2341                           ;spi_master.c: 163: switch(destination)
  2342  059B  2DA2               	goto	l1639
  2343  059C                     l136:	
  2344                           ;spi_master.c: 166: while(PORTDbits.RD0 == 0){;}
  2345                           
  2346                           ;spi_master.c: 164: {
  2347                           ;spi_master.c: 165: case COM:
  2348                           
  2349  059C  1808               	btfsc	8,0	;volatile
  2350  059D  2DAF               	goto	l1643
  2351  059E  2D9C               	goto	l136
  2352  059F                     l141:	
  2353                           ;spi_master.c: 170: while(PORTDbits.RD1 == 0){;}
  2354                           
  2355                           ;spi_master.c: 168: case POW:
  2356                           
  2357                           ;spi_master.c: 167: break;
  2358                           
  2359  059F  1888               	btfsc	8,1	;volatile
  2360  05A0  2DAF               	goto	l1643
  2361  05A1  2D9F               	goto	l141
  2362  05A2                     l1639:	
  2363                           ;spi_master.c: 172: }
  2364                           
  2365                           ;spi_master.c: 171: break;
  2366                           
  2367  05A2  0825               	movf	spi_master_send@destination,w
  2368                           
  2369                           ; Switch size 1, requested type "space"
  2370                           ; Number of cases is 2, Range of values is 3 to 4
  2371                           ; switch strategies available:
  2372                           ; Name         Instructions Cycles
  2373                           ; simple_byte            7     4 (average)
  2374                           ; direct_byte           17    11 (fixed)
  2375                           ; jumptable            263     9 (fixed)
  2376                           ;	Chosen strategy is simple_byte
  2377  05A3  3A03               	xorlw	3	; case 3
  2378  05A4  1903               	skipnz
  2379  05A5  2D9C               	goto	l136
  2380  05A6  3A07               	xorlw	7	; case 4
  2381  05A7  1903               	skipnz
  2382  05A8  2D9F               	goto	l141
  2383  05A9  2DAF               	goto	l1643
  2384                           
  2385                           ;spi_master.c: 175: switch(destination)
  2386  05AA  2DAF               	goto	l1643
  2387  05AB                     l145:	
  2388                           ;spi_master.c: 176: {
  2389                           ;spi_master.c: 177: case COM:
  2390                           
  2391                           
  2392                           ;spi_master.c: 178: PORTCbits.RC0 = 0;
  2393  05AB  1007               	bcf	7,0	;volatile
  2394                           
  2395                           ;spi_master.c: 179: break;
  2396  05AC  2DB7               	goto	l1645
  2397  05AD                     l147:	
  2398                           ;spi_master.c: 180: case POW:
  2399                           
  2400                           
  2401                           ;spi_master.c: 181: PORTCbits.RC1 = 0;
  2402  05AD  1087               	bcf	7,1	;volatile
  2403                           
  2404                           ;spi_master.c: 183: }
  2405                           
  2406                           ;spi_master.c: 182: break;
  2407  05AE  2DB7               	goto	l1645
  2408  05AF                     l1643:	
  2409  05AF  0825               	movf	spi_master_send@destination,w
  2410                           
  2411                           ; Switch size 1, requested type "space"
  2412                           ; Number of cases is 2, Range of values is 3 to 4
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte            7     4 (average)
  2416                           ; direct_byte           17    11 (fixed)
  2417                           ; jumptable            263     9 (fixed)
  2418                           ;	Chosen strategy is simple_byte
  2419  05B0  3A03               	xorlw	3	; case 3
  2420  05B1  1903               	skipnz
  2421  05B2  2DAB               	goto	l145
  2422  05B3  3A07               	xorlw	7	; case 4
  2423  05B4  1903               	skipnz
  2424  05B5  2DAD               	goto	l147
  2425  05B6  2DB7               	goto	l1645
  2426  05B7                     l1645:	
  2427                           
  2428                           ;spi_master.c: 186: SSPBUF = data;
  2429  05B7  0820               	movf	spi_master_send@data,w
  2430  05B8  0093               	movwf	19	;volatile
  2431  05B9                     l1653:	
  2432                           ;spi_master.c: 189: while(SSPSTATbits.BF == 0)
  2433                           
  2434  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  2435  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  2436  05BB  1814               	btfsc	20,0	;volatile
  2437  05BC  2DD2               	goto	l1657
  2438                           
  2439                           ;spi_master.c: 190: {
  2440                           ;spi_master.c: 192: if(timeout_counter == 0)
  2441  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2442  05BE  0823               	movf	spi_master_send@timeout_counter,w
  2443  05BF  0424               	iorwf	spi_master_send@timeout_counter+1,w
  2444  05C0  1903               	btfsc	3,2
  2445  05C1  0008               	return
  2446                           
  2447                           ;spi_master.c: 195: }
  2448                           ;spi_master.c: 198: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2449                           
  2450                           ;spi_master.c: 193: {
  2451                           ;spi_master.c: 194: return;
  2452  05C2  2DC3               	nop2	;2 cycle nop
  2453  05C3  2DC4               	nop2	;2 cycle nop
  2454  05C4  0000               	nop
  2455                           
  2456                           ;spi_master.c: 199: timeout_counter--;
  2457  05C5  3001               	movlw	1
  2458  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2459  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2460  05C8  02A3               	subwf	spi_master_send@timeout_counter,f
  2461  05C9  3000               	movlw	0
  2462  05CA  1C03               	skipc
  2463  05CB  03A4               	decf	spi_master_send@timeout_counter+1,f
  2464  05CC  02A4               	subwf	spi_master_send@timeout_counter+1,f
  2465  05CD  2DB9               	goto	l1653
  2466  05CE                     l154:	
  2467                           ;spi_master.c: 204: {
  2468                           ;spi_master.c: 205: case COM:
  2469                           
  2470                           ;spi_master.c: 200: }
  2471                           ;spi_master.c: 203: switch(destination)
  2472                           
  2473                           
  2474                           ;spi_master.c: 206: PORTCbits.RC0 = 1;
  2475  05CE  1407               	bsf	7,0	;volatile
  2476                           
  2477                           ;spi_master.c: 207: break;
  2478  05CF  2DDB               	goto	l1659
  2479  05D0                     l156:	
  2480                           ;spi_master.c: 208: case POW:
  2481                           
  2482                           
  2483                           ;spi_master.c: 209: PORTCbits.RC1 = 1;
  2484  05D0  1487               	bsf	7,1	;volatile
  2485                           
  2486                           ;spi_master.c: 211: }
  2487                           
  2488                           ;spi_master.c: 210: break;
  2489  05D1  2DDB               	goto	l1659
  2490  05D2                     l1657:	
  2491  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2492  05D3  0825               	movf	spi_master_send@destination,w
  2493                           
  2494                           ; Switch size 1, requested type "space"
  2495                           ; Number of cases is 2, Range of values is 3 to 4
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte            7     4 (average)
  2499                           ; direct_byte           17    11 (fixed)
  2500                           ; jumptable            263     9 (fixed)
  2501                           ;	Chosen strategy is simple_byte
  2502  05D4  3A03               	xorlw	3	; case 3
  2503  05D5  1903               	skipnz
  2504  05D6  2DCE               	goto	l154
  2505  05D7  3A07               	xorlw	7	; case 4
  2506  05D8  1903               	skipnz
  2507  05D9  2DD0               	goto	l156
  2508  05DA  2DDB               	goto	l1659
  2509  05DB                     l1659:	
  2510                           
  2511                           ;spi_master.c: 214: dummy = SSPBUF;
  2512  05DB  0813               	movf	19,w	;volatile
  2513  05DC  00A1               	movwf	??_spi_master_send
  2514  05DD  0821               	movf	??_spi_master_send,w
  2515  05DE  00A2               	movwf	spi_master_send@dummy
  2516  05DF  0008               	return
  2517  05E0                     __end_of_spi_master_send:	
  2518                           
  2519                           	psect	text8
  2520  0EB5                     __ptext8:	
  2521 ;; *************** function _putch *****************
  2522 ;; Defined at:
  2523 ;;		line 53 in file "uart_serial.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  byte            1    wreg     unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  byte            1    0[BANK0 ] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         0       0       0       0       0
  2538 ;;      Locals:         0       1       0       0       0
  2539 ;;      Temps:          0       0       0       0       0
  2540 ;;      Totals:         0       1       0       0       0
  2541 ;;Total ram usage:        1 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_command
  2548 ;;		_put_string
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _putch
  2554  0EB5                     _putch:	
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _putch: [wreg]
  2558                           ;putch@byte stored from wreg
  2559  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0EB7  00A0               	movwf	putch@byte
  2562  0EB8                     l193:	
  2563                           ;uart_serial.c: 56: {
  2564                           ;uart_serial.c: 57: ;
  2565                           
  2566                           ;uart_serial.c: 55: while(!TXIF)
  2567                           
  2568  0EB8  1E0C               	btfss	12,4	;volatile
  2569  0EB9  2EB8               	goto	l193
  2570                           
  2571                           ;uart_serial.c: 58: }
  2572                           ;uart_serial.c: 59: TXREG = byte;
  2573  0EBA  0820               	movf	putch@byte,w
  2574  0EBB  0099               	movwf	25	;volatile
  2575  0EBC  0008               	return
  2576  0EBD                     __end_of_putch:	
  2577                           
  2578                           	psect	text9
  2579  036D                     __ptext9:	
  2580 ;; *************** function _get_cw_data *****************
  2581 ;; Defined at:
  2582 ;;		line 94 in file "system_protocol.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  buf             2   14[BANK0 ] unsigned int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;		None               void
  2589 ;; Registers used:
  2590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         0       0       0       0       0
  2597 ;;      Locals:         0       2       0       0       0
  2598 ;;      Temps:          0       1       0       0       0
  2599 ;;      Totals:         0       3       0       0       0
  2600 ;;Total ram usage:        3 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    4
  2603 ;; This function calls:
  2604 ;;		_get_adcon
  2605 ;;		_spi_master_receive
  2606 ;;		_spi_master_start
  2607 ;; This function is called by:
  2608 ;;		_command
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _get_cw_data
  2614  036D                     _get_cw_data:	
  2615                           
  2616                           ;system_protocol.c: 96: uint16_t buf;
  2617                           ;system_protocol.c: 98: spi_master_start();
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2621  036D  120A  158A  271A  120A  118A  	fcall	_spi_master_start
  2622                           
  2623                           ;system_protocol.c: 99: cw.power1[0] = spi_master_receive(POW);
  2624  0372  3004               	movlw	4
  2625  0373  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2626  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2628  037A  00AD               	movwf	??_get_cw_data
  2629  037B  082D               	movf	??_get_cw_data,w
  2630  037C  00CD               	movwf	_cw
  2631                           
  2632                           ;system_protocol.c: 100: cw.power1[1] = spi_master_receive(POW);
  2633  037D  3004               	movlw	4
  2634  037E  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2635  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0385  00AD               	movwf	??_get_cw_data
  2638  0386  082D               	movf	??_get_cw_data,w
  2639  0387  00CE               	movwf	_cw+1
  2640                           
  2641                           ;system_protocol.c: 101: cw.power2[0] = spi_master_receive(POW);
  2642  0388  3004               	movlw	4
  2643  0389  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2644  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2645  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0390  00AD               	movwf	??_get_cw_data
  2647  0391  082D               	movf	??_get_cw_data,w
  2648  0392  00CF               	movwf	_cw+2
  2649                           
  2650                           ;system_protocol.c: 102: cw.power2[1] = spi_master_receive(POW);
  2651  0393  3004               	movlw	4
  2652  0394  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2653  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2654  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2655  039B  00AD               	movwf	??_get_cw_data
  2656  039C  082D               	movf	??_get_cw_data,w
  2657  039D  00D0               	movwf	_cw+3
  2658                           
  2659                           ;system_protocol.c: 103: cw.power3[0] = spi_master_receive(POW);
  2660  039E  3004               	movlw	4
  2661  039F  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2662  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2663  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2664  03A6  00AD               	movwf	??_get_cw_data
  2665  03A7  082D               	movf	??_get_cw_data,w
  2666  03A8  00D1               	movwf	_cw+4
  2667                           
  2668                           ;system_protocol.c: 104: cw.power3[1] = spi_master_receive(POW);
  2669  03A9  3004               	movlw	4
  2670  03AA  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2671  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2672  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2673  03B1  00AD               	movwf	??_get_cw_data
  2674  03B2  082D               	movf	??_get_cw_data,w
  2675  03B3  00D2               	movwf	_cw+5
  2676                           
  2677                           ;system_protocol.c: 105: cw.power4[0] = spi_master_receive(POW);
  2678  03B4  3004               	movlw	4
  2679  03B5  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2680  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2681  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2682  03BC  00AD               	movwf	??_get_cw_data
  2683  03BD  082D               	movf	??_get_cw_data,w
  2684  03BE  00D3               	movwf	_cw+6
  2685                           
  2686                           ;system_protocol.c: 106: cw.power4[1] = spi_master_receive(POW);
  2687  03BF  3004               	movlw	4
  2688  03C0  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2689  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2690  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2691  03C7  00AD               	movwf	??_get_cw_data
  2692  03C8  082D               	movf	??_get_cw_data,w
  2693  03C9  00D4               	movwf	_cw+7
  2694                           
  2695                           ;system_protocol.c: 107: cw.power5[0] = spi_master_receive(POW);
  2696  03CA  3004               	movlw	4
  2697  03CB  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2698  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2699  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2700  03D2  00AD               	movwf	??_get_cw_data
  2701  03D3  082D               	movf	??_get_cw_data,w
  2702  03D4  00D5               	movwf	_cw+8
  2703                           
  2704                           ;system_protocol.c: 108: cw.power5[1] = spi_master_receive(POW);
  2705  03D5  3004               	movlw	4
  2706  03D6  120A  118A  25E0  120A  118A  	fcall	_spi_master_receive
  2707  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2708  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2709  03DD  00AD               	movwf	??_get_cw_data
  2710  03DE  082D               	movf	??_get_cw_data,w
  2711  03DF  00D6               	movwf	_cw+9
  2712                           
  2713                           ;system_protocol.c: 109: buf = get_adcon();
  2714  03E0  120A  118A  27D7   	fcall	_get_adcon
  2715  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2716  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2717  03E5  0827               	movf	?_get_adcon+1,w
  2718  03E6  00AF               	movwf	get_cw_data@buf+1
  2719  03E7  0826               	movf	?_get_adcon,w
  2720  03E8  00AE               	movwf	get_cw_data@buf
  2721                           
  2722                           ;system_protocol.c: 110: cw.temp[0] = (uint8_t)(buf >> 8);
  2723  03E9  082F               	movf	get_cw_data@buf+1,w
  2724  03EA  00AD               	movwf	??_get_cw_data
  2725  03EB  082D               	movf	??_get_cw_data,w
  2726  03EC  00D7               	movwf	_cw+10
  2727                           
  2728                           ;system_protocol.c: 111: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  2729  03ED  082E               	movf	get_cw_data@buf,w
  2730  03EE  00AD               	movwf	??_get_cw_data
  2731  03EF  082D               	movf	??_get_cw_data,w
  2732  03F0  00D8               	movwf	_cw+11
  2733                           
  2734                           ;system_protocol.c: 112: cw.obc2 = 1;
  2735  03F1  1459               	bsf	_cw+12,0
  2736                           
  2737                           ;system_protocol.c: 113: cw.powmcu = 1;
  2738  03F2  14D9               	bsf	_cw+12,1
  2739  03F3  0008               	return
  2740  03F4                     __end_of_get_cw_data:	
  2741                           
  2742                           	psect	text10
  2743  0F1A                     __ptext10:	
  2744 ;; *************** function _spi_master_start *****************
  2745 ;; Defined at:
  2746 ;;		line 36 in file "spi_master.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		None
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    2
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;;		_get_cw_data
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _spi_master_start
  2777  0F1A                     _spi_master_start:	
  2778                           
  2779                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in _spi_master_start: []
  2783  0F1A  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0F1B  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0F1C  1187               	bcf	7,3	;volatile
  2786                           
  2787                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  2788  0F1D  1287               	bcf	7,5	;volatile
  2789                           
  2790                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  2791  0F1E  1607               	bsf	7,4	;volatile
  2792                           
  2793                           ;spi_master.c: 44: TRISCbits.TRISC0 = 0;
  2794  0F1F  1007               	bcf	7,0	;volatile
  2795                           
  2796                           ;spi_master.c: 45: TRISCbits.TRISC1 = 0;
  2797  0F20  1087               	bcf	7,1	;volatile
  2798                           
  2799                           ;spi_master.c: 48: SSPCONbits.SSPEN = 0;
  2800  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0F23  1294               	bcf	20,5	;volatile
  2803                           
  2804                           ;spi_master.c: 51: SSPSTATbits.SMP = 0;
  2805  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0F26  1394               	bcf	20,7	;volatile
  2808                           
  2809                           ;spi_master.c: 52: SSPCONbits.CKP = 0;
  2810  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0F29  1214               	bcf	20,4	;volatile
  2813                           
  2814                           ;spi_master.c: 53: SSPSTATbits.CKE = 0;
  2815  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  2816  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  2817  0F2C  1314               	bcf	20,6	;volatile
  2818                           
  2819                           ;spi_master.c: 56: SSPCONbits.SSPM3 = 0;
  2820  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0F2F  1194               	bcf	20,3	;volatile
  2823                           
  2824                           ;spi_master.c: 57: SSPCONbits.SSPM2 = 0;
  2825  0F30  1114               	bcf	20,2	;volatile
  2826                           
  2827                           ;spi_master.c: 58: SSPCONbits.SSPM1 = 0;
  2828  0F31  1094               	bcf	20,1	;volatile
  2829                           
  2830                           ;spi_master.c: 59: SSPCONbits.SSPM0 = 0;
  2831  0F32  1014               	bcf	20,0	;volatile
  2832                           
  2833                           ;spi_master.c: 62: PORTCbits.RC0 = 1;
  2834  0F33  1407               	bsf	7,0	;volatile
  2835                           
  2836                           ;spi_master.c: 63: PORTCbits.RC1 = 1;
  2837  0F34  1487               	bsf	7,1	;volatile
  2838                           
  2839                           ;spi_master.c: 66: SSPCONbits.SSPEN = 1;
  2840  0F35  1694               	bsf	20,5	;volatile
  2841  0F36  0008               	return
  2842  0F37                     __end_of_spi_master_start:	
  2843                           
  2844                           	psect	text11
  2845  05E0                     __ptext11:	
  2846 ;; *************** function _spi_master_receive *****************
  2847 ;; Defined at:
  2848 ;;		line 80 in file "spi_master.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  destination     1    wreg     enum E1099
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  destination     1    4[BANK0 ] enum E1099
  2853 ;;  timeout_coun    2    2[BANK0 ] unsigned int 
  2854 ;;  dummy           1    1[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       4       0       0       0
  2866 ;;      Temps:          0       1       0       0       0
  2867 ;;      Totals:         0       5       0       0       0
  2868 ;;Total ram usage:        5 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    2
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_get_cw_data
  2875 ;;		_receive_payload
  2876 ;;		_packet_receive_master
  2877 ;;		_COM_status
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           
  2882                           ;psect for function _spi_master_receive
  2883  05E0                     _spi_master_receive:	
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  2887                           ;spi_master_receive@destination stored from wreg
  2888  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2889  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2890  05E2  00A4               	movwf	spi_master_receive@destination
  2891                           
  2892                           ;spi_master.c: 82: uint8_t dummy;
  2893                           ;spi_master.c: 83: uint16_t timeout_counter = 1000;
  2894  05E3  30E8               	movlw	232
  2895  05E4  00A2               	movwf	spi_master_receive@timeout_counter
  2896  05E5  3003               	movlw	3
  2897  05E6  00A3               	movwf	spi_master_receive@timeout_counter+1
  2898                           
  2899                           ;spi_master.c: 86: dummy = SSPBUF;
  2900  05E7  0813               	movf	19,w	;volatile
  2901  05E8  00A0               	movwf	??_spi_master_receive
  2902  05E9  0820               	movf	??_spi_master_receive,w
  2903  05EA  00A1               	movwf	spi_master_receive@dummy
  2904                           
  2905                           ;spi_master.c: 89: switch(destination)
  2906  05EB  2DF2               	goto	l1807
  2907  05EC                     l111:	
  2908                           ;spi_master.c: 92: while(PORTDbits.RD0 == 0){;}
  2909                           
  2910                           ;spi_master.c: 90: {
  2911                           ;spi_master.c: 91: case COM:
  2912                           
  2913  05EC  1808               	btfsc	8,0	;volatile
  2914  05ED  2DFF               	goto	l1811
  2915  05EE  2DEC               	goto	l111
  2916  05EF                     l116:	
  2917                           ;spi_master.c: 95: while(PORTDbits.RD1 == 0){;}
  2918                           
  2919                           ;spi_master.c: 94: case POW:
  2920                           
  2921                           ;spi_master.c: 93: break;
  2922                           
  2923  05EF  1888               	btfsc	8,1	;volatile
  2924  05F0  2DFF               	goto	l1811
  2925  05F1  2DEF               	goto	l116
  2926  05F2                     l1807:	
  2927                           ;spi_master.c: 97: }
  2928                           
  2929                           ;spi_master.c: 96: break;
  2930                           
  2931  05F2  0824               	movf	spi_master_receive@destination,w
  2932                           
  2933                           ; Switch size 1, requested type "space"
  2934                           ; Number of cases is 2, Range of values is 3 to 4
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte            7     4 (average)
  2938                           ; direct_byte           17    11 (fixed)
  2939                           ; jumptable            263     9 (fixed)
  2940                           ;	Chosen strategy is simple_byte
  2941  05F3  3A03               	xorlw	3	; case 3
  2942  05F4  1903               	skipnz
  2943  05F5  2DEC               	goto	l111
  2944  05F6  3A07               	xorlw	7	; case 4
  2945  05F7  1903               	skipnz
  2946  05F8  2DEF               	goto	l116
  2947  05F9  2DFF               	goto	l1811
  2948                           
  2949                           ;spi_master.c: 100: switch(destination)
  2950  05FA  2DFF               	goto	l1811
  2951  05FB                     l120:	
  2952                           ;spi_master.c: 101: {
  2953                           ;spi_master.c: 102: case COM:
  2954                           
  2955                           
  2956                           ;spi_master.c: 103: PORTCbits.RC0 = 0;
  2957  05FB  1007               	bcf	7,0	;volatile
  2958                           
  2959                           ;spi_master.c: 104: break;
  2960  05FC  2E07               	goto	l1813
  2961  05FD                     l122:	
  2962                           ;spi_master.c: 105: case POW:
  2963                           
  2964                           
  2965                           ;spi_master.c: 106: PORTCbits.RC1 = 0;
  2966  05FD  1087               	bcf	7,1	;volatile
  2967                           
  2968                           ;spi_master.c: 108: }
  2969                           
  2970                           ;spi_master.c: 107: break;
  2971  05FE  2E07               	goto	l1813
  2972  05FF                     l1811:	
  2973  05FF  0824               	movf	spi_master_receive@destination,w
  2974                           
  2975                           ; Switch size 1, requested type "space"
  2976                           ; Number of cases is 2, Range of values is 3 to 4
  2977                           ; switch strategies available:
  2978                           ; Name         Instructions Cycles
  2979                           ; simple_byte            7     4 (average)
  2980                           ; direct_byte           17    11 (fixed)
  2981                           ; jumptable            263     9 (fixed)
  2982                           ;	Chosen strategy is simple_byte
  2983  0600  3A03               	xorlw	3	; case 3
  2984  0601  1903               	skipnz
  2985  0602  2DFB               	goto	l120
  2986  0603  3A07               	xorlw	7	; case 4
  2987  0604  1903               	skipnz
  2988  0605  2DFD               	goto	l122
  2989  0606  2E07               	goto	l1813
  2990  0607                     l1813:	
  2991                           
  2992                           ;spi_master.c: 112: SSPBUF = 0x00;
  2993  0607  0193               	clrf	19	;volatile
  2994  0608                     l1821:	
  2995                           ;spi_master.c: 115: while(SSPSTATbits.BF == 0)
  2996                           
  2997  0608  1683               	bsf	3,5	;RP0=1, select bank1
  2998  0609  1303               	bcf	3,6	;RP1=0, select bank1
  2999  060A  1814               	btfsc	20,0	;volatile
  3000  060B  2E21               	goto	l1825
  3001                           
  3002                           ;spi_master.c: 116: {
  3003                           ;spi_master.c: 118: if(timeout_counter == 0)
  3004  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3005  060D  0822               	movf	spi_master_receive@timeout_counter,w
  3006  060E  0423               	iorwf	spi_master_receive@timeout_counter+1,w
  3007  060F  1903               	btfsc	3,2
  3008  0610  0008               	return
  3009                           
  3010                           ;spi_master.c: 121: }
  3011                           ;spi_master.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3012                           
  3013                           ;spi_master.c: 119: {
  3014                           ;spi_master.c: 120: return;
  3015  0611  2E12               	nop2	;2 cycle nop
  3016  0612  2E13               	nop2	;2 cycle nop
  3017  0613  0000               	nop
  3018                           
  3019                           ;spi_master.c: 125: timeout_counter--;
  3020  0614  3001               	movlw	1
  3021  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0617  02A2               	subwf	spi_master_receive@timeout_counter,f
  3024  0618  3000               	movlw	0
  3025  0619  1C03               	skipc
  3026  061A  03A3               	decf	spi_master_receive@timeout_counter+1,f
  3027  061B  02A3               	subwf	spi_master_receive@timeout_counter+1,f
  3028  061C  2E08               	goto	l1821
  3029  061D                     l129:	
  3030                           ;spi_master.c: 130: {
  3031                           ;spi_master.c: 131: case COM:
  3032                           
  3033                           ;spi_master.c: 126: }
  3034                           ;spi_master.c: 129: switch(destination)
  3035                           
  3036                           
  3037                           ;spi_master.c: 132: PORTCbits.RC0 = 1;
  3038  061D  1407               	bsf	7,0	;volatile
  3039                           
  3040                           ;spi_master.c: 133: break;
  3041  061E  2E2A               	goto	l1827
  3042  061F                     l131:	
  3043                           ;spi_master.c: 134: case POW:
  3044                           
  3045                           
  3046                           ;spi_master.c: 135: PORTCbits.RC1 = 1;
  3047  061F  1487               	bsf	7,1	;volatile
  3048                           
  3049                           ;spi_master.c: 137: }
  3050                           
  3051                           ;spi_master.c: 136: break;
  3052  0620  2E2A               	goto	l1827
  3053  0621                     l1825:	
  3054  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0622  0824               	movf	spi_master_receive@destination,w
  3056                           
  3057                           ; Switch size 1, requested type "space"
  3058                           ; Number of cases is 2, Range of values is 3 to 4
  3059                           ; switch strategies available:
  3060                           ; Name         Instructions Cycles
  3061                           ; simple_byte            7     4 (average)
  3062                           ; direct_byte           17    11 (fixed)
  3063                           ; jumptable            263     9 (fixed)
  3064                           ;	Chosen strategy is simple_byte
  3065  0623  3A03               	xorlw	3	; case 3
  3066  0624  1903               	skipnz
  3067  0625  2E1D               	goto	l129
  3068  0626  3A07               	xorlw	7	; case 4
  3069  0627  1903               	skipnz
  3070  0628  2E1F               	goto	l131
  3071  0629  2E2A               	goto	l1827
  3072  062A                     l1827:	
  3073                           
  3074                           ;spi_master.c: 139: return SSPBUF;
  3075  062A  0813               	movf	19,w	;volatile
  3076  062B  0008               	return
  3077  062C                     __end_of_spi_master_receive:	
  3078                           
  3079                           	psect	text12
  3080  07D7                     __ptext12:	
  3081 ;; *************** function _get_adcon *****************
  3082 ;; Defined at:
  3083 ;;		line 91 in file "AD_value.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  voltage_valu    3    0        unsigned char 
  3088 ;;  ad_value        2   11[BANK0 ] unsigned int 
  3089 ;;  my_adres        2    9[BANK0 ] struct .
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2    6[BANK0 ] unsigned int 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       2       0       0       0
  3100 ;;      Locals:         0       4       0       0       0
  3101 ;;      Temps:          0       1       0       0       0
  3102 ;;      Totals:         0       7       0       0       0
  3103 ;;Total ram usage:        7 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    3
  3106 ;; This function calls:
  3107 ;;		_bit_shift
  3108 ;; This function is called by:
  3109 ;;		_get_cw_data
  3110 ;;		_get_pt
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _get_adcon
  3116  07D7                     _get_adcon:	
  3117                           
  3118                           ;AD_value.c: 94: uint16_t ad_value = 0b0000000000;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3122  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  3123  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  3124  07D9  01AB               	clrf	get_adcon@ad_value
  3125  07DA  01AC               	clrf	get_adcon@ad_value+1
  3126                           
  3127                           ;AD_value.c: 95: double voltage_value;
  3128                           ;AD_value.c: 96: adres_t my_adres;
  3129                           ;AD_value.c: 99: ADCON0 = 0b10000001;
  3130  07DB  3081               	movlw	129
  3131  07DC  009F               	movwf	31	;volatile
  3132                           
  3133                           ;AD_value.c: 100: ADCON0bits.GO_DONE = 1;
  3134  07DD  151F               	bsf	31,2	;volatile
  3135  07DE                     l86:	
  3136                           ;AD_value.c: 103: while(ADCON0bits.GO_DONE){;}
  3137                           
  3138  07DE  191F               	btfsc	31,2	;volatile
  3139  07DF  2FDE               	goto	l86
  3140                           
  3141                           ;AD_value.c: 106: my_adres.my_adres_h = ADRESH;
  3142  07E0  081E               	movf	30,w	;volatile
  3143  07E1  00A8               	movwf	??_get_adcon
  3144  07E2  0828               	movf	??_get_adcon,w
  3145  07E3  00A9               	movwf	get_adcon@my_adres
  3146                           
  3147                           ;AD_value.c: 107: my_adres.my_adres_l = ADRESL;
  3148  07E4  1683               	bsf	3,5	;RP0=1, select bank1
  3149  07E5  1303               	bcf	3,6	;RP1=0, select bank1
  3150  07E6  081E               	movf	30,w	;volatile
  3151  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  3152  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  3153  07E9  00A8               	movwf	??_get_adcon
  3154  07EA  0828               	movf	??_get_adcon,w
  3155  07EB  00AA               	movwf	get_adcon@my_adres+1
  3156                           
  3157                           ;AD_value.c: 108: bit_shift(&ad_value, &my_adres);
  3158  07EC  3029               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  3159  07ED  00A8               	movwf	??_get_adcon
  3160  07EE  0828               	movf	??_get_adcon,w
  3161  07EF  00A0               	movwf	bit_shift@p_adres
  3162  07F0  302B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  3163  07F1  120A  118A  276E   	fcall	_bit_shift
  3164                           
  3165                           ;AD_value.c: 110: return ad_value;
  3166  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3167  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3168  07F6  082C               	movf	get_adcon@ad_value+1,w
  3169  07F7  00A7               	movwf	?_get_adcon+1
  3170  07F8  082B               	movf	get_adcon@ad_value,w
  3171  07F9  00A6               	movwf	?_get_adcon
  3172  07FA  0008               	return
  3173  07FB                     __end_of_get_adcon:	
  3174                           
  3175                           	psect	text13
  3176  076E                     __ptext13:	
  3177 ;; *************** function _bit_shift *****************
  3178 ;; Defined at:
  3179 ;;		line 71 in file "AD_value.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  p_ad_value      1    wreg     PTR unsigned int 
  3182 ;;		 -> get_adcon@ad_value(2), 
  3183 ;;  p_adres         1    0[BANK0 ] PTR struct .
  3184 ;;		 -> get_adcon@my_adres(2), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  p_ad_value      1    5[BANK0 ] PTR unsigned int 
  3187 ;;		 -> get_adcon@ad_value(2), 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;		None               void
  3190 ;; Registers used:
  3191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         0       1       0       0       0
  3198 ;;      Locals:         0       1       0       0       0
  3199 ;;      Temps:          0       4       0       0       0
  3200 ;;      Totals:         0       6       0       0       0
  3201 ;;Total ram usage:        6 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    2
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_get_adcon
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _bit_shift
  3213  076E                     _bit_shift:	
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  3217                           ;bit_shift@p_ad_value stored from wreg
  3218  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3219  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0770  00A5               	movwf	bit_shift@p_ad_value
  3221                           
  3222                           ;AD_value.c: 73: const uint8_t bit_mask_for_l = 0b00000011;
  3223                           ;AD_value.c: 75: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  3224  0771  0820               	movf	bit_shift@p_adres,w
  3225  0772  0084               	movwf	4
  3226  0773  1383               	bcf	3,7	;select IRP bank0
  3227  0774  0800               	movf	0,w
  3228  0775  00A1               	movwf	??_bit_shift
  3229  0776  01A2               	clrf	??_bit_shift+1
  3230  0777  0825               	movf	bit_shift@p_ad_value,w
  3231  0778  0084               	movwf	4
  3232  0779  0821               	movf	??_bit_shift,w
  3233  077A  0080               	movwf	0
  3234  077B  0A84               	incf	4,f
  3235  077C  0822               	movf	??_bit_shift+1,w
  3236  077D  0080               	movwf	0
  3237                           
  3238                           ;AD_value.c: 76: *p_ad_value <<= 2;
  3239  077E  0825               	movf	bit_shift@p_ad_value,w
  3240  077F  0084               	movwf	4
  3241  0780  3002               	movlw	2
  3242  0781                     u925:	
  3243  0781  1003               	clrc
  3244  0782  0D80               	rlf	0,f
  3245  0783  0A84               	incf	4,f
  3246  0784  0D80               	rlf	0,f
  3247  0785  0384               	decf	4,f
  3248  0786  3EFF               	addlw	-1
  3249  0787  1D03               	skipz
  3250  0788  2F81               	goto	u925
  3251                           
  3252                           ;AD_value.c: 77: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  3253  0789  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  3254  078A  0084               	movwf	4
  3255  078B  120A  158A  2000  120A  118A  	fcall	stringdir
  3256  0790  00A1               	movwf	??_bit_shift
  3257  0791  0A20               	incf	bit_shift@p_adres,w
  3258  0792  0084               	movwf	4
  3259  0793  0800               	movf	0,w
  3260  0794  00A2               	movwf	??_bit_shift+1
  3261  0795  3006               	movlw	6
  3262  0796                     u935:	
  3263  0796  1003               	clrc
  3264  0797  0CA2               	rrf	??_bit_shift+1,f
  3265  0798  3EFF               	addlw	-1
  3266  0799  1D03               	skipz
  3267  079A  2F96               	goto	u935
  3268  079B  0822               	movf	??_bit_shift+1,w
  3269  079C  0521               	andwf	??_bit_shift,w
  3270  079D  00A3               	movwf	??_bit_shift+2
  3271  079E  01A4               	clrf	??_bit_shift+3
  3272  079F  0825               	movf	bit_shift@p_ad_value,w
  3273  07A0  0084               	movwf	4
  3274  07A1  0823               	movf	??_bit_shift+2,w
  3275  07A2  0480               	iorwf	0,f
  3276  07A3  0A84               	incf	4,f
  3277  07A4  0824               	movf	??_bit_shift+3,w
  3278  07A5  0480               	iorwf	0,f
  3279  07A6  0008               	return
  3280  07A7                     __end_of_bit_shift:	
  3281                           
  3282                           	psect	text14
  3283  02E1                     __ptext14:	
  3284 ;; *************** function _cw_data_set *****************
  3285 ;; Defined at:
  3286 ;;		line 180 in file "system_protocol.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  p_cw_data       1    wreg     PTR struct .
  3289 ;;		 -> cw(13), 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  p_cw_data       1    5[BANK0 ] PTR struct .
  3292 ;;		 -> cw(13), 
  3293 ;;  i               1    0        unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         0       1       0       0       0
  3305 ;;      Temps:          0       1       0       0       0
  3306 ;;      Totals:         0       2       0       0       0
  3307 ;;Total ram usage:        2 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    3
  3310 ;; This function calls:
  3311 ;;		_uint8_data_set
  3312 ;; This function is called by:
  3313 ;;		_command
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _cw_data_set
  3319  02E1                     _cw_data_set:	
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3323                           ;cw_data_set@p_cw_data stored from wreg
  3324  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3325  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3326  02E3  00A5               	movwf	cw_data_set@p_cw_data
  3327                           
  3328                           ;system_protocol.c: 182: uint8_t i;
  3329                           ;system_protocol.c: 185: uint8_data_set(&(p_cw_data->power1), 2);
  3330  02E4  0825               	movf	cw_data_set@p_cw_data,w
  3331  02E5  00A0               	movwf	uint8_data_set@p_data
  3332  02E6  3000               	movlw	0
  3333  02E7  00A1               	movwf	uint8_data_set@p_data+1
  3334  02E8  3002               	movlw	2
  3335  02E9  00A4               	movwf	??_cw_data_set
  3336  02EA  0824               	movf	??_cw_data_set,w
  3337  02EB  00A2               	movwf	uint8_data_set@data_len
  3338  02EC  120A  158A  2779  120A  118A  	fcall	_uint8_data_set
  3339                           
  3340                           ;system_protocol.c: 186: uint8_data_set(&(p_cw_data->power2), 2);
  3341  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3342  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3343  02F3  0825               	movf	cw_data_set@p_cw_data,w
  3344  02F4  3E02               	addlw	2
  3345  02F5  00A0               	movwf	uint8_data_set@p_data
  3346  02F6  3000               	movlw	0
  3347  02F7  00A1               	movwf	uint8_data_set@p_data+1
  3348  02F8  3002               	movlw	2
  3349  02F9  00A4               	movwf	??_cw_data_set
  3350  02FA  0824               	movf	??_cw_data_set,w
  3351  02FB  00A2               	movwf	uint8_data_set@data_len
  3352  02FC  120A  158A  2779  120A  118A  	fcall	_uint8_data_set
  3353                           
  3354                           ;system_protocol.c: 187: uint8_data_set(&(p_cw_data->power3), 2);
  3355  0301  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0302  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0303  0825               	movf	cw_data_set@p_cw_data,w
  3358  0304  3E04               	addlw	4
  3359  0305  00A0               	movwf	uint8_data_set@p_data
  3360  0306  3000               	movlw	0
  3361  0307  00A1               	movwf	uint8_data_set@p_data+1
  3362  0308  3002               	movlw	2
  3363  0309  00A4               	movwf	??_cw_data_set
  3364  030A  0824               	movf	??_cw_data_set,w
  3365  030B  00A2               	movwf	uint8_data_set@data_len
  3366  030C  120A  158A  2779  120A  118A  	fcall	_uint8_data_set
  3367                           
  3368                           ;system_protocol.c: 188: uint8_data_set(&(p_cw_data->power4), 2);
  3369  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0313  0825               	movf	cw_data_set@p_cw_data,w
  3372  0314  3E06               	addlw	6
  3373  0315  00A0               	movwf	uint8_data_set@p_data
  3374  0316  3000               	movlw	0
  3375  0317  00A1               	movwf	uint8_data_set@p_data+1
  3376  0318  3002               	movlw	2
  3377  0319  00A4               	movwf	??_cw_data_set
  3378  031A  0824               	movf	??_cw_data_set,w
  3379  031B  00A2               	movwf	uint8_data_set@data_len
  3380  031C  120A  158A  2779  120A  118A  	fcall	_uint8_data_set
  3381                           
  3382                           ;system_protocol.c: 189: uint8_data_set(&(p_cw_data->power5), 2);
  3383  0321  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0322  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0323  0825               	movf	cw_data_set@p_cw_data,w
  3386  0324  3E08               	addlw	8
  3387  0325  00A0               	movwf	uint8_data_set@p_data
  3388  0326  3000               	movlw	0
  3389  0327  00A1               	movwf	uint8_data_set@p_data+1
  3390  0328  3002               	movlw	2
  3391  0329  00A4               	movwf	??_cw_data_set
  3392  032A  0824               	movf	??_cw_data_set,w
  3393  032B  00A2               	movwf	uint8_data_set@data_len
  3394  032C  120A  158A  2779  120A  118A  	fcall	_uint8_data_set
  3395                           
  3396                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->temp), 2);
  3397  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3399  0333  0825               	movf	cw_data_set@p_cw_data,w
  3400  0334  3E0A               	addlw	10
  3401  0335  00A0               	movwf	uint8_data_set@p_data
  3402  0336  3000               	movlw	0
  3403  0337  00A1               	movwf	uint8_data_set@p_data+1
  3404  0338  3002               	movlw	2
  3405  0339  00A4               	movwf	??_cw_data_set
  3406  033A  0824               	movf	??_cw_data_set,w
  3407  033B  00A2               	movwf	uint8_data_set@data_len
  3408  033C  120A  158A  2779  120A  118A  	fcall	_uint8_data_set
  3409                           
  3410                           ;system_protocol.c: 195: packet.payload[index_pos++] = 1;
  3411  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0343  084C               	movf	_index_pos,w
  3414  0344  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3415  0345  0084               	movwf	4
  3416  0346  1383               	bcf	3,7	;select IRP bank1
  3417  0347  0180               	clrf	0
  3418  0348  0A80               	incf	0,f
  3419  0349  3001               	movlw	1
  3420  034A  00A4               	movwf	??_cw_data_set
  3421  034B  0824               	movf	??_cw_data_set,w
  3422  034C  07CC               	addwf	_index_pos,f
  3423                           
  3424                           ;system_protocol.c: 196: packet.payload[index_pos++] = cw.obc2;
  3425  034D  084C               	movf	_index_pos,w
  3426  034E  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3427  034F  0084               	movwf	4
  3428  0350  3000               	movlw	0
  3429  0351  1859               	btfsc	_cw+12,0
  3430  0352  3001               	movlw	1
  3431  0353  0080               	movwf	0
  3432  0354  3001               	movlw	1
  3433  0355  00A4               	movwf	??_cw_data_set
  3434  0356  0824               	movf	??_cw_data_set,w
  3435  0357  07CC               	addwf	_index_pos,f
  3436                           
  3437                           ;system_protocol.c: 199: packet.payload[index_pos++] = 1;
  3438  0358  084C               	movf	_index_pos,w
  3439  0359  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3440  035A  0084               	movwf	4
  3441  035B  0180               	clrf	0
  3442  035C  0A80               	incf	0,f
  3443  035D  3001               	movlw	1
  3444  035E  00A4               	movwf	??_cw_data_set
  3445  035F  0824               	movf	??_cw_data_set,w
  3446  0360  07CC               	addwf	_index_pos,f
  3447                           
  3448                           ;system_protocol.c: 200: packet.payload[index_pos++] = cw.powmcu;
  3449  0361  084C               	movf	_index_pos,w
  3450  0362  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3451  0363  0084               	movwf	4
  3452  0364  3000               	movlw	0
  3453  0365  18D9               	btfsc	_cw+12,1
  3454  0366  3001               	movlw	1
  3455  0367  0080               	movwf	0
  3456  0368  3001               	movlw	1
  3457  0369  00A4               	movwf	??_cw_data_set
  3458  036A  0824               	movf	??_cw_data_set,w
  3459  036B  07CC               	addwf	_index_pos,f
  3460  036C  0008               	return
  3461  036D                     __end_of_cw_data_set:	
  3462                           
  3463                           	psect	text15
  3464  0EDC                     __ptext15:	
  3465 ;; *************** function _LED_data_set *****************
  3466 ;; Defined at:
  3467 ;;		line 98 in file "OBC1_app.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;		None               void
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3481 ;;      Params:         0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    5
  3488 ;; This function calls:
  3489 ;;		_sent_data_set
  3490 ;; This function is called by:
  3491 ;;		_command
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _LED_data_set
  3497  0EDC                     _LED_data_set:	
  3498                           
  3499                           ;OBC1_app.c: 100: sent_data_set(0x01, 1, 1);
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _LED_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3503  0EDC  3001               	movlw	1
  3504  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  3506  0EDF  00B4               	movwf	sent_data_set@p_data
  3507  0EE0  3000               	movlw	0
  3508  0EE1  00B5               	movwf	sent_data_set@p_data+1
  3509  0EE2  01B6               	clrf	sent_data_set@data_len
  3510  0EE3  0AB6               	incf	sent_data_set@data_len,f
  3511  0EE4  01B7               	clrf	sent_data_set@byte_of_data
  3512  0EE5  0AB7               	incf	sent_data_set@byte_of_data,f
  3513  0EE6  120A  118A  24CE   	fcall	_sent_data_set
  3514  0EE9  0008               	return
  3515  0EEA                     __end_of_LED_data_set:	
  3516                           
  3517                           	psect	text16
  3518  04CE                     __ptext16:	
  3519 ;; *************** function _sent_data_set *****************
  3520 ;; Defined at:
  3521 ;;		line 141 in file "system_protocol.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  p_data          2   20[BANK0 ] PTR void 
  3524 ;;		 -> RAM(512), I2CTEMP_data(2), 
  3525 ;;  data_len        1   22[BANK0 ] unsigned char 
  3526 ;;  byte_of_data    1   23[BANK0 ] unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      unsigned char 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3538 ;;      Params:         0       4       0       0       0
  3539 ;;      Locals:         0       0       0       0       0
  3540 ;;      Temps:          0       5       0       0       0
  3541 ;;      Totals:         0       9       0       0       0
  3542 ;;Total ram usage:        9 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    4
  3545 ;; This function calls:
  3546 ;;		___wmul
  3547 ;;		_double_data_set
  3548 ;;		_uint16_data_set
  3549 ;;		_uint8_data_set
  3550 ;; This function is called by:
  3551 ;;		_command
  3552 ;;		_LED_data_set
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _sent_data_set
  3558  04CE                     _sent_data_set:	
  3559                           
  3560                           ;system_protocol.c: 144: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3564  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  3565  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  3566  04D0  0837               	movf	sent_data_set@byte_of_data,w
  3567  04D1  3E01               	addlw	1
  3568  04D2  00A0               	movwf	___wmul@multiplier
  3569  04D3  3000               	movlw	0
  3570  04D4  1803               	skipnc
  3571  04D5  3001               	movlw	1
  3572  04D6  00A1               	movwf	___wmul@multiplier+1
  3573  04D7  0836               	movf	sent_data_set@data_len,w
  3574  04D8  00B8               	movwf	??_sent_data_set
  3575  04D9  01B9               	clrf	??_sent_data_set+1
  3576  04DA  0838               	movf	??_sent_data_set,w
  3577  04DB  00A2               	movwf	___wmul@multiplicand
  3578  04DC  0839               	movf	??_sent_data_set+1,w
  3579  04DD  00A3               	movwf	___wmul@multiplicand+1
  3580  04DE  120A  158A  2756  120A  118A  	fcall	___wmul
  3581  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3582  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3583  04E5  084C               	movf	_index_pos,w
  3584  04E6  0720               	addwf	?___wmul,w
  3585  04E7  00BA               	movwf	??_sent_data_set+2
  3586  04E8  0821               	movf	?___wmul+1,w
  3587  04E9  1803               	skipnc
  3588  04EA  0A21               	incf	?___wmul+1,w
  3589  04EB  00BB               	movwf	??_sent_data_set+3
  3590  04EC  09BA               	comf	??_sent_data_set+2,f
  3591  04ED  09BB               	comf	??_sent_data_set+3,f
  3592  04EE  0ABA               	incf	??_sent_data_set+2,f
  3593  04EF  1903               	skipnz
  3594  04F0  0ABB               	incf	??_sent_data_set+3,f
  3595  04F1  301E               	movlw	30
  3596  04F2  073A               	addwf	??_sent_data_set+2,w
  3597  04F3  083B               	movf	??_sent_data_set+3,w
  3598  04F4  1803               	skipnc
  3599  04F5  0A3B               	incf	??_sent_data_set+3,w
  3600  04F6  3E00               	addlw	0
  3601  04F7  00BC               	movwf	??_sent_data_set+4
  3602  04F8  1BBC               	btfsc	??_sent_data_set+4,7
  3603  04F9  0008               	return
  3604  04FA  2D23               	goto	l1843
  3605  04FB                     l1835:	
  3606                           ;system_protocol.c: 151: {
  3607                           ;system_protocol.c: 152: case 1:
  3608                           
  3609                           ;system_protocol.c: 147: }
  3610                           ;system_protocol.c: 150: switch(byte_of_data)
  3611                           
  3612                           ;system_protocol.c: 145: {
  3613                           ;system_protocol.c: 146: return 0xff;
  3614                           ;	Return value of _sent_data_set is never used
  3615                           
  3616                           
  3617                           ;system_protocol.c: 153: uint8_data_set((uint8_t *)p_data, data_len);
  3618  04FB  0834               	movf	sent_data_set@p_data,w
  3619  04FC  00A0               	movwf	uint8_data_set@p_data
  3620  04FD  0835               	movf	sent_data_set@p_data+1,w
  3621  04FE  00A1               	movwf	uint8_data_set@p_data+1
  3622  04FF  0836               	movf	sent_data_set@data_len,w
  3623  0500  00B8               	movwf	??_sent_data_set
  3624  0501  0838               	movf	??_sent_data_set,w
  3625  0502  00A2               	movwf	uint8_data_set@data_len
  3626  0503  120A  158A  2779   	fcall	_uint8_data_set
  3627                           
  3628                           ;system_protocol.c: 154: break;
  3629  0506  0008               	return
  3630  0507                     l1837:	
  3631                           ;system_protocol.c: 155: case 2:
  3632                           
  3633                           
  3634                           ;system_protocol.c: 156: uint16_data_set((uint16_t *)p_data, data_len);
  3635  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0509  0834               	movf	sent_data_set@p_data,w
  3638  050A  00A6               	movwf	uint16_data_set@p_data
  3639  050B  0835               	movf	sent_data_set@p_data+1,w
  3640  050C  00A7               	movwf	uint16_data_set@p_data+1
  3641  050D  0836               	movf	sent_data_set@data_len,w
  3642  050E  00B8               	movwf	??_sent_data_set
  3643  050F  0838               	movf	??_sent_data_set,w
  3644  0510  00A8               	movwf	uint16_data_set@data_len
  3645  0511  120A  118A  26F8   	fcall	_uint16_data_set
  3646                           
  3647                           ;system_protocol.c: 157: break;
  3648  0514  0008               	return
  3649  0515                     l1839:	
  3650                           ;system_protocol.c: 158: case 4:
  3651                           
  3652                           
  3653                           ;system_protocol.c: 159: double_data_set((double *)p_data, data_len);
  3654  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0517  0834               	movf	sent_data_set@p_data,w
  3657  0518  00AA               	movwf	double_data_set@p_data
  3658  0519  0835               	movf	sent_data_set@p_data+1,w
  3659  051A  00AB               	movwf	double_data_set@p_data+1
  3660  051B  0836               	movf	sent_data_set@data_len,w
  3661  051C  00B8               	movwf	??_sent_data_set
  3662  051D  0838               	movf	??_sent_data_set,w
  3663  051E  00AC               	movwf	double_data_set@data_len
  3664  051F  120A  118A  2733   	fcall	_double_data_set
  3665                           
  3666                           ;system_protocol.c: 163: }
  3667                           
  3668                           ;system_protocol.c: 162: return 0xff;
  3669                           ;	Return value of _sent_data_set is never used
  3670                           
  3671                           ;system_protocol.c: 161: default:
  3672                           
  3673                           ;system_protocol.c: 160: break;
  3674  0522  0008               	return
  3675  0523                     l1843:	
  3676  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0525  0837               	movf	sent_data_set@byte_of_data,w
  3679                           
  3680                           ; Switch size 1, requested type "space"
  3681                           ; Number of cases is 3, Range of values is 1 to 4
  3682                           ; switch strategies available:
  3683                           ; Name         Instructions Cycles
  3684                           ; simple_byte           10     6 (average)
  3685                           ; direct_byte           23    11 (fixed)
  3686                           ; jumptable            263     9 (fixed)
  3687                           ;	Chosen strategy is simple_byte
  3688  0526  3A01               	xorlw	1	; case 1
  3689  0527  1903               	skipnz
  3690  0528  2CFB               	goto	l1835
  3691  0529  3A03               	xorlw	3	; case 2
  3692  052A  1903               	skipnz
  3693  052B  2D07               	goto	l1837
  3694  052C  3A06               	xorlw	6	; case 4
  3695  052D  1903               	skipnz
  3696  052E  2D15               	goto	l1839
  3697  052F  2D30               	goto	l250
  3698  0530                     l250:	
  3699                           ;system_protocol.c: 166: return (uint8_t)(30 - index_pos);
  3700                           ;	Return value of _sent_data_set is never used
  3701                           
  3702  0530  0008               	return
  3703  0531                     __end_of_sent_data_set:	
  3704                           
  3705                           	psect	text17
  3706  0F79                     __ptext17:	
  3707 ;; *************** function _uint8_data_set *****************
  3708 ;; Defined at:
  3709 ;;		line 257 in file "system_protocol.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  p_data          2    0[BANK0 ] PTR unsigned char 
  3712 ;;		 -> RAM(512), I2CTEMP_data(2), cw(13), 
  3713 ;;  data_len        1    2[BANK0 ] unsigned char 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3725 ;;      Params:         0       3       0       0       0
  3726 ;;      Locals:         0       0       0       0       0
  3727 ;;      Temps:          0       1       0       0       0
  3728 ;;      Totals:         0       4       0       0       0
  3729 ;;Total ram usage:        4 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_sent_data_set
  3736 ;;		_cw_data_set
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           
  3741                           ;psect for function _uint8_data_set
  3742  0F79                     _uint8_data_set:	
  3743  0F79                     l1699:	
  3744                           ;system_protocol.c: 259: while(data_len)
  3745                           
  3746                           ;incstack = 0
  3747                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  3748                           
  3749  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0F7B  0822               	movf	uint8_data_set@data_len,w
  3752  0F7C  1903               	btfsc	3,2
  3753  0F7D  0008               	return
  3754                           
  3755                           ;system_protocol.c: 260: {
  3756                           ;system_protocol.c: 261: packet.payload[index_pos++] = 1;
  3757  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3759  0F80  084C               	movf	_index_pos,w
  3760  0F81  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3761  0F82  0084               	movwf	4
  3762  0F83  1383               	bcf	3,7	;select IRP bank1
  3763  0F84  0180               	clrf	0
  3764  0F85  0A80               	incf	0,f
  3765  0F86  3001               	movlw	1
  3766  0F87  00A3               	movwf	??_uint8_data_set
  3767  0F88  0823               	movf	??_uint8_data_set,w
  3768  0F89  07CC               	addwf	_index_pos,f
  3769                           
  3770                           ;system_protocol.c: 262: packet.payload[index_pos++] = *p_data++;
  3771  0F8A  0820               	movf	uint8_data_set@p_data,w
  3772  0F8B  0084               	movwf	4
  3773  0F8C  1783               	bsf	3,7
  3774  0F8D  1C21               	btfss	uint8_data_set@p_data+1,0
  3775  0F8E  1383               	bcf	3,7
  3776  0F8F  0800               	movf	0,w
  3777  0F90  00A3               	movwf	??_uint8_data_set
  3778  0F91  084C               	movf	_index_pos,w
  3779  0F92  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3780  0F93  0084               	movwf	4
  3781  0F94  0823               	movf	??_uint8_data_set,w
  3782  0F95  1383               	bcf	3,7	;select IRP bank1
  3783  0F96  0080               	movwf	0
  3784  0F97  3001               	movlw	1
  3785  0F98  07A0               	addwf	uint8_data_set@p_data,f
  3786  0F99  1803               	skipnc
  3787  0F9A  0AA1               	incf	uint8_data_set@p_data+1,f
  3788  0F9B  3000               	movlw	0
  3789  0F9C  07A1               	addwf	uint8_data_set@p_data+1,f
  3790  0F9D  3001               	movlw	1
  3791  0F9E  00A3               	movwf	??_uint8_data_set
  3792  0F9F  0823               	movf	??_uint8_data_set,w
  3793  0FA0  07CC               	addwf	_index_pos,f
  3794                           
  3795                           ;system_protocol.c: 263: data_len--;
  3796  0FA1  3001               	movlw	1
  3797  0FA2  02A2               	subwf	uint8_data_set@data_len,f
  3798  0FA3  2F79               	goto	l1699
  3799  0FA4                     __end_of_uint8_data_set:	
  3800                           
  3801                           	psect	text18
  3802  06F8                     __ptext18:	
  3803 ;; *************** function _uint16_data_set *****************
  3804 ;; Defined at:
  3805 ;;		line 279 in file "system_protocol.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  p_data          2    6[BANK0 ] PTR unsigned int 
  3808 ;;		 -> RAM(512), I2CTEMP_data(2), 
  3809 ;;  data_len        1    8[BANK0 ] unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  buf             3   10[BANK0 ] unsigned char [3]
  3812 ;;  i               1   13[BANK0 ] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3822 ;;      Params:         0       3       0       0       0
  3823 ;;      Locals:         0       4       0       0       0
  3824 ;;      Temps:          0       1       0       0       0
  3825 ;;      Totals:         0       8       0       0       0
  3826 ;;Total ram usage:        8 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    3
  3829 ;; This function calls:
  3830 ;;		_uint16_to_byte_array
  3831 ;; This function is called by:
  3832 ;;		_sent_data_set
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function _uint16_data_set
  3838  06F8                     _uint16_data_set:	
  3839  06F8                     l274:	
  3840                           ;system_protocol.c: 281: uint8_t buf[3];
  3841                           ;system_protocol.c: 282: uint8_t i;
  3842                           ;system_protocol.c: 284: while(data_len)
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3846                           
  3847  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3848  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3849  06FA  0828               	movf	uint16_data_set@data_len,w
  3850  06FB  1903               	btfsc	3,2
  3851  06FC  0008               	return
  3852                           
  3853                           ;system_protocol.c: 285: {
  3854                           ;system_protocol.c: 286: uint16_to_byte_array(p_data++, buf);
  3855  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3856  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3857  06FF  0826               	movf	uint16_data_set@p_data,w
  3858  0700  00A0               	movwf	uint16_to_byte_array@p_data
  3859  0701  0827               	movf	uint16_data_set@p_data+1,w
  3860  0702  00A1               	movwf	uint16_to_byte_array@p_data+1
  3861  0703  302A               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  3862  0704  00A9               	movwf	??_uint16_data_set
  3863  0705  0829               	movf	??_uint16_data_set,w
  3864  0706  00A2               	movwf	uint16_to_byte_array@p_data_array
  3865  0707  120A  158A  27D1  120A  118A  	fcall	_uint16_to_byte_array
  3866  070C  3002               	movlw	2
  3867  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3868  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3869  070F  07A6               	addwf	uint16_data_set@p_data,f
  3870  0710  1803               	skipnc
  3871  0711  0AA7               	incf	uint16_data_set@p_data+1,f
  3872  0712  3000               	movlw	0
  3873  0713  07A7               	addwf	uint16_data_set@p_data+1,f
  3874                           
  3875                           ;system_protocol.c: 288: for(i = 0; i < 3; i++)
  3876  0714  01AD               	clrf	uint16_data_set@i
  3877  0715  3003               	movlw	3
  3878  0716  022D               	subwf	uint16_data_set@i,w
  3879  0717  1803               	btfsc	3,0
  3880  0718  2F30               	goto	l1721
  3881  0719                     l1713:	
  3882                           
  3883                           ;system_protocol.c: 289: {
  3884                           ;system_protocol.c: 290: packet.payload[index_pos++] = buf[i];
  3885  0719  082D               	movf	uint16_data_set@i,w
  3886  071A  3E2A               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  3887  071B  0084               	movwf	4
  3888  071C  1383               	bcf	3,7	;select IRP bank0
  3889  071D  0800               	movf	0,w
  3890  071E  00A9               	movwf	??_uint16_data_set
  3891  071F  084C               	movf	_index_pos,w
  3892  0720  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3893  0721  0084               	movwf	4
  3894  0722  0829               	movf	??_uint16_data_set,w
  3895  0723  0080               	movwf	0
  3896  0724  3001               	movlw	1
  3897  0725  00A9               	movwf	??_uint16_data_set
  3898  0726  0829               	movf	??_uint16_data_set,w
  3899  0727  07CC               	addwf	_index_pos,f
  3900  0728  3001               	movlw	1
  3901  0729  00A9               	movwf	??_uint16_data_set
  3902  072A  0829               	movf	??_uint16_data_set,w
  3903  072B  07AD               	addwf	uint16_data_set@i,f
  3904  072C  3003               	movlw	3
  3905  072D  022D               	subwf	uint16_data_set@i,w
  3906  072E  1C03               	skipc
  3907  072F  2F19               	goto	l1713
  3908  0730                     l1721:	
  3909                           
  3910                           ;system_protocol.c: 291: }
  3911                           ;system_protocol.c: 292: data_len--;
  3912  0730  3001               	movlw	1
  3913  0731  02A8               	subwf	uint16_data_set@data_len,f
  3914  0732  2EF8               	goto	l274
  3915  0733                     __end_of_uint16_data_set:	
  3916                           
  3917                           	psect	text19
  3918  0FD1                     __ptext19:	
  3919 ;; *************** function _uint16_to_byte_array *****************
  3920 ;; Defined at:
  3921 ;;		line 337 in file "system_protocol.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  p_data          2    0[BANK0 ] PTR unsigned int 
  3924 ;;		 -> RAM(512), I2CTEMP_data(2), 
  3925 ;;  p_data_array    1    2[BANK0 ] PTR unsigned char 
  3926 ;;		 -> uint16_data_set@buf(3), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;		None               void
  3931 ;; Registers used:
  3932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         0       3       0       0       0
  3939 ;;      Locals:         0       0       0       0       0
  3940 ;;      Temps:          0       3       0       0       0
  3941 ;;      Totals:         0       6       0       0       0
  3942 ;;Total ram usage:        6 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    2
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_uint16_data_set
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function _uint16_to_byte_array
  3954  0FD1                     _uint16_to_byte_array:	
  3955                           
  3956                           ;system_protocol.c: 339: const uint16_t bit_mask = 0b0000000011111111;
  3957                           ;system_protocol.c: 342: p_data_array[0] = 2;
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  3961  0FD1  3002               	movlw	2
  3962  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0FD4  00A3               	movwf	??_uint16_to_byte_array
  3965  0FD5  0822               	movf	uint16_to_byte_array@p_data_array,w
  3966  0FD6  0084               	movwf	4
  3967  0FD7  0823               	movf	??_uint16_to_byte_array,w
  3968  0FD8  1383               	bcf	3,7	;select IRP bank0
  3969  0FD9  0080               	movwf	0
  3970                           
  3971                           ;system_protocol.c: 343: p_data_array[1] = (uint8_t)(*p_data >> 8);
  3972  0FDA  0820               	movf	uint16_to_byte_array@p_data,w
  3973  0FDB  0084               	movwf	4
  3974  0FDC  1783               	bsf	3,7
  3975  0FDD  1C21               	btfss	uint16_to_byte_array@p_data+1,0
  3976  0FDE  1383               	bcf	3,7
  3977  0FDF  0800               	movf	0,w
  3978  0FE0  00A3               	movwf	??_uint16_to_byte_array
  3979  0FE1  0A84               	incf	4,f
  3980  0FE2  0800               	movf	0,w
  3981  0FE3  00A4               	movwf	??_uint16_to_byte_array+1
  3982  0FE4  0824               	movf	??_uint16_to_byte_array+1,w
  3983  0FE5  00A5               	movwf	??_uint16_to_byte_array+2
  3984  0FE6  0A22               	incf	uint16_to_byte_array@p_data_array,w
  3985  0FE7  0084               	movwf	4
  3986  0FE8  0825               	movf	??_uint16_to_byte_array+2,w
  3987  0FE9  1383               	bcf	3,7	;select IRP bank0
  3988  0FEA  0080               	movwf	0
  3989                           
  3990                           ;system_protocol.c: 344: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  3991  0FEB  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  3992  0FEC  0084               	movwf	4
  3993  0FED  120A  158A  2000   	fcall	stringdir
  3994  0FF0  00A3               	movwf	??_uint16_to_byte_array
  3995  0FF1  0820               	movf	uint16_to_byte_array@p_data,w
  3996  0FF2  0084               	movwf	4
  3997  0FF3  1783               	bsf	3,7
  3998  0FF4  1C21               	btfss	uint16_to_byte_array@p_data+1,0
  3999  0FF5  1383               	bcf	3,7
  4000  0FF6  0800               	movf	0,w
  4001  0FF7  0523               	andwf	??_uint16_to_byte_array,w
  4002  0FF8  00A4               	movwf	??_uint16_to_byte_array+1
  4003  0FF9  0822               	movf	uint16_to_byte_array@p_data_array,w
  4004  0FFA  3E02               	addlw	2
  4005  0FFB  0084               	movwf	4
  4006  0FFC  0824               	movf	??_uint16_to_byte_array+1,w
  4007  0FFD  1383               	bcf	3,7	;select IRP bank0
  4008  0FFE  0080               	movwf	0
  4009  0FFF  0008               	return
  4010  1000                     __end_of_uint16_to_byte_array:	
  4011                           
  4012                           	psect	text20
  4013  0733                     __ptext20:	
  4014 ;; *************** function _double_data_set *****************
  4015 ;; Defined at:
  4016 ;;		line 308 in file "system_protocol.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  p_data          2   10[BANK0 ] PTR 
  4019 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4020 ;;  data_len        1   12[BANK0 ] unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  buf             5   14[BANK0 ] unsigned char [5]
  4023 ;;  i               1   19[BANK0 ] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4033 ;;      Params:         0       3       0       0       0
  4034 ;;      Locals:         0       6       0       0       0
  4035 ;;      Temps:          0       1       0       0       0
  4036 ;;      Totals:         0      10       0       0       0
  4037 ;;Total ram usage:       10 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    3
  4040 ;; This function calls:
  4041 ;;		_double_to_byte_array
  4042 ;; This function is called by:
  4043 ;;		_sent_data_set
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _double_data_set
  4049  0733                     _double_data_set:	
  4050  0733                     l282:	
  4051                           ;system_protocol.c: 310: uint8_t buf[5];
  4052                           ;system_protocol.c: 311: uint8_t i;
  4053                           ;system_protocol.c: 313: while(data_len)
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4057                           
  4058  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0734  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0735  082C               	movf	double_data_set@data_len,w
  4061  0736  1903               	btfsc	3,2
  4062  0737  0008               	return
  4063                           
  4064                           ;system_protocol.c: 314: {
  4065                           ;system_protocol.c: 315: double_to_byte_array(p_data++, buf);
  4066  0738  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0739  1303               	bcf	3,6	;RP1=0, select bank0
  4068  073A  082A               	movf	double_data_set@p_data,w
  4069  073B  00A0               	movwf	double_to_byte_array@p_data
  4070  073C  082B               	movf	double_data_set@p_data+1,w
  4071  073D  00A1               	movwf	double_to_byte_array@p_data+1
  4072  073E  302E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  4073  073F  00AD               	movwf	??_double_data_set
  4074  0740  082D               	movf	??_double_data_set,w
  4075  0741  00A2               	movwf	double_to_byte_array@p_data_array
  4076  0742  120A  158A  27A4  120A  118A  	fcall	_double_to_byte_array
  4077  0747  3003               	movlw	3
  4078  0748  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0749  1303               	bcf	3,6	;RP1=0, select bank0
  4080  074A  07AA               	addwf	double_data_set@p_data,f
  4081  074B  1803               	skipnc
  4082  074C  0AAB               	incf	double_data_set@p_data+1,f
  4083  074D  3000               	movlw	0
  4084  074E  07AB               	addwf	double_data_set@p_data+1,f
  4085                           
  4086                           ;system_protocol.c: 317: for(i = 0; i < 5; i++)
  4087  074F  01B3               	clrf	double_data_set@i
  4088  0750  3005               	movlw	5
  4089  0751  0233               	subwf	double_data_set@i,w
  4090  0752  1803               	btfsc	3,0
  4091  0753  2F6B               	goto	l1743
  4092  0754                     l1735:	
  4093                           
  4094                           ;system_protocol.c: 318: {
  4095                           ;system_protocol.c: 319: packet.payload[index_pos++] = buf[i];
  4096  0754  0833               	movf	double_data_set@i,w
  4097  0755  3E2E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  4098  0756  0084               	movwf	4
  4099  0757  1383               	bcf	3,7	;select IRP bank0
  4100  0758  0800               	movf	0,w
  4101  0759  00AD               	movwf	??_double_data_set
  4102  075A  084C               	movf	_index_pos,w
  4103  075B  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  4104  075C  0084               	movwf	4
  4105  075D  082D               	movf	??_double_data_set,w
  4106  075E  0080               	movwf	0
  4107  075F  3001               	movlw	1
  4108  0760  00AD               	movwf	??_double_data_set
  4109  0761  082D               	movf	??_double_data_set,w
  4110  0762  07CC               	addwf	_index_pos,f
  4111  0763  3001               	movlw	1
  4112  0764  00AD               	movwf	??_double_data_set
  4113  0765  082D               	movf	??_double_data_set,w
  4114  0766  07B3               	addwf	double_data_set@i,f
  4115  0767  3005               	movlw	5
  4116  0768  0233               	subwf	double_data_set@i,w
  4117  0769  1C03               	skipc
  4118  076A  2F54               	goto	l1735
  4119  076B                     l1743:	
  4120                           
  4121                           ;system_protocol.c: 320: }
  4122                           ;system_protocol.c: 321: data_len--;
  4123  076B  3001               	movlw	1
  4124  076C  02AC               	subwf	double_data_set@data_len,f
  4125  076D  2F33               	goto	l282
  4126  076E                     __end_of_double_data_set:	
  4127                           
  4128                           	psect	text21
  4129  0FA4                     __ptext21:	
  4130 ;; *************** function _double_to_byte_array *****************
  4131 ;; Defined at:
  4132 ;;		line 359 in file "system_protocol.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  p_data          2    0[BANK0 ] PTR 
  4135 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4136 ;;  p_data_array    1    2[BANK0 ] PTR unsigned char 
  4137 ;;		 -> double_data_set@buf(5), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  converter       4    5[BANK0 ] struct .
  4140 ;;  i               1    9[BANK0 ] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;		None               void
  4143 ;; Registers used:
  4144 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         0       3       0       0       0
  4151 ;;      Locals:         0       5       0       0       0
  4152 ;;      Temps:          0       2       0       0       0
  4153 ;;      Totals:         0      10       0       0       0
  4154 ;;Total ram usage:       10 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    2
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_double_data_set
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function _double_to_byte_array
  4166  0FA4                     _double_to_byte_array:	
  4167                           
  4168                           ;system_protocol.c: 361: uint8_t i;
  4169                           ;system_protocol.c: 362: union
  4170                           ;system_protocol.c: 363: {
  4171                           ;system_protocol.c: 364: double data;
  4172                           ;system_protocol.c: 365: uint8_t array[4];
  4173                           ;system_protocol.c: 366: } converter;
  4174                           ;system_protocol.c: 369: converter.data = *p_data;
  4175                           
  4176                           ;incstack = 0
  4177                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  4178  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0FA6  0820               	movf	double_to_byte_array@p_data,w
  4181  0FA7  0084               	movwf	4
  4182  0FA8  1783               	bsf	3,7
  4183  0FA9  1C21               	btfss	double_to_byte_array@p_data+1,0
  4184  0FAA  1383               	bcf	3,7
  4185  0FAB  0800               	movf	0,w
  4186  0FAC  00A5               	movwf	double_to_byte_array@converter
  4187  0FAD  0A84               	incf	4,f
  4188  0FAE  0800               	movf	0,w
  4189  0FAF  00A6               	movwf	double_to_byte_array@converter+1
  4190  0FB0  0A84               	incf	4,f
  4191  0FB1  0800               	movf	0,w
  4192  0FB2  00A7               	movwf	double_to_byte_array@converter+2
  4193                           
  4194                           ;system_protocol.c: 372: p_data_array[0] = 4;
  4195  0FB3  3004               	movlw	4
  4196  0FB4  00A3               	movwf	??_double_to_byte_array
  4197  0FB5  0822               	movf	double_to_byte_array@p_data_array,w
  4198  0FB6  0084               	movwf	4
  4199  0FB7  0823               	movf	??_double_to_byte_array,w
  4200  0FB8  1383               	bcf	3,7	;select IRP bank0
  4201  0FB9  0080               	movwf	0
  4202                           
  4203                           ;system_protocol.c: 375: for(i = 0; i < 4; i++)
  4204  0FBA  01A9               	clrf	double_to_byte_array@i
  4205  0FBB                     L1:	
  4206  0FBB  3004               	movlw	4
  4207  0FBC  0229               	subwf	double_to_byte_array@i,w
  4208  0FBD  1803               	btfsc	3,0
  4209  0FBE  0008               	return
  4210                           
  4211                           ;system_protocol.c: 376: {
  4212                           ;system_protocol.c: 377: p_data_array[i + 1] = converter.array[i];
  4213  0FBF  0829               	movf	double_to_byte_array@i,w
  4214  0FC0  3E25               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  4215  0FC1  0084               	movwf	4
  4216  0FC2  0800               	movf	0,w
  4217  0FC3  00A3               	movwf	??_double_to_byte_array
  4218  0FC4  0829               	movf	double_to_byte_array@i,w
  4219  0FC5  3E01               	addlw	1
  4220  0FC6  0722               	addwf	double_to_byte_array@p_data_array,w
  4221  0FC7  00A4               	movwf	??_double_to_byte_array+1
  4222  0FC8  0824               	movf	??_double_to_byte_array+1,w
  4223  0FC9  0084               	movwf	4
  4224  0FCA  0823               	movf	??_double_to_byte_array,w
  4225  0FCB  0080               	movwf	0
  4226  0FCC  3001               	movlw	1
  4227  0FCD  00A3               	movwf	??_double_to_byte_array
  4228  0FCE  0823               	movf	??_double_to_byte_array,w
  4229  0FCF  07A9               	addwf	double_to_byte_array@i,f
  4230  0FD0  2FBB               	goto	L1
  4231  0FD1                     __end_of_double_to_byte_array:	
  4232                           
  4233                           	psect	text22
  4234  0F56                     __ptext22:	
  4235 ;; *************** function ___wmul *****************
  4236 ;; Defined at:
  4237 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4240 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  product         2    4[BANK0 ] unsigned int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    0[BANK0 ] unsigned int 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       4       0       0       0
  4253 ;;      Locals:         0       2       0       0       0
  4254 ;;      Temps:          0       0       0       0       0
  4255 ;;      Totals:         0       6       0       0       0
  4256 ;;Total ram usage:        6 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    2
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_sent_data_set
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function ___wmul
  4268  0F56                     ___wmul:	
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4272  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0F58  01A4               	clrf	___wmul@product
  4275  0F59  01A5               	clrf	___wmul@product+1
  4276  0F5A                     l1773:	
  4277  0F5A  1C20               	btfss	___wmul@multiplier,0
  4278  0F5B  2F62               	goto	l497
  4279  0F5C  0822               	movf	___wmul@multiplicand,w
  4280  0F5D  07A4               	addwf	___wmul@product,f
  4281  0F5E  1803               	skipnc
  4282  0F5F  0AA5               	incf	___wmul@product+1,f
  4283  0F60  0823               	movf	___wmul@multiplicand+1,w
  4284  0F61  07A5               	addwf	___wmul@product+1,f
  4285  0F62                     l497:	
  4286  0F62  3001               	movlw	1
  4287  0F63                     u1055:	
  4288  0F63  1003               	clrc
  4289  0F64  0DA2               	rlf	___wmul@multiplicand,f
  4290  0F65  0DA3               	rlf	___wmul@multiplicand+1,f
  4291  0F66  3EFF               	addlw	-1
  4292  0F67  1D03               	skipz
  4293  0F68  2F63               	goto	u1055
  4294  0F69  3001               	movlw	1
  4295  0F6A                     u1065:	
  4296  0F6A  1003               	clrc
  4297  0F6B  0CA1               	rrf	___wmul@multiplier+1,f
  4298  0F6C  0CA0               	rrf	___wmul@multiplier,f
  4299  0F6D  3EFF               	addlw	-1
  4300  0F6E  1D03               	skipz
  4301  0F6F  2F6A               	goto	u1065
  4302  0F70  0820               	movf	___wmul@multiplier,w
  4303  0F71  0421               	iorwf	___wmul@multiplier+1,w
  4304  0F72  1D03               	btfss	3,2
  4305  0F73  2F5A               	goto	l1773
  4306  0F74  0825               	movf	___wmul@product+1,w
  4307  0F75  00A1               	movwf	?___wmul+1
  4308  0F76  0824               	movf	___wmul@product,w
  4309  0F77  00A0               	movwf	?___wmul
  4310  0F78  0008               	return
  4311  0F79                     __end_of___wmul:	
  4312                           
  4313                           	psect	text23
  4314  0462                     __ptext23:	
  4315 ;; *************** function _check_bit *****************
  4316 ;; Defined at:
  4317 ;;		line 120 in file "OBC1_main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  data            1    wreg     unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  data            1    3[BANK0 ] unsigned char 
  4322 ;;  i               1    5[BANK0 ] unsigned char 
  4323 ;;  check_bit       1    4[BANK0 ] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;		None               void
  4326 ;; Registers used:
  4327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         0       0       0       0       0
  4334 ;;      Locals:         0       3       0       0       0
  4335 ;;      Temps:          0       3       0       0       0
  4336 ;;      Totals:         0       6       0       0       0
  4337 ;;Total ram usage:        6 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    2
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _check_bit
  4349  0462                     _check_bit:	
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _check_bit: [wreg-fsr0h+status,2+status,0+pclath]
  4353                           ;check_bit@data stored from wreg
  4354  0462  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0463  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0464  00A3               	movwf	check_bit@data
  4357                           
  4358                           ;OBC1_main.c: 122: const uint8_t bit_mask = 0b10000000;
  4359                           ;OBC1_main.c: 123: uint8_t check_bit;
  4360                           ;OBC1_main.c: 124: uint8_t i;
  4361                           ;OBC1_main.c: 126: for(i = 0; i < 8; i++)
  4362  0465  01A5               	clrf	check_bit@i
  4363  0466                     L2:	
  4364  0466  3008               	movlw	8
  4365  0467  0225               	subwf	check_bit@i,w
  4366  0468  1803               	btfsc	3,0
  4367  0469  0008               	return
  4368                           
  4369                           ;OBC1_main.c: 127: {
  4370                           ;OBC1_main.c: 128: check_bit = bit_mask & data;
  4371  046A  3004               	movlw	low (check_bit@bit_mask-__stringbase)
  4372  046B  0084               	movwf	4
  4373  046C  120A  158A  2000  120A  118A  	fcall	stringdir
  4374  0471  0523               	andwf	check_bit@data,w
  4375  0472  00A0               	movwf	??_check_bit
  4376  0473  0820               	movf	??_check_bit,w
  4377  0474  00A4               	movwf	check_bit@check_bit
  4378                           
  4379                           ;OBC1_main.c: 130: PORTDbits.RD7 = 1;
  4380  0475  1788               	bsf	8,7	;volatile
  4381                           
  4382                           ;OBC1_main.c: 131: _delay((unsigned long)((100)*(20000000/4000.0)));
  4383  0476  3003               	movlw	3
  4384  0477  00A2               	movwf	??_check_bit+2
  4385  0478  308A               	movlw	138
  4386  0479  00A1               	movwf	??_check_bit+1
  4387  047A  3056               	movlw	86
  4388  047B  00A0               	movwf	??_check_bit
  4389  047C                     u1747:	
  4390  047C  0BA0               	decfsz	??_check_bit,f
  4391  047D  2C7C               	goto	u1747
  4392  047E  0BA1               	decfsz	??_check_bit+1,f
  4393  047F  2C7C               	goto	u1747
  4394  0480  0BA2               	decfsz	??_check_bit+2,f
  4395  0481  2C7C               	goto	u1747
  4396  0482  2C83               	nop2
  4397                           
  4398                           ;OBC1_main.c: 132: PORTDbits.RD7 = 0;
  4399  0483  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0484  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0485  1388               	bcf	8,7	;volatile
  4402                           
  4403                           ;OBC1_main.c: 133: _delay((unsigned long)((100)*(20000000/4000.0)));
  4404  0486  3003               	movlw	3
  4405  0487  00A2               	movwf	??_check_bit+2
  4406  0488  308A               	movlw	138
  4407  0489  00A1               	movwf	??_check_bit+1
  4408  048A  3056               	movlw	86
  4409  048B  00A0               	movwf	??_check_bit
  4410  048C                     u1757:	
  4411  048C  0BA0               	decfsz	??_check_bit,f
  4412  048D  2C8C               	goto	u1757
  4413  048E  0BA1               	decfsz	??_check_bit+1,f
  4414  048F  2C8C               	goto	u1757
  4415  0490  0BA2               	decfsz	??_check_bit+2,f
  4416  0491  2C8C               	goto	u1757
  4417  0492  2C93               	nop2
  4418                           
  4419                           ;OBC1_main.c: 135: if(check_bit)
  4420  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0494  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0495  0824               	movf	check_bit@check_bit,w
  4423  0496  1903               	btfsc	3,2
  4424  0497  2CB7               	goto	l2023
  4425                           
  4426                           ;OBC1_main.c: 136: {
  4427                           ;OBC1_main.c: 137: PORTDbits.RD6 = 1;
  4428  0498  1708               	bsf	8,6	;volatile
  4429                           
  4430                           ;OBC1_main.c: 138: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4431  0499  301A               	movlw	26
  4432  049A  00A2               	movwf	??_check_bit+2
  4433  049B  305E               	movlw	94
  4434  049C  00A1               	movwf	??_check_bit+1
  4435  049D  3086               	movlw	134
  4436  049E  00A0               	movwf	??_check_bit
  4437  049F                     u1767:	
  4438  049F  0BA0               	decfsz	??_check_bit,f
  4439  04A0  2C9F               	goto	u1767
  4440  04A1  0BA1               	decfsz	??_check_bit+1,f
  4441  04A2  2C9F               	goto	u1767
  4442  04A3  0BA2               	decfsz	??_check_bit+2,f
  4443  04A4  2C9F               	goto	u1767
  4444  04A5  0000               	nop
  4445                           
  4446                           ;OBC1_main.c: 139: PORTDbits.RD6 = 0;
  4447  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  4448  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  4449  04A8  1308               	bcf	8,6	;volatile
  4450                           
  4451                           ;OBC1_main.c: 140: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4452  04A9  301A               	movlw	26
  4453  04AA  00A2               	movwf	??_check_bit+2
  4454  04AB  305E               	movlw	94
  4455  04AC  00A1               	movwf	??_check_bit+1
  4456  04AD  3086               	movlw	134
  4457  04AE  00A0               	movwf	??_check_bit
  4458  04AF                     u1777:	
  4459  04AF  0BA0               	decfsz	??_check_bit,f
  4460  04B0  2CAF               	goto	u1777
  4461  04B1  0BA1               	decfsz	??_check_bit+1,f
  4462  04B2  2CAF               	goto	u1777
  4463  04B3  0BA2               	decfsz	??_check_bit+2,f
  4464  04B4  2CAF               	goto	u1777
  4465  04B5  0000               	nop
  4466                           
  4467                           ;OBC1_main.c: 141: }
  4468  04B6  2CC5               	goto	l50
  4469  04B7                     l2023:	
  4470                           
  4471                           ;OBC1_main.c: 142: else
  4472                           ;OBC1_main.c: 143: {
  4473                           ;OBC1_main.c: 144: _delay((unsigned long)((2000)*(20000000/4000.0)));
  4474  04B7  3033               	movlw	51
  4475  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  4476  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  4477  04BA  00A2               	movwf	??_check_bit+2
  4478  04BB  30BC               	movlw	188
  4479  04BC  00A1               	movwf	??_check_bit+1
  4480  04BD  3010               	movlw	16
  4481  04BE  00A0               	movwf	??_check_bit
  4482  04BF                     u1787:	
  4483  04BF  0BA0               	decfsz	??_check_bit,f
  4484  04C0  2CBF               	goto	u1787
  4485  04C1  0BA1               	decfsz	??_check_bit+1,f
  4486  04C2  2CBF               	goto	u1787
  4487  04C3  0BA2               	decfsz	??_check_bit+2,f
  4488  04C4  2CBF               	goto	u1787
  4489  04C5                     l50:	
  4490                           
  4491                           ;OBC1_main.c: 145: }
  4492                           ;OBC1_main.c: 146: data <<= 1;
  4493  04C5  1003               	clrc
  4494  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  4495  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  4496  04C8  0DA3               	rlf	check_bit@data,f
  4497  04C9  3001               	movlw	1
  4498  04CA  00A0               	movwf	??_check_bit
  4499  04CB  0820               	movf	??_check_bit,w
  4500  04CC  07A5               	addwf	check_bit@i,f
  4501  04CD  2C66               	goto	L2
  4502  04CE                     __end_of_check_bit:	
  4503                           
  4504                           	psect	text24
  4505  0EC5                     __ptext24:	
  4506 ;; *************** function _ad_con_init *****************
  4507 ;; Defined at:
  4508 ;;		line 49 in file "AD_value.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;		None               void
  4515 ;; Registers used:
  4516 ;;		wreg
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    2
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _ad_con_init
  4538  0EC5                     _ad_con_init:	
  4539                           
  4540                           ;AD_value.c: 52: PORTAbits.RA0 = 0;
  4541                           
  4542                           ;incstack = 0
  4543                           ; Regs used in _ad_con_init: [wreg]
  4544  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  4546  0EC7  1005               	bcf	5,0	;volatile
  4547                           
  4548                           ;AD_value.c: 53: PORTAbits.RA3 = 0;
  4549  0EC8  1185               	bcf	5,3	;volatile
  4550                           
  4551                           ;AD_value.c: 54: TRISAbits.TRISA0 = 1;
  4552  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  4553  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  4554  0ECB  1405               	bsf	5,0	;volatile
  4555                           
  4556                           ;AD_value.c: 55: TRISAbits.TRISA3 = 1;
  4557  0ECC  1585               	bsf	5,3	;volatile
  4558                           
  4559                           ;AD_value.c: 56: ADCON1 = 0b00000001;
  4560  0ECD  3001               	movlw	1
  4561  0ECE  009F               	movwf	31	;volatile
  4562  0ECF  0008               	return
  4563  0ED0                     __end_of_ad_con_init:	
  4564                           
  4565                           	psect	text25
  4566  0531                     __ptext25:	
  4567 ;; *************** function ___ftge *****************
  4568 ;; Defined at:
  4569 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  ff1             3    0[BANK0 ] float 
  4572 ;;  ff2             3    3[BANK0 ] float 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         0       6       0       0       0
  4585 ;;      Locals:         0       0       0       0       0
  4586 ;;      Temps:          0       6       0       0       0
  4587 ;;      Totals:         0      12       0       0       0
  4588 ;;Total ram usage:       12 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    2
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_main
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           
  4599                           ;psect for function ___ftge
  4600  0531                     ___ftge:	
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4604  0531  1283               	bcf	3,5	;RP0=0, select bank0
  4605  0532  1303               	bcf	3,6	;RP1=0, select bank0
  4606  0533  1FA2               	btfss	___ftge@ff1+2,7
  4607  0534  2D5A               	goto	l2151
  4608  0535  3000               	movlw	0
  4609  0536  00A6               	movwf	??___ftge
  4610  0537  3000               	movlw	0
  4611  0538  00A7               	movwf	??___ftge+1
  4612  0539  3080               	movlw	128
  4613  053A  00A8               	movwf	??___ftge+2
  4614  053B  0920               	comf	___ftge@ff1,w
  4615  053C  00A9               	movwf	??___ftge+3
  4616  053D  0921               	comf	___ftge@ff1+1,w
  4617  053E  00AA               	movwf	??___ftge+4
  4618  053F  0922               	comf	___ftge@ff1+2,w
  4619  0540  00AB               	movwf	??___ftge+5
  4620  0541  0AA9               	incf	??___ftge+3,f
  4621  0542  1903               	skipnz
  4622  0543  0AAA               	incf	??___ftge+4,f
  4623  0544  1903               	skipnz
  4624  0545  0AAB               	incf	??___ftge+5,f
  4625  0546  0829               	movf	??___ftge+3,w
  4626  0547  07A6               	addwf	??___ftge,f
  4627  0548  082A               	movf	??___ftge+4,w
  4628  0549  1803               	skipnc
  4629  054A  0F2A               	incfsz	??___ftge+4,w
  4630  054B  2D4D               	goto	u1481
  4631  054C  2D4E               	goto	u1482
  4632  054D                     u1481:	
  4633  054D  07A7               	addwf	??___ftge+1,f
  4634  054E                     u1482:	
  4635  054E  082B               	movf	??___ftge+5,w
  4636  054F  1803               	skipnc
  4637  0550  0F2B               	incfsz	??___ftge+5,w
  4638  0551  2D53               	goto	u1483
  4639  0552  2D54               	goto	u1484
  4640  0553                     u1483:	
  4641  0553  07A8               	addwf	??___ftge+2,f
  4642  0554                     u1484:	
  4643  0554  0826               	movf	??___ftge,w
  4644  0555  00A0               	movwf	___ftge@ff1
  4645  0556  0827               	movf	??___ftge+1,w
  4646  0557  00A1               	movwf	___ftge@ff1+1
  4647  0558  0828               	movf	??___ftge+2,w
  4648  0559  00A2               	movwf	___ftge@ff1+2
  4649  055A                     l2151:	
  4650  055A  1FA5               	btfss	___ftge@ff2+2,7
  4651  055B  2D81               	goto	l2155
  4652  055C  3000               	movlw	0
  4653  055D  00A6               	movwf	??___ftge
  4654  055E  3000               	movlw	0
  4655  055F  00A7               	movwf	??___ftge+1
  4656  0560  3080               	movlw	128
  4657  0561  00A8               	movwf	??___ftge+2
  4658  0562  0923               	comf	___ftge@ff2,w
  4659  0563  00A9               	movwf	??___ftge+3
  4660  0564  0924               	comf	___ftge@ff2+1,w
  4661  0565  00AA               	movwf	??___ftge+4
  4662  0566  0925               	comf	___ftge@ff2+2,w
  4663  0567  00AB               	movwf	??___ftge+5
  4664  0568  0AA9               	incf	??___ftge+3,f
  4665  0569  1903               	skipnz
  4666  056A  0AAA               	incf	??___ftge+4,f
  4667  056B  1903               	skipnz
  4668  056C  0AAB               	incf	??___ftge+5,f
  4669  056D  0829               	movf	??___ftge+3,w
  4670  056E  07A6               	addwf	??___ftge,f
  4671  056F  082A               	movf	??___ftge+4,w
  4672  0570  1803               	skipnc
  4673  0571  0F2A               	incfsz	??___ftge+4,w
  4674  0572  2D74               	goto	u1501
  4675  0573  2D75               	goto	u1502
  4676  0574                     u1501:	
  4677  0574  07A7               	addwf	??___ftge+1,f
  4678  0575                     u1502:	
  4679  0575  082B               	movf	??___ftge+5,w
  4680  0576  1803               	skipnc
  4681  0577  0F2B               	incfsz	??___ftge+5,w
  4682  0578  2D7A               	goto	u1503
  4683  0579  2D7B               	goto	u1504
  4684  057A                     u1503:	
  4685  057A  07A8               	addwf	??___ftge+2,f
  4686  057B                     u1504:	
  4687  057B  0826               	movf	??___ftge,w
  4688  057C  00A3               	movwf	___ftge@ff2
  4689  057D  0827               	movf	??___ftge+1,w
  4690  057E  00A4               	movwf	___ftge@ff2+1
  4691  057F  0828               	movf	??___ftge+2,w
  4692  0580  00A5               	movwf	___ftge@ff2+2
  4693  0581                     l2155:	
  4694  0581  3080               	movlw	128
  4695  0582  06A2               	xorwf	___ftge@ff1+2,f
  4696  0583  3080               	movlw	128
  4697  0584  06A5               	xorwf	___ftge@ff2+2,f
  4698  0585  0825               	movf	___ftge@ff2+2,w
  4699  0586  0222               	subwf	___ftge@ff1+2,w
  4700  0587  1D03               	skipz
  4701  0588  0008               	return
  4702  0589  0824               	movf	___ftge@ff2+1,w
  4703  058A  0221               	subwf	___ftge@ff1+1,w
  4704  058B  1D03               	skipz
  4705  058C  0008               	return
  4706  058D  0823               	movf	___ftge@ff2,w
  4707  058E  0220               	subwf	___ftge@ff1,w
  4708  058F  0008               	return
  4709  0590                     __end_of___ftge:	
  4710                           
  4711                           	psect	text26
  4712  0229                     __ptext26:	
  4713 ;; *************** function ___ftdiv *****************
  4714 ;; Defined at:
  4715 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  f2              3   16[BANK0 ] float 
  4718 ;;  f1              3   19[BANK0 ] float 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  f3              3   27[BANK0 ] float 
  4721 ;;  sign            1   31[BANK0 ] unsigned char 
  4722 ;;  exp             1   30[BANK0 ] unsigned char 
  4723 ;;  cntr            1   26[BANK0 ] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  3   16[BANK0 ] float 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, pclath, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4733 ;;      Params:         0       6       0       0       0
  4734 ;;      Locals:         0       6       0       0       0
  4735 ;;      Temps:          0       4       0       0       0
  4736 ;;      Totals:         0      16       0       0       0
  4737 ;;Total ram usage:       16 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    3
  4740 ;; This function calls:
  4741 ;;		___ftpack
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;;		_get_pt
  4745 ;;		_get_temp
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           
  4750                           ;psect for function ___ftdiv
  4751  0229                     ___ftdiv:	
  4752                           
  4753                           ;incstack = 0
  4754                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4755  0229  1283               	bcf	3,5	;RP0=0, select bank0
  4756  022A  1303               	bcf	3,6	;RP1=0, select bank0
  4757  022B  0833               	movf	___ftdiv@f1,w
  4758  022C  00B6               	movwf	??___ftdiv
  4759  022D  0834               	movf	___ftdiv@f1+1,w
  4760  022E  00B7               	movwf	??___ftdiv+1
  4761  022F  0835               	movf	___ftdiv@f1+2,w
  4762  0230  00B8               	movwf	??___ftdiv+2
  4763  0231  1003               	clrc
  4764  0232  0D37               	rlf	??___ftdiv+1,w
  4765  0233  0D38               	rlf	??___ftdiv+2,w
  4766  0234  00B9               	movwf	??___ftdiv+3
  4767  0235  0839               	movf	??___ftdiv+3,w
  4768  0236  00BE               	movwf	___ftdiv@exp
  4769  0237  083E               	movf	___ftdiv@exp,w
  4770  0238  1D03               	btfss	3,2
  4771  0239  2A41               	goto	l2111
  4772  023A  3000               	movlw	0
  4773  023B  00B0               	movwf	?___ftdiv
  4774  023C  3000               	movlw	0
  4775  023D  00B1               	movwf	?___ftdiv+1
  4776  023E  3000               	movlw	0
  4777  023F  00B2               	movwf	?___ftdiv+2
  4778  0240  0008               	return
  4779  0241                     l2111:	
  4780  0241  0830               	movf	___ftdiv@f2,w
  4781  0242  00B6               	movwf	??___ftdiv
  4782  0243  0831               	movf	___ftdiv@f2+1,w
  4783  0244  00B7               	movwf	??___ftdiv+1
  4784  0245  0832               	movf	___ftdiv@f2+2,w
  4785  0246  00B8               	movwf	??___ftdiv+2
  4786  0247  1003               	clrc
  4787  0248  0D37               	rlf	??___ftdiv+1,w
  4788  0249  0D38               	rlf	??___ftdiv+2,w
  4789  024A  00B9               	movwf	??___ftdiv+3
  4790  024B  0839               	movf	??___ftdiv+3,w
  4791  024C  00BF               	movwf	___ftdiv@sign
  4792  024D  083F               	movf	___ftdiv@sign,w
  4793  024E  1D03               	btfss	3,2
  4794  024F  2A57               	goto	l2117
  4795  0250  3000               	movlw	0
  4796  0251  00B0               	movwf	?___ftdiv
  4797  0252  3000               	movlw	0
  4798  0253  00B1               	movwf	?___ftdiv+1
  4799  0254  3000               	movlw	0
  4800  0255  00B2               	movwf	?___ftdiv+2
  4801  0256  0008               	return
  4802  0257                     l2117:	
  4803  0257  3000               	movlw	0
  4804  0258  00BB               	movwf	___ftdiv@f3
  4805  0259  3000               	movlw	0
  4806  025A  00BC               	movwf	___ftdiv@f3+1
  4807  025B  3000               	movlw	0
  4808  025C  00BD               	movwf	___ftdiv@f3+2
  4809  025D  3089               	movlw	137
  4810  025E  073F               	addwf	___ftdiv@sign,w
  4811  025F  00B6               	movwf	??___ftdiv
  4812  0260  0836               	movf	??___ftdiv,w
  4813  0261  02BE               	subwf	___ftdiv@exp,f
  4814  0262  0833               	movf	___ftdiv@f1,w
  4815  0263  00B6               	movwf	??___ftdiv
  4816  0264  0834               	movf	___ftdiv@f1+1,w
  4817  0265  00B7               	movwf	??___ftdiv+1
  4818  0266  0835               	movf	___ftdiv@f1+2,w
  4819  0267  00B8               	movwf	??___ftdiv+2
  4820  0268  3010               	movlw	16
  4821  0269                     u1415:	
  4822  0269  1003               	clrc
  4823  026A  0CB8               	rrf	??___ftdiv+2,f
  4824  026B  0CB7               	rrf	??___ftdiv+1,f
  4825  026C  0CB6               	rrf	??___ftdiv,f
  4826  026D  3EFF               	addlw	-1
  4827  026E  1D03               	skipz
  4828  026F  2A69               	goto	u1415
  4829  0270  0836               	movf	??___ftdiv,w
  4830  0271  00B9               	movwf	??___ftdiv+3
  4831  0272  0839               	movf	??___ftdiv+3,w
  4832  0273  00BF               	movwf	___ftdiv@sign
  4833  0274  0830               	movf	___ftdiv@f2,w
  4834  0275  00B6               	movwf	??___ftdiv
  4835  0276  0831               	movf	___ftdiv@f2+1,w
  4836  0277  00B7               	movwf	??___ftdiv+1
  4837  0278  0832               	movf	___ftdiv@f2+2,w
  4838  0279  00B8               	movwf	??___ftdiv+2
  4839  027A  3010               	movlw	16
  4840  027B                     u1425:	
  4841  027B  1003               	clrc
  4842  027C  0CB8               	rrf	??___ftdiv+2,f
  4843  027D  0CB7               	rrf	??___ftdiv+1,f
  4844  027E  0CB6               	rrf	??___ftdiv,f
  4845  027F  3EFF               	addlw	-1
  4846  0280  1D03               	skipz
  4847  0281  2A7B               	goto	u1425
  4848  0282  0836               	movf	??___ftdiv,w
  4849  0283  00B9               	movwf	??___ftdiv+3
  4850  0284  0839               	movf	??___ftdiv+3,w
  4851  0285  06BF               	xorwf	___ftdiv@sign,f
  4852  0286  3080               	movlw	128
  4853  0287  00B6               	movwf	??___ftdiv
  4854  0288  0836               	movf	??___ftdiv,w
  4855  0289  05BF               	andwf	___ftdiv@sign,f
  4856  028A  17B4               	bsf	___ftdiv@f1+1,7
  4857  028B  30FF               	movlw	255
  4858  028C  05B3               	andwf	___ftdiv@f1,f
  4859  028D  30FF               	movlw	255
  4860  028E  05B4               	andwf	___ftdiv@f1+1,f
  4861  028F  3000               	movlw	0
  4862  0290  05B5               	andwf	___ftdiv@f1+2,f
  4863  0291  17B1               	bsf	___ftdiv@f2+1,7
  4864  0292  30FF               	movlw	255
  4865  0293  05B0               	andwf	___ftdiv@f2,f
  4866  0294  30FF               	movlw	255
  4867  0295  05B1               	andwf	___ftdiv@f2+1,f
  4868  0296  3000               	movlw	0
  4869  0297  05B2               	andwf	___ftdiv@f2+2,f
  4870  0298  3018               	movlw	24
  4871  0299  00B6               	movwf	??___ftdiv
  4872  029A  0836               	movf	??___ftdiv,w
  4873  029B  00BA               	movwf	___ftdiv@cntr
  4874  029C                     l2131:	
  4875  029C  3001               	movlw	1
  4876  029D                     u1435:	
  4877  029D  1003               	clrc
  4878  029E  0DBB               	rlf	___ftdiv@f3,f
  4879  029F  0DBC               	rlf	___ftdiv@f3+1,f
  4880  02A0  0DBD               	rlf	___ftdiv@f3+2,f
  4881  02A1  3EFF               	addlw	-1
  4882  02A2  1D03               	skipz
  4883  02A3  2A9D               	goto	u1435
  4884  02A4  0832               	movf	___ftdiv@f2+2,w
  4885  02A5  0235               	subwf	___ftdiv@f1+2,w
  4886  02A6  1D03               	skipz
  4887  02A7  2AAE               	goto	u1445
  4888  02A8  0831               	movf	___ftdiv@f2+1,w
  4889  02A9  0234               	subwf	___ftdiv@f1+1,w
  4890  02AA  1D03               	skipz
  4891  02AB  2AAE               	goto	u1445
  4892  02AC  0830               	movf	___ftdiv@f2,w
  4893  02AD  0233               	subwf	___ftdiv@f1,w
  4894  02AE                     u1445:	
  4895  02AE  1C03               	skipc
  4896  02AF  2ABB               	goto	l2139
  4897  02B0  0830               	movf	___ftdiv@f2,w
  4898  02B1  02B3               	subwf	___ftdiv@f1,f
  4899  02B2  0831               	movf	___ftdiv@f2+1,w
  4900  02B3  1C03               	skipc
  4901  02B4  0F31               	incfsz	___ftdiv@f2+1,w
  4902  02B5  02B4               	subwf	___ftdiv@f1+1,f
  4903  02B6  0832               	movf	___ftdiv@f2+2,w
  4904  02B7  1C03               	skipc
  4905  02B8  0A32               	incf	___ftdiv@f2+2,w
  4906  02B9  02B5               	subwf	___ftdiv@f1+2,f
  4907  02BA  143B               	bsf	___ftdiv@f3,0
  4908  02BB                     l2139:	
  4909  02BB  3001               	movlw	1
  4910  02BC                     u1455:	
  4911  02BC  1003               	clrc
  4912  02BD  0DB3               	rlf	___ftdiv@f1,f
  4913  02BE  0DB4               	rlf	___ftdiv@f1+1,f
  4914  02BF  0DB5               	rlf	___ftdiv@f1+2,f
  4915  02C0  3EFF               	addlw	-1
  4916  02C1  1D03               	skipz
  4917  02C2  2ABC               	goto	u1455
  4918  02C3  3001               	movlw	1
  4919  02C4  02BA               	subwf	___ftdiv@cntr,f
  4920  02C5  1D03               	btfss	3,2
  4921  02C6  2A9C               	goto	l2131
  4922  02C7  083B               	movf	___ftdiv@f3,w
  4923  02C8  00A0               	movwf	___ftpack@arg
  4924  02C9  083C               	movf	___ftdiv@f3+1,w
  4925  02CA  00A1               	movwf	___ftpack@arg+1
  4926  02CB  083D               	movf	___ftdiv@f3+2,w
  4927  02CC  00A2               	movwf	___ftpack@arg+2
  4928  02CD  083E               	movf	___ftdiv@exp,w
  4929  02CE  00B6               	movwf	??___ftdiv
  4930  02CF  0836               	movf	??___ftdiv,w
  4931  02D0  00A3               	movwf	___ftpack@exp
  4932  02D1  083F               	movf	___ftdiv@sign,w
  4933  02D2  00B7               	movwf	??___ftdiv+1
  4934  02D3  0837               	movf	??___ftdiv+1,w
  4935  02D4  00A4               	movwf	___ftpack@sign
  4936  02D5  120A  118A  23F4   	fcall	___ftpack
  4937  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  4938  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  4939  02DA  0820               	movf	?___ftpack,w
  4940  02DB  00B0               	movwf	?___ftdiv
  4941  02DC  0821               	movf	?___ftpack+1,w
  4942  02DD  00B1               	movwf	?___ftdiv+1
  4943  02DE  0822               	movf	?___ftpack+2,w
  4944  02DF  00B2               	movwf	?___ftdiv+2
  4945  02E0  0008               	return
  4946  02E1                     __end_of___ftdiv:	
  4947                           
  4948                           	psect	text27
  4949  0674                     __ptext27:	
  4950 ;; *************** function ___altoft *****************
  4951 ;; Defined at:
  4952 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  c               4    8[BANK0 ] long 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  sign            1   15[BANK0 ] unsigned char 
  4957 ;;  exp             1   14[BANK0 ] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  3    8[BANK0 ] float 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         0       4       0       0       0
  4968 ;;      Locals:         0       2       0       0       0
  4969 ;;      Temps:          0       2       0       0       0
  4970 ;;      Totals:         0       8       0       0       0
  4971 ;;Total ram usage:        8 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    3
  4974 ;; This function calls:
  4975 ;;		___ftpack
  4976 ;; This function is called by:
  4977 ;;		_main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function ___altoft
  4983  0674                     ___altoft:	
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4987  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4989  0676  01AF               	clrf	___altoft@sign
  4990  0677  308E               	movlw	142
  4991  0678  00AC               	movwf	??___altoft
  4992  0679  082C               	movf	??___altoft,w
  4993  067A  00AE               	movwf	___altoft@exp
  4994  067B  1FAB               	btfss	___altoft@c+3,7
  4995  067C  2E8A               	goto	l2099
  4996  067D  09A8               	comf	___altoft@c,f
  4997  067E  09A9               	comf	___altoft@c+1,f
  4998  067F  09AA               	comf	___altoft@c+2,f
  4999  0680  09AB               	comf	___altoft@c+3,f
  5000  0681  0AA8               	incf	___altoft@c,f
  5001  0682  1903               	skipnz
  5002  0683  0AA9               	incf	___altoft@c+1,f
  5003  0684  1903               	skipnz
  5004  0685  0AAA               	incf	___altoft@c+2,f
  5005  0686  1903               	skipnz
  5006  0687  0AAB               	incf	___altoft@c+3,f
  5007  0688  01AF               	clrf	___altoft@sign
  5008  0689  0AAF               	incf	___altoft@sign,f
  5009  068A                     l2099:	
  5010  068A  30FF               	movlw	255
  5011  068B  052B               	andwf	___altoft@c+3,w
  5012  068C  1903               	btfsc	3,2
  5013  068D  2E9C               	goto	l2101
  5014  068E  3001               	movlw	1
  5015  068F                     u1375:	
  5016  068F  1003               	clrc
  5017  0690  0CAB               	rrf	___altoft@c+3,f
  5018  0691  0CAA               	rrf	___altoft@c+2,f
  5019  0692  0CA9               	rrf	___altoft@c+1,f
  5020  0693  0CA8               	rrf	___altoft@c,f
  5021  0694  3EFF               	addlw	-1
  5022  0695  1D03               	skipz
  5023  0696  2E8F               	goto	u1375
  5024  0697  3001               	movlw	1
  5025  0698  00AC               	movwf	??___altoft
  5026  0699  082C               	movf	??___altoft,w
  5027  069A  07AE               	addwf	___altoft@exp,f
  5028  069B  2E8A               	goto	l2099
  5029  069C                     l2101:	
  5030  069C  0828               	movf	___altoft@c,w
  5031  069D  00A0               	movwf	___ftpack@arg
  5032  069E  0829               	movf	___altoft@c+1,w
  5033  069F  00A1               	movwf	___ftpack@arg+1
  5034  06A0  082A               	movf	___altoft@c+2,w
  5035  06A1  00A2               	movwf	___ftpack@arg+2
  5036  06A2  082E               	movf	___altoft@exp,w
  5037  06A3  00AC               	movwf	??___altoft
  5038  06A4  082C               	movf	??___altoft,w
  5039  06A5  00A3               	movwf	___ftpack@exp
  5040  06A6  082F               	movf	___altoft@sign,w
  5041  06A7  00AD               	movwf	??___altoft+1
  5042  06A8  082D               	movf	??___altoft+1,w
  5043  06A9  00A4               	movwf	___ftpack@sign
  5044  06AA  120A  118A  23F4   	fcall	___ftpack
  5045  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  5046  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  5047  06AF  0820               	movf	?___ftpack,w
  5048  06B0  00A8               	movwf	?___altoft
  5049  06B1  0821               	movf	?___ftpack+1,w
  5050  06B2  00A9               	movwf	?___altoft+1
  5051  06B3  0822               	movf	?___ftpack+2,w
  5052  06B4  00AA               	movwf	?___altoft+2
  5053  06B5  0008               	return
  5054  06B6                     __end_of___altoft:	
  5055                           
  5056                           	psect	text28
  5057  03F4                     __ptext28:	
  5058 ;; *************** function ___ftpack *****************
  5059 ;; Defined at:
  5060 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  arg             3    0[BANK0 ] unsigned um
  5063 ;;  exp             1    3[BANK0 ] unsigned char 
  5064 ;;  sign            1    4[BANK0 ] unsigned char 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  3    0[BANK0 ] float 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5076 ;;      Params:         0       5       0       0       0
  5077 ;;      Locals:         0       0       0       0       0
  5078 ;;      Temps:          0       3       0       0       0
  5079 ;;      Totals:         0       8       0       0       0
  5080 ;;Total ram usage:        8 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    2
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		___altoft
  5087 ;;		___ftdiv
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           
  5092                           ;psect for function ___ftpack
  5093  03F4                     ___ftpack:	
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5097  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  5098  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  5099  03F6  0823               	movf	___ftpack@exp,w
  5100  03F7  1903               	btfsc	3,2
  5101  03F8  2BFE               	goto	l1911
  5102  03F9  0822               	movf	___ftpack@arg+2,w
  5103  03FA  0421               	iorwf	___ftpack@arg+1,w
  5104  03FB  0420               	iorwf	___ftpack@arg,w
  5105  03FC  1D03               	skipz
  5106  03FD  2C11               	goto	l1917
  5107  03FE                     l1911:	
  5108  03FE  3000               	movlw	0
  5109  03FF  00A0               	movwf	?___ftpack
  5110  0400  3000               	movlw	0
  5111  0401  00A1               	movwf	?___ftpack+1
  5112  0402  3000               	movlw	0
  5113  0403  00A2               	movwf	?___ftpack+2
  5114  0404  0008               	return
  5115  0405                     l1915:	
  5116  0405  3001               	movlw	1
  5117  0406  00A5               	movwf	??___ftpack
  5118  0407  0825               	movf	??___ftpack,w
  5119  0408  07A3               	addwf	___ftpack@exp,f
  5120  0409  3001               	movlw	1
  5121  040A                     u1175:	
  5122  040A  1003               	clrc
  5123  040B  0CA2               	rrf	___ftpack@arg+2,f
  5124  040C  0CA1               	rrf	___ftpack@arg+1,f
  5125  040D  0CA0               	rrf	___ftpack@arg,f
  5126  040E  3EFF               	addlw	-1
  5127  040F  1D03               	skipz
  5128  0410  2C0A               	goto	u1175
  5129  0411                     l1917:	
  5130  0411  30FE               	movlw	254
  5131  0412  0522               	andwf	___ftpack@arg+2,w
  5132  0413  1903               	btfsc	3,2
  5133  0414  2C2C               	goto	l658
  5134  0415  2C05               	goto	l1915
  5135  0416                     l1919:	
  5136  0416  3001               	movlw	1
  5137  0417  00A5               	movwf	??___ftpack
  5138  0418  0825               	movf	??___ftpack,w
  5139  0419  07A3               	addwf	___ftpack@exp,f
  5140  041A  3001               	movlw	1
  5141  041B  07A0               	addwf	___ftpack@arg,f
  5142  041C  3000               	movlw	0
  5143  041D  1803               	skipnc
  5144  041E  3001               	movlw	1
  5145  041F  07A1               	addwf	___ftpack@arg+1,f
  5146  0420  3000               	movlw	0
  5147  0421  1803               	skipnc
  5148  0422  3001               	movlw	1
  5149  0423  07A2               	addwf	___ftpack@arg+2,f
  5150  0424  3001               	movlw	1
  5151  0425                     u1195:	
  5152  0425  1003               	clrc
  5153  0426  0CA2               	rrf	___ftpack@arg+2,f
  5154  0427  0CA1               	rrf	___ftpack@arg+1,f
  5155  0428  0CA0               	rrf	___ftpack@arg,f
  5156  0429  3EFF               	addlw	-1
  5157  042A  1D03               	skipz
  5158  042B  2C25               	goto	u1195
  5159  042C                     l658:	
  5160  042C  30FF               	movlw	255
  5161  042D  0522               	andwf	___ftpack@arg+2,w
  5162  042E  1903               	btfsc	3,2
  5163  042F  2C3B               	goto	l1927
  5164  0430  2C16               	goto	l1919
  5165  0431                     l1925:	
  5166  0431  3001               	movlw	1
  5167  0432  02A3               	subwf	___ftpack@exp,f
  5168  0433  3001               	movlw	1
  5169  0434                     u1215:	
  5170  0434  1003               	clrc
  5171  0435  0DA0               	rlf	___ftpack@arg,f
  5172  0436  0DA1               	rlf	___ftpack@arg+1,f
  5173  0437  0DA2               	rlf	___ftpack@arg+2,f
  5174  0438  3EFF               	addlw	-1
  5175  0439  1D03               	skipz
  5176  043A  2C34               	goto	u1215
  5177  043B                     l1927:	
  5178  043B  1BA1               	btfsc	___ftpack@arg+1,7
  5179  043C  2C41               	goto	l665
  5180  043D  3002               	movlw	2
  5181  043E  0223               	subwf	___ftpack@exp,w
  5182  043F  1803               	skipnc
  5183  0440  2C31               	goto	l1925
  5184  0441                     l665:	
  5185  0441  1823               	btfsc	___ftpack@exp,0
  5186  0442  2C49               	goto	l666
  5187  0443  30FF               	movlw	255
  5188  0444  05A0               	andwf	___ftpack@arg,f
  5189  0445  307F               	movlw	127
  5190  0446  05A1               	andwf	___ftpack@arg+1,f
  5191  0447  30FF               	movlw	255
  5192  0448  05A2               	andwf	___ftpack@arg+2,f
  5193  0449                     l666:	
  5194  0449  1003               	clrc
  5195  044A  0CA3               	rrf	___ftpack@exp,f
  5196  044B  0823               	movf	___ftpack@exp,w
  5197  044C  00A5               	movwf	??___ftpack
  5198  044D  01A6               	clrf	??___ftpack+1
  5199  044E  01A7               	clrf	??___ftpack+2
  5200  044F  3010               	movlw	16
  5201  0450                     u1255:	
  5202  0450  1003               	clrc
  5203  0451  0DA5               	rlf	??___ftpack,f
  5204  0452  0DA6               	rlf	??___ftpack+1,f
  5205  0453  0DA7               	rlf	??___ftpack+2,f
  5206  0454  3EFF               	addlw	-1
  5207  0455  1D03               	skipz
  5208  0456  2C50               	goto	u1255
  5209  0457  0825               	movf	??___ftpack,w
  5210  0458  04A0               	iorwf	___ftpack@arg,f
  5211  0459  0826               	movf	??___ftpack+1,w
  5212  045A  04A1               	iorwf	___ftpack@arg+1,f
  5213  045B  0827               	movf	??___ftpack+2,w
  5214  045C  04A2               	iorwf	___ftpack@arg+2,f
  5215  045D  0824               	movf	___ftpack@sign,w
  5216  045E  1903               	btfsc	3,2
  5217  045F  0008               	return
  5218  0460  17A2               	bsf	___ftpack@arg+2,7
  5219  0461  0008               	return
  5220  0462                     __end_of___ftpack:	
  5221                           
  5222                           	psect	text29
  5223  0EEA                     __ptext29:	
  5224 ;; *************** function _MCLR_init *****************
  5225 ;; Defined at:
  5226 ;;		line 35 in file "MCLR_reset.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  nin             2    0[BANK0 ] PTR unsigned char 
  5231 ;;		 -> RAM(512), 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		wreg, fsr0l, fsr0h
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5241 ;;      Params:         0       0       0       0       0
  5242 ;;      Locals:         0       2       0       0       0
  5243 ;;      Temps:          0       0       0       0       0
  5244 ;;      Totals:         0       2       0       0       0
  5245 ;;Total ram usage:        2 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    2
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _MCLR_init
  5257  0EEA                     _MCLR_init:	
  5258                           
  5259                           ;MCLR_reset.c: 37: uint8_t *nin;
  5260                           ;MCLR_reset.c: 38: nin = 0x09;
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _MCLR_init: [wregfsr0]
  5264  0EEA  3009               	movlw	9
  5265  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0EED  00A0               	movwf	MCLR_init@nin
  5268  0EEE  3000               	movlw	0
  5269  0EEF  00A1               	movwf	MCLR_init@nin+1
  5270                           
  5271                           ;MCLR_reset.c: 41: TRISEbits.TRISE1 = 0;
  5272  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  5273  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  5274  0EF2  1089               	bcf	9,1	;volatile
  5275                           
  5276                           ;MCLR_reset.c: 42: TRISEbits.TRISE0 = 0;
  5277  0EF3  1009               	bcf	9,0	;volatile
  5278                           
  5279                           ;MCLR_reset.c: 45: *nin = 0x03;
  5280  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  5281  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  5282  0EF6  0820               	movf	MCLR_init@nin,w
  5283  0EF7  0084               	movwf	4
  5284  0EF8  1383               	bcf	3,7
  5285  0EF9  1821               	btfsc	MCLR_init@nin+1,0
  5286  0EFA  1783               	bsf	3,7
  5287  0EFB  3003               	movlw	3
  5288  0EFC  0080               	movwf	0
  5289  0EFD  0008               	return
  5290  0EFE                     __end_of_MCLR_init:	
  5291                           
  5292                           	psect	text30
  5293  06B6                     __ptext30:	
  5294 ;; *************** function _get_uart *****************
  5295 ;; Defined at:
  5296 ;;		line 105 in file "OBC1_main.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;		None               void
  5303 ;; Registers used:
  5304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0
  5312 ;;      Temps:          7       0       0       0       0
  5313 ;;      Totals:         7       0       0       0       0
  5314 ;;Total ram usage:        7 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    1
  5317 ;; This function calls:
  5318 ;;		_getch
  5319 ;; This function is called by:
  5320 ;;		Interrupt level 1
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _get_uart
  5326  06B6                     _get_uart:	
  5327                           
  5328                           ;OBC1_main.c: 107: if(PIR1bits.RCIF == 1)
  5329  06B6  1E8C               	btfss	12,5	;volatile
  5330  06B7  2EEB               	goto	i1l42
  5331                           
  5332                           ;OBC1_main.c: 108: {
  5333                           ;OBC1_main.c: 109: PORTDbits.RD6 = 1;
  5334  06B8  1708               	bsf	8,6	;volatile
  5335                           
  5336                           ;OBC1_main.c: 110: _delay((unsigned long)((500)*(20000000/4000.0)));
  5337  06B9  300D               	movlw	13
  5338  06BA  00F4               	movwf	??_get_uart+2
  5339  06BB  30AF               	movlw	175
  5340  06BC  00F3               	movwf	??_get_uart+1
  5341  06BD  30C1               	movlw	193
  5342  06BE  00F2               	movwf	??_get_uart
  5343  06BF                     u179_27:	
  5344  06BF  0BF2               	decfsz	??_get_uart,f
  5345  06C0  2EBF               	goto	u179_27
  5346  06C1  0BF3               	decfsz	??_get_uart+1,f
  5347  06C2  2EBF               	goto	u179_27
  5348  06C3  0BF4               	decfsz	??_get_uart+2,f
  5349  06C4  2EBF               	goto	u179_27
  5350  06C5  0000               	nop
  5351                           
  5352                           ;OBC1_main.c: 111: PIR1bits.RCIF = 0;
  5353  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  5354  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  5355  06C8  128C               	bcf	12,5	;volatile
  5356                           
  5357                           ;OBC1_main.c: 112: I2CTEMP_data[uart_interrupt] = getch();
  5358  06C9  120A  158A  2737  120A  118A  	fcall	_getch
  5359  06CE  00F2               	movwf	??_get_uart
  5360  06CF  0879               	movf	_uart_interrupt,w
  5361  06D0  3E5A               	addlw	(low (_I2CTEMP_data| 0))& (0+255)
  5362  06D1  0084               	movwf	4
  5363  06D2  0872               	movf	??_get_uart,w
  5364  06D3  1383               	bcf	3,7	;select IRP bank0
  5365  06D4  0080               	movwf	0
  5366                           
  5367                           ;OBC1_main.c: 113: uart_interrupt++;
  5368  06D5  3001               	movlw	1
  5369  06D6  07F9               	addwf	_uart_interrupt,f
  5370  06D7  1803               	skipnc
  5371  06D8  0AFA               	incf	_uart_interrupt+1,f
  5372  06D9  3000               	movlw	0
  5373  06DA  07FA               	addwf	_uart_interrupt+1,f
  5374                           
  5375                           ;OBC1_main.c: 114: PORTDbits.RD6 = 0;
  5376  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  5377  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  5378  06DD  1308               	bcf	8,6	;volatile
  5379                           
  5380                           ;OBC1_main.c: 115: _delay((unsigned long)((500)*(20000000/4000.0)));
  5381  06DE  300D               	movlw	13
  5382  06DF  00F4               	movwf	??_get_uart+2
  5383  06E0  30AF               	movlw	175
  5384  06E1  00F3               	movwf	??_get_uart+1
  5385  06E2  30C1               	movlw	193
  5386  06E3  00F2               	movwf	??_get_uart
  5387  06E4                     u180_27:	
  5388  06E4  0BF2               	decfsz	??_get_uart,f
  5389  06E5  2EE4               	goto	u180_27
  5390  06E6  0BF3               	decfsz	??_get_uart+1,f
  5391  06E7  2EE4               	goto	u180_27
  5392  06E8  0BF4               	decfsz	??_get_uart+2,f
  5393  06E9  2EE4               	goto	u180_27
  5394  06EA  0000               	nop
  5395  06EB                     i1l42:	
  5396  06EB  0878               	movf	??_get_uart+6,w
  5397  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  5398  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  5399  06EE  00FF               	movwf	127
  5400  06EF  0877               	movf	??_get_uart+5,w
  5401  06F0  008A               	movwf	10
  5402  06F1  0876               	movf	??_get_uart+4,w
  5403  06F2  0084               	movwf	4
  5404  06F3  0E75               	swapf	(??_get_uart+3)^(0+-128),w
  5405  06F4  0083               	movwf	3
  5406  06F5  0EFE               	swapf	126,f
  5407  06F6  0E7E               	swapf	126,w
  5408  06F7  0009               	retfie
  5409  06F8                     __end_of_get_uart:	
  5410                           
  5411                           	psect	intentry
  5412  0004                     __pintentry:	
  5413                           ;incstack = 0
  5414                           ; Regs used in _get_uart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5415                           
  5416  0004                     interrupt_function:	
  5417  007E                     saved_w	set	btemp
  5418  0004  00FE               	movwf	btemp
  5419  0005  0E03               	swapf	3,w
  5420  0006  00F5               	movwf	??_get_uart+3
  5421  0007  0804               	movf	4,w
  5422  0008  00F6               	movwf	??_get_uart+4
  5423  0009  080A               	movf	10,w
  5424  000A  00F7               	movwf	??_get_uart+5
  5425  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5426  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5427  000D  087F               	movf	btemp+1,w
  5428  000E  00F8               	movwf	??_get_uart+6
  5429  000F  120A  118A  2EB6   	ljmp	_get_uart
  5430                           
  5431                           	psect	text31
  5432  0F37                     __ptext31:	
  5433 ;; *************** function _getch *****************
  5434 ;; Defined at:
  5435 ;;		line 90 in file "uart_serial.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  count           2    0[COMMON] int 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      unsigned char 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, btemp+1
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5449 ;;      Params:         0       0       0       0       0
  5450 ;;      Locals:         2       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0
  5452 ;;      Totals:         2       0       0       0       0
  5453 ;;Total ram usage:        2 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_get_uart
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _getch
  5464  0F37                     _getch:	
  5465                           
  5466                           ;uart_serial.c: 92: int count = 0;
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _getch: [wreg+status,2+btemp+1]
  5470  0F37  01F0               	clrf	getch@count
  5471  0F38  01F1               	clrf	getch@count+1
  5472                           
  5473                           ;uart_serial.c: 93: while(!RCIF && count <= 100)
  5474  0F39  2F43               	goto	i1l2035
  5475  0F3A                     i1l2031:	
  5476                           
  5477                           ;uart_serial.c: 94: {
  5478                           ;uart_serial.c: 95: count++;
  5479  0F3A  3001               	movlw	1
  5480  0F3B  07F0               	addwf	getch@count,f
  5481  0F3C  1803               	skipnc
  5482  0F3D  0AF1               	incf	getch@count+1,f
  5483  0F3E  3000               	movlw	0
  5484  0F3F  07F1               	addwf	getch@count+1,f
  5485                           
  5486                           ;uart_serial.c: 96: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5487  0F40  2F41               	nop2	;2 cycle nop
  5488  0F41  2F42               	nop2	;2 cycle nop
  5489  0F42  0000               	nop
  5490  0F43                     i1l2035:	
  5491  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  5492  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  5493  0F45  1A8C               	btfsc	12,5	;volatile
  5494  0F46  2F52               	goto	i1l2039
  5495  0F47  0871               	movf	getch@count+1,w
  5496  0F48  3A80               	xorlw	128
  5497  0F49  00FF               	movwf	127
  5498  0F4A  3080               	movlw	128
  5499  0F4B  027F               	subwf	127,w
  5500  0F4C  1D03               	skipz
  5501  0F4D  2F50               	goto	u132_25
  5502  0F4E  3065               	movlw	101
  5503  0F4F  0270               	subwf	getch@count,w
  5504  0F50                     u132_25:	
  5505  0F50  1C03               	skipc
  5506  0F51  2F3A               	goto	i1l2031
  5507  0F52                     i1l2039:	
  5508                           
  5509                           ;uart_serial.c: 97: }
  5510                           ;uart_serial.c: 98: return RCREG;
  5511  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  5512  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  5513  0F54  081A               	movf	26,w	;volatile
  5514  0F55  0008               	return
  5515  0F56                     __end_of_getch:	
  5516  007E                     btemp	set	126	;btemp
  5517  007E                     wtemp	set	126
  5518  007E                     wtemp0	set	126
  5519  0080                     wtemp1	set	128
  5520  0082                     wtemp2	set	130
  5521  0084                     wtemp3	set	132
  5522  0086                     wtemp4	set	134
  5523  0088                     wtemp5	set	136
  5524  007F                     wtemp6	set	127
  5525  007E                     ttemp	set	126
  5526  007E                     ttemp0	set	126
  5527  0081                     ttemp1	set	129
  5528  0084                     ttemp2	set	132
  5529  0087                     ttemp3	set	135
  5530  007F                     ttemp4	set	127
  5531  007E                     ltemp	set	126
  5532  007E                     ltemp0	set	126
  5533  0082                     ltemp1	set	130
  5534  0086                     ltemp2	set	134
  5535  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     44      60
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK1[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK1[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(BANK0[2]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(BANK0[2]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(BANK0[3]), 

    double_data_set@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(BANK0[2]), 

    uint16_data_set@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(BANK0[2]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(BANK0[2]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(BANK0[2]), 

    MCLR_init@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(BANK0[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _get_uart in COMMON

    _get_uart->_getch

Critical Paths under _main in BANK0

    _main->_command
    _command->_sent_data_set
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set
    _LED_data_set->_sent_data_set
    _sent_data_set->_double_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    ___ftdiv->___altoft
    ___altoft->___ftpack

Critical Paths under _get_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _get_uart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _get_uart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _get_uart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   14054
                                             33 BANK0     11    11      0
                          _MCLR_init
                           ___altoft
                            ___ftdiv
                             ___ftge
                        _ad_con_init
                          _check_bit
                            _command
                   _spi_master_start
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command                                              4     4      0    9028
                                             29 BANK0      4     4      0
                       _LED_data_set
                        _cw_data_set
                        _get_cw_data
                              _putch
                   _send_data_master
                      _sent_data_set
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _send_data_master                                     4     2      2    1932
                                             15 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (3) _packet_send_master                                   3     2      1    1654
                                             12 BANK0      3     2      1
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (4) _send_payload                                         6     5      1     856
                                              6 BANK0      6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      6     5      1     591
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_cw_data                                          3     3      0     426
                                             13 BANK0      3     3      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _spi_master_receive                                   5     5      0      91
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           10     8      2     290
                                              6 BANK0      7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (4) _bit_shift                                            6     5      1     190
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _cw_data_set                                          3     3      0     947
                                              4 BANK0      2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _LED_data_set                                         0     0      0    2544
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (2) _sent_data_set                                        9     5      4    2544
                                             20 BANK0      9     5      4
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _uint16_data_set                                      8     5      3     487
                                              6 BANK0      8     5      3
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _uint16_to_byte_array                                 6     3      3     216
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (3) _double_data_set                                     10     7      3     555
                                             10 BANK0     10     7      3
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _double_to_byte_array                                10     7      3     286
                                              0 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_bit                                            6     6      0      92
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftge                                              12     6      6     242
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2757
                                             16 BANK0     16    10      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    1820
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _MCLR_init                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _get_uart                                             7     7      0      24
                                              2 COMMON     7     7      0
                              _getch
 ---------------------------------------------------------------------------------
 (7) _getch                                                2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCLR_init
   ___altoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   _ad_con_init
   _check_bit
   _command
     _LED_data_set
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _cw_data_set
       _uint8_data_set
     _get_cw_data
       _get_adcon
         _bit_shift
       _spi_master_receive
       _spi_master_start
     _putch
     _send_data_master
       _packet_send_master
         _send_payload
           _spi_master_send
         _spi_master_send
     _sent_data_set
       ___wmul
       _double_data_set
         _double_to_byte_array
       _uint16_data_set
         _uint16_to_byte_array
       _uint8_data_set
     _spi_master_send
   _spi_master_start
   _sysprot_init
   _uart_init

 _get_uart (ROOT)
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      67       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      3C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      67      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Mar 15 21:35:29 2016

                        ___altoft@exp 002E                                     pc 0002  
                         __CFG_CP$OFF 0000                           _SSPSTATbits 0094  
                       ___altoft@sign 002F                                    l50 04C5  
                                  l86 07DE                ??_uint16_to_byte_array 0023  
                                  _cw 004D                                    fsr 0004  
                 ___wmul@multiplicand 0022                  __size_of_ad_con_init 000B  
                                 l111 05EC                                   l120 05FB  
                                 l122 05FD                                   l131 061F  
                                 l116 05EF                                   l141 059F  
                                 l136 059C                                   l129 061D  
                                 l145 05AB                                   l250 0530  
                                 l154 05CE                                   l402 0197  
                                 l147 05AD                                   l156 05D0  
                                 l407 0228                                   l193 0EB8  
                                 l282 0733                                   l274 06F8  
                                 l665 0441                                   l497 0F62  
                                 l666 0449                                   l658 042C  
                        __CFG_CPD$OFF 0000                                   u925 0781  
                                 u935 0796                  uint8_data_set@p_data 0020  
                                 fsr0 0004                                   indf 0000  
         send_data_master@destination 0032                ??_double_to_byte_array 0023  
                        __CFG_FOSC$HS 0000                           command@data 0040  
                        __CFG_LVP$OFF 0000                          ___ftdiv@cntr 003A  
                        ___ftdiv@sign 003F                                  l2101 069C  
                                l2111 0241                                  l2023 04B7  
                                l2131 029C                                  l2117 0257  
                                l2151 055A                                  l2225 0110  
                                l2139 02BB                                  l2155 0581  
                                l2237 015E                                  l2183 0066  
                                l1721 0730                                  l1713 0719  
                                l2099 068A                                  l1811 05FF  
                                l1643 05AF                                  l1821 0608  
                                l1813 0607                                  l1653 05B9  
                                l1645 05B7                                  l1911 03FE  
                                l1743 076B                                  l1735 0754  
                                l1807 05F2                                  l1639 05A2  
                                l1825 0621                                  l1657 05D2  
                                l1915 0405                                  l1835 04FB  
                                l1843 0523                                  l1827 062A  
                                l1659 05DB                                  l1747 0636  
                                l1925 0431                                  l1917 0411  
                                l1773 0F5A                                  l1837 0507  
                                l1765 0652                                  l1927 043B  
                                l1919 0416                                  l1839 0515  
                                l1767 0630                                  l1769 066F  
                                l1699 0F79                                  l1971 01D3  
                                l1983 01DE                                  l1959 0173  
                                l1985 0204                                  l1997 021B  
                                u1215 0434                                  u1055 0F63  
                                u1065 0F6A                                  u1501 0574  
                                u1502 0575                                  u1255 0450  
                                u1175 040A                                  u1415 0269  
                                u1503 057A                                  u1504 057B  
                                u1425 027B                                  u1530 00FD  
                                u1195 0425                                  u1435 029D  
                                u1531 00FE                                  u1532 0103  
                                u1445 02AE                                  u1533 0104  
                                u1375 068F                                  u1455 02BC  
                                u1481 054D                                  u1482 054E  
                                u1483 0553                                  u1707 019E  
                                u1627 005F                                  u1484 0554  
                                u1717 01AE                                  u1637 006F  
                                u1727 01EC                                  u1647 0086  
                                u1737 01FC                                  u1657 0097  
                                u1747 047C                                  u1667 00B0  
                                u1757 048C                                  u1677 00C1  
                                u1767 049F                                  u1687 0154  
                                u1777 04AF                                  u1697 0167  
                                u1787 04BF                                  i1l42 06EB  
                                _RCIF 0065                                  _TXIF 0064  
                        __CFG_WRT$OFF 0000                                  _main 002A  
                        ___ftpack@arg 0020                      ??_uint8_data_set 0023  
                        ___ftpack@exp 0023                                  btemp 007E  
                       __CFG_BOREN$ON 0000                                  ltemp 007E  
                __end_of_sysprot_init 0800                                  start 0012  
                                ttemp 007E                                  wtemp 007E  
                  __size_of_MCLR_init 0014         spi_master_receive@destination 0024  
                   ??_double_data_set 002D                                 ?_main 0070  
                       __CFG_WDTE$OFF 0000                       __end_of___ftdiv 02E1  
              uint8_data_set@data_len 0022                                 _RCREG 001A  
                               _RCSTA 0018                                 _SPBRG 0099  
                               _TXREG 0019                                 _TXSTA 0098  
                       __CFG_PWRTE$ON 0000                       __end_of_command 0229  
                               _getch 0F37      double_to_byte_array@p_data_array 0022  
                       ___ftpack@sign 0024              __end_of_send_data_master 0F1A  
                               _putch 0EB5                                 main@t 0048  
                       ?_LED_data_set 0070                      ?_uint16_data_set 0026  
                               pclath 000A                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                    bit_shift@p_adres 0020           __size_of_spi_master_receive 004C  
                     __initialization 0015                 uint16_data_set@p_data 0026  
                        __end_of_main 016F                                ??_main 0041  
                      get_cw_data@buf 002E      uint16_to_byte_array@p_data_array 0022  
                   __end_of_MCLR_init 0EFE                                ?_getch 0070  
                              _ADCON0 001F                                _ADCON1 009F  
                    __end_of___altoft 06B6                        ??_LED_data_set 003D  
                              _ADRESH 001E                                _ADRESL 009E  
                              ?_putch 0070                      __end_of___ftpack 0462  
      spi_master_send@timeout_counter 0023                                i1l2031 0F3A  
                              i1l2035 0F43                                i1l2039 0F52  
                              u132_25 0F50                                u180_27 06E4  
                              u179_27 06BF                                _SSPBUF 0013  
          __end_of_packet_send_master 07D7                  __size_of_get_cw_data 0087  
                    __end_of_get_uart 06F8                                ___ftge 0531  
                __size_of_cw_data_set 008C                                ___wmul 0F56  
                           ??___ftdiv 0036                 double_data_set@p_data 002A  
                              _packet 00A0                             ??_command 003D  
                              saved_w 007E             __size_of_spi_master_start 001D  
               __size_of_sysprot_init 0005               __end_of__initialization 0026  
                          ___altoft@c 0028                 send_payload@index_pos 002A  
                          ___ftge@ff1 0020                            ___ftge@ff2 0023  
                          ___ftdiv@f1 0033                            ___ftdiv@f2 0030  
                          ___ftdiv@f3 003B                 send_payload@p_payload 0026  
                      __pcstackCOMMON 0070                 __end_of_sent_data_set 0531  
                       check_bit@data 0023                         __end_of_getch 0F56  
                  __size_of_check_bit 006C                   spi_master_send@data 0020  
                       __end_of_putch 0EBD                    __size_of_bit_shift 0039  
                        _sysprot_init 07FB                    __size_of_get_adcon 0024  
                             ??_getch 0070                               ??_putch 0020  
                        MCLR_init@nin 0020                            __pbssBANK0 004C  
                          __pbssBANK1 00A0            uint16_to_byte_array@p_data 0020  
            __size_of_spi_master_send 0050     spi_master_receive@timeout_counter 0022  
                     _double_data_set 0733                            __pmaintext 002A  
                             ?___ftge 0020                               ?___wmul 0020  
                       ??_ad_con_init 0020                            __pintentry 0004  
                __end_of_LED_data_set 0EEA                             ?___altoft 0028  
                           ?___ftpack 0020                         ?_send_payload 0026  
       __size_of_uint16_to_byte_array 002F                    __size_of_uart_init 000C  
       __size_of_double_to_byte_array 002D                             ?_get_uart 0070  
             bit_shift@bit_mask_for_l 0808                     __end_of_check_bit 04CE  
                          __stringtab 0800                     ?_send_data_master 002F  
                  ??_send_data_master 0031                    uint16_data_set@buf 002A  
                   __end_of_bit_shift 07A7                     __end_of_get_adcon 07FB  
                   check_bit@bit_mask 0809                       __size_of___ftge 005F  
                             ___ftdiv 0229                       __size_of___wmul 0023  
                          check_bit@i 0025               spi_master_receive@dummy 0021  
                          ??___altoft 002C                        ??_send_payload 0027  
                          ??___ftpack 0025                               __ptext1 0ED0  
                             __ptext2 07FB                               __ptext3 016F  
                             __ptext4 0EFE                               __ptext5 07A7  
                             __ptext6 062C                               __ptext7 0590  
                             __ptext8 0EB5                               __ptext9 036D  
                             _command 016F                   __end_of_ad_con_init 0ED0  
                cw_data_set@p_cw_data 0025                      _spi_master_start 0F1A  
                             clrloop0 0EBE                            ??_get_uart 0072  
                end_of_initialization 0026               __end_of_double_data_set 076E  
                           _MCLR_init 0EEA            __end_of_spi_master_receive 062C  
           sent_data_set@byte_of_data 0037                     __end_of_uart_init 0EDC  
           __end_ofcheck_bit@bit_mask 080A              __size_of_uint16_data_set 003B  
                   ??_spi_master_send 0021                      double_data_set@i 0033  
             __size_of_uint8_data_set 002B                             _PORTAbits 0005  
                  _packet_send_master 07A7                             _PORTCbits 0007  
                           _PORTDbits 0008                 double_to_byte_array@i 0029  
                          getch@count 0070                             _TRISAbits 0085  
                           _TRISCbits 0087                             _TRISDbits 0088  
                           _TRISEbits 0089                   ?_packet_send_master 002C  
                          ?_MCLR_init 0070                           ___ftdiv@exp 003E  
                       ??_get_cw_data 002D                         ??_cw_data_set 0024  
               __size_of_LED_data_set 000E               uint16_data_set@data_len 0028  
               sent_data_set@data_len 0036                  ??_packet_send_master 002D  
                      __end_of___ftge 0590                           _ad_con_init 0EC5  
                      __end_of___wmul 0F79                         send_payload@i 0029  
          spi_master_send@destination 0025                  spi_master_send@dummy 0022  
                 start_initialization 0015                          _LED_data_set 0EDC  
                    ?_double_data_set 002A                  __end_of_send_payload 0674  
     __end_ofbit_shift@bit_mask_for_l 0809                      uint16_data_set@i 002D  
                            ??___ftge 0026                              ??___wmul 0024  
                send_payload@data_len 0028                   __end_of_get_cw_data 03F4  
                 __end_of_cw_data_set 036D                     ??_uint16_data_set 0029  
       double_to_byte_array@converter 0025                     __size_of___altoft 0042  
                   __size_of___ftpack 006E                           __pbssCOMMON 0079  
                           ___latbits 0002                         __pcstackBANK0 0020  
                 sent_data_set@p_data 0034                __size_of_sent_data_set 0063  
                         ??_MCLR_init 0020          __end_of_uint16_to_byte_array 1000  
                   __size_of_get_uart 0042                             _check_bit 0462  
        __end_of_double_to_byte_array 0FD1                             _bit_shift 076E  
            __end_of_spi_master_start 0F37                              ?___ftdiv 0030  
                      _uint8_data_set 0F79             __size_of_send_data_master 001C  
                           _get_adcon 07D7            double_to_byte_array@p_data 0020  
                      _uart_interrupt 0079                             __pstrings 0800  
                            ?_command 0070             send_data_master@data_type 002F  
                           _index_pos 004C                        __size_of_getch 001F  
                      __size_of_putch 0008                     interrupt_function 0004  
                     _spi_master_send 0590                        ___wmul@product 0024  
                          ?_check_bit 0070                             clear_ram0 0EBD  
                            _PIE1bits 008C                           _get_cw_data 036D  
                         _cw_data_set 02E1                              _PIR1bits 000C  
              __end_of_uint8_data_set 0FA4                            ?_bit_shift 0020  
                           _uart_init 0ED0                         _sent_data_set 04CE  
                          ?_get_adcon 0026                    _spi_master_receive 05E0  
                          _ADCON0bits 001F                           __stringbase 0805  
                   ___wmul@multiplier 0020                   ?_spi_master_receive 0070  
               __size_of_send_payload 0048                    check_bit@check_bit 0024  
                ??_spi_master_receive 0020                       ?_uint8_data_set 0020  
                          ?_uart_init 0070                        ?_sent_data_set 0034  
                        ?_ad_con_init 0070                      __size_of___ftdiv 00B8  
                            ___altoft 0674                              ___ftpack 03F4  
                  __end_of__stringtab 0806                          _send_payload 062C  
                _uint16_to_byte_array 0FD1                      __size_of_command 00BA  
                       ?_sysprot_init 0070               double_data_set@data_len 002C  
             __end_of_spi_master_send 05E0                              __ptext10 0F1A  
                            __ptext11 05E0                              __ptext20 0733  
                            __ptext12 07D7                              __ptext21 0FA4  
                            __ptext13 076E                              __ptext30 06B6  
                            __ptext22 0F56                              __ptext14 02E1  
                            __ptext31 0F37                              __ptext23 0462  
                            __ptext15 0EDC                              __ptext24 0EC5  
                            __ptext16 04CE                              __ptext25 0531  
                            __ptext17 0F79                              __ptext26 0229  
                            __ptext18 06F8                              __ptext27 0674  
                            __ptext19 0FD1                              __ptext28 03F4  
                            __ptext29 0EEA                  _double_to_byte_array 0FA4  
__end_ofuint16_to_byte_array@bit_mask 0808          uint16_to_byte_array@bit_mask 0806  
                            _get_uart 06B6                         __size_of_main 0145  
                         ??_check_bit 0020                       _uint16_data_set 06F8  
          packet_send_master@p_packet 002C           __size_of_packet_send_master 0030  
                         ??_bit_shift 0021                      _send_data_master 0EFE  
                         ??_get_adcon 0028                              main@temp 0045  
               ?_uint16_to_byte_array 0020                        ??_sysprot_init 0020  
                           putch@byte 0020                            _INTCONbits 000B  
                  double_data_set@buf 002E                 ?_double_to_byte_array 0020  
                            intlevel1 0000                     get_adcon@ad_value 002B  
                           stringcode 0800              __size_of_double_data_set 003B  
                     ??_sent_data_set 0038                           ??_uart_init 0020  
             send_payload@destination 002B                     ?_spi_master_start 0070  
                  ??_spi_master_start 0020                     get_adcon@my_adres 0029  
                            stringdir 0800                              stringtab 0800  
                    ?_spi_master_send 0020               __end_of_uint16_data_set 0733  
    send_data_master@data_end_command 0030                            _SSPCONbits 0014  
                        ?_get_cw_data 0070                          _I2CTEMP_data 005A  
                        ?_cw_data_set 0070         packet_send_master@destination 002E  
                 bit_shift@p_ad_value 0025  
