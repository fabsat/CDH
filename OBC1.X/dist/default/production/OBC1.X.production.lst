

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 12 20:42:36 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0088                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  0088                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0088                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  000E                     	;# 
   357  000F                     	;# 
   358  0010                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0013                     	;# 
   362  0014                     	;# 
   363  0015                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  001D                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  0081                     	;# 
   377  0085                     	;# 
   378  0086                     	;# 
   379  0087                     	;# 
   380  0088                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0008                     	;# 
   470  0009                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  000E                     	;# 
   477  000F                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001B                     	;# 
   492  001C                     	;# 
   493  001D                     	;# 
   494  001E                     	;# 
   495  001F                     	;# 
   496  0081                     	;# 
   497  0085                     	;# 
   498  0086                     	;# 
   499  0087                     	;# 
   500  0088                     	;# 
   501  0089                     	;# 
   502  008C                     	;# 
   503  008D                     	;# 
   504  008E                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0098                     	;# 
   510  0099                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  009F                     	;# 
   515  010C                     	;# 
   516  010D                     	;# 
   517  010E                     	;# 
   518  010F                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  000E                     	;# 
   537  000F                     	;# 
   538  0010                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0013                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  001D                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  0081                     	;# 
   557  0085                     	;# 
   558  0086                     	;# 
   559  0087                     	;# 
   560  0088                     	;# 
   561  0089                     	;# 
   562  008C                     	;# 
   563  008D                     	;# 
   564  008E                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0094                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  009F                     	;# 
   575  010C                     	;# 
   576  010D                     	;# 
   577  010E                     	;# 
   578  010F                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581                           
   582                           	psect	strings
   583  0003                     __pstrings:	
   584  0003                     stringtab:	
   585  0003                     __stringtab:	
   586  0003                     stringcode:	
   587                           ;	String table - string pointers are 1 byte each
   588                           
   589  0003                     stringdir:	
   590  0003  3000               	movlw	high stringdir
   591  0004  008A               	movwf	10
   592  0005  0804               	movf	4,w
   593  0006  0A84               	incf	4,f
   594  0007  0782               	addwf	2,f
   595  0008                     __stringbase:	
   596  0008  3400               	retlw	0
   597  0009                     __end_of__stringtab:	
   598  0009                     uint16_to_byte_array@bit_mask:	
   599  0009  34FF               	retlw	255
   600  000A  3400               	retlw	0
   601  000B                     __end_ofuint16_to_byte_array@bit_mask:	
   602  000B                     bit_shift@bit_mask_for_l:	
   603  000B  3403               	retlw	3
   604  000C                     __end_ofbit_shift@bit_mask_for_l:	
   605  001F                     _ADCON0	set	31
   606  001F                     _ADCON0bits	set	31
   607  001E                     _ADRESH	set	30
   608  0005                     _PORTAbits	set	5
   609  0007                     _PORTCbits	set	7
   610  0008                     _PORTDbits	set	8
   611  001A                     _RCREG	set	26
   612  0018                     _RCSTA	set	24
   613  0013                     _SSPBUF	set	19
   614  0014                     _SSPCONbits	set	20
   615  0019                     _TXREG	set	25
   616  0065                     _RCIF	set	101
   617  0064                     _TXIF	set	100
   618  009F                     _ADCON1	set	159
   619  009E                     _ADRESL	set	158
   620  0099                     _SPBRG	set	153
   621  0094                     _SSPSTATbits	set	148
   622  0085                     _TRISAbits	set	133
   623  0087                     _TRISCbits	set	135
   624  0088                     _TRISDbits	set	136
   625  0089                     _TRISEbits	set	137
   626  0098                     _TXSTA	set	152
   627                           
   628                           ; #config settings
   629  0000                     
   630                           	psect	cinit
   631  07F5                     start_initialization:	
   632  07F5                     __initialization:	
   633                           
   634                           ; Clear objects allocated to BANK0
   635  07F5  1383               	bcf	3,7	;select IRP bank0
   636  07F6  3020               	movlw	low __pbssBANK0
   637  07F7  0084               	movwf	4
   638  07F8  304E               	movlw	low (__pbssBANK0+46)
   639  07F9  120A  118A  2227   	fcall	clear_ram0
   640  07FC                     end_of_initialization:	
   641                           ;End of C runtime variable initialization code
   642                           
   643  07FC                     __end_of__initialization:	
   644  07FC  0183               	clrf	3
   645  07FD  120A  118A  2DF0   	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssBANK0
   648  0020                     __pbssBANK0:	
   649  0020                     _index_pos:	
   650  0020                     	ds	1
   651  0021                     _packet:	
   652  0021                     	ds	32
   653  0041                     _cw:	
   654  0041                     	ds	13
   655                           
   656                           	psect	clrtext
   657  0227                     clear_ram0:	
   658                           ;	Called with FSR containing the base address, and
   659                           ;	W with the last address+1
   660                           
   661  0227  0064               	clrwdt	;clear the watchdog before getting into this loop
   662  0228                     clrloop0:	
   663  0228  0180               	clrf	0	;clear RAM location pointed to by FSR
   664  0229  0A84               	incf	4,f	;increment pointer
   665  022A  0604               	xorwf	4,w	;XOR with final address
   666  022B  1903               	btfsc	3,2	;have we reached the end yet?
   667  022C  3400               	retlw	0	;all done for this memory range, return
   668  022D  0604               	xorwf	4,w	;XOR again to restore value
   669  022E  2A28               	goto	clrloop0	;do the next byte
   670                           
   671                           	psect	cstackCOMMON
   672  0070                     __pcstackCOMMON:	
   673  0070                     ?_MCLR_init:	
   674  0070                     ??_MCLR_init:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_sysprot_init:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ??_sysprot_init:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_ad_con_init:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ??_ad_con_init:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_spi_master_start:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ??_spi_master_start:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_uart_init:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ??_uart_init:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?_POW_status:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_command:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?_uint8_data_set:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_uint16_to_byte_array:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?_double_to_byte_array:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_LED_data_set:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ?_I2Ctemp_data_set:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?_bit_shift:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ??_spi_master_receive:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?_spi_master_send:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_MCLR_reset:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ??_MCLR_reset:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_putch:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ??_putch:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ??_getch:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ?_get_cw_data:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?_cw_data_set:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ?_COM_status:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ?_spi_master_receive:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_getch:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_main:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?___wmul:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0070                     bit_shift@p_adres:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0070                     spi_master_send@data:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     putch@byte:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     MCLR_init@nin:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     getch@count:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     uint8_data_set@p_data:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     uint16_to_byte_array@p_data:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     double_to_byte_array@p_data:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     ___wmul@multiplier:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 2 bytes @ 0x0
   796  0070                     	ds	1
   797  0071                     ??_bit_shift:	
   798  0071                     ??_spi_master_send:	
   799                           ; 0 bytes @ 0x1
   800                           
   801  0071                     spi_master_receive@dummy:	
   802                           ; 0 bytes @ 0x1
   803                           
   804                           
   805                           ; 1 bytes @ 0x1
   806  0071                     	ds	1
   807  0072                     spi_master_send@dummy:	
   808  0072                     MCLR_reset@resetted_mcu:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0072                     uint8_data_set@data_len:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0072                     uint16_to_byte_array@p_data_array:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0072                     double_to_byte_array@p_data_array:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     spi_master_receive@timeout_counter:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     ___wmul@multiplicand:	
   824                           ; 2 bytes @ 0x2
   825                           
   826                           
   827                           ; 2 bytes @ 0x2
   828  0072                     	ds	1
   829  0073                     ??_uint8_data_set:	
   830  0073                     ??_uint16_to_byte_array:	
   831                           ; 0 bytes @ 0x3
   832                           
   833  0073                     ??_double_to_byte_array:	
   834                           ; 0 bytes @ 0x3
   835                           
   836  0073                     spi_master_send@timeout_counter:	
   837                           ; 0 bytes @ 0x3
   838                           
   839  0073                     MCLR_reset@nin:	
   840                           ; 2 bytes @ 0x3
   841                           
   842                           
   843                           ; 2 bytes @ 0x3
   844  0073                     	ds	1
   845  0074                     ??_cw_data_set:	
   846  0074                     ??___wmul:	
   847                           ; 0 bytes @ 0x4
   848                           
   849  0074                     spi_master_receive@destination:	
   850                           ; 0 bytes @ 0x4
   851                           
   852  0074                     ___wmul@product:	
   853                           ; 1 bytes @ 0x4
   854                           
   855                           
   856                           ; 2 bytes @ 0x4
   857  0074                     	ds	1
   858  0075                     bit_shift@p_ad_value:	
   859  0075                     spi_master_send@destination:	
   860                           ; 1 bytes @ 0x5
   861                           
   862  0075                     cw_data_set@p_cw_data:	
   863                           ; 1 bytes @ 0x5
   864                           
   865  0075                     double_to_byte_array@converter:	
   866                           ; 1 bytes @ 0x5
   867                           
   868                           
   869                           ; 4 bytes @ 0x5
   870  0075                     	ds	1
   871  0076                     ??_COM_status:	
   872  0076                     ??_POW_status:	
   873                           ; 0 bytes @ 0x6
   874                           
   875  0076                     ?_uint16_data_set:	
   876                           ; 0 bytes @ 0x6
   877                           
   878  0076                     ?_send_payload:	
   879                           ; 0 bytes @ 0x6
   880                           
   881  0076                     ?_get_adcon:	
   882                           ; 1 bytes @ 0x6
   883                           
   884  0076                     send_payload@p_payload:	
   885                           ; 2 bytes @ 0x6
   886                           
   887  0076                     uint16_data_set@p_data:	
   888                           ; 1 bytes @ 0x6
   889                           
   890                           
   891                           ; 2 bytes @ 0x6
   892  0076                     	ds	1
   893  0077                     ??_send_payload:	
   894  0077                     COM_status@COM_stat:	
   895                           ; 0 bytes @ 0x7
   896                           
   897                           
   898                           ; 1 bytes @ 0x7
   899  0077                     	ds	1
   900  0078                     ??_get_adcon:	
   901  0078                     uint16_data_set@data_len:	
   902                           ; 0 bytes @ 0x8
   903                           
   904  0078                     send_payload@data_len:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 1 bytes @ 0x8
   909  0078                     	ds	1
   910  0079                     ??_uint16_data_set:	
   911  0079                     double_to_byte_array@i:	
   912                           ; 0 bytes @ 0x9
   913                           
   914  0079                     send_payload@i:	
   915                           ; 1 bytes @ 0x9
   916                           
   917  0079                     get_adcon@my_adres:	
   918                           ; 1 bytes @ 0x9
   919                           
   920                           
   921                           ; 2 bytes @ 0x9
   922  0079                     	ds	1
   923  007A                     ?_double_data_set:	
   924  007A                     send_payload@index_pos:	
   925                           ; 0 bytes @ 0xA
   926                           
   927  007A                     double_data_set@p_data:	
   928                           ; 1 bytes @ 0xA
   929                           
   930  007A                     uint16_data_set@buf:	
   931                           ; 2 bytes @ 0xA
   932                           
   933                           
   934                           ; 3 bytes @ 0xA
   935  007A                     	ds	1
   936  007B                     send_payload@destination:	
   937  007B                     get_adcon@ad_value:	
   938                           ; 1 bytes @ 0xB
   939                           
   940                           
   941                           ; 2 bytes @ 0xB
   942  007B                     	ds	1
   943  007C                     ?_packet_send_master:	
   944  007C                     double_data_set@data_len:	
   945                           ; 0 bytes @ 0xC
   946                           
   947  007C                     packet_send_master@p_packet:	
   948                           ; 1 bytes @ 0xC
   949                           
   950                           
   951                           ; 1 bytes @ 0xC
   952  007C                     	ds	1
   953  007D                     ??_double_data_set:	
   954  007D                     ??_packet_send_master:	
   955                           ; 0 bytes @ 0xD
   956                           
   957  007D                     ??_get_cw_data:	
   958                           ; 0 bytes @ 0xD
   959                           
   960  007D                     uint16_data_set@i:	
   961                           ; 0 bytes @ 0xD
   962                           
   963                           
   964                           ; 1 bytes @ 0xD
   965  007D                     	ds	1
   966  007E                     ??_LED_data_set:	
   967                           
   968                           	psect	cstackBANK0
   969  004E                     __pcstackBANK0:	
   970                           ; 0 bytes @ 0xE
   971                           
   972  004E                     packet_send_master@destination:	
   973  004E                     get_cw_data@buf:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  004E                     double_data_set@buf:	
   977                           ; 2 bytes @ 0x0
   978                           
   979                           
   980                           ; 5 bytes @ 0x0
   981  004E                     	ds	1
   982  004F                     ?_send_data_master:	
   983  004F                     send_data_master@data_type:	
   984                           ; 0 bytes @ 0x1
   985                           
   986                           
   987                           ; 1 bytes @ 0x1
   988  004F                     	ds	1
   989  0050                     send_data_master@data_end_command:	
   990                           
   991                           ; 1 bytes @ 0x2
   992  0050                     	ds	1
   993  0051                     ??_send_data_master:	
   994                           
   995                           ; 0 bytes @ 0x3
   996  0051                     	ds	1
   997  0052                     send_data_master@destination:	
   998                           
   999                           ; 1 bytes @ 0x4
  1000  0052                     	ds	1
  1001  0053                     double_data_set@i:	
  1002                           
  1003                           ; 1 bytes @ 0x5
  1004  0053                     	ds	1
  1005  0054                     ?_sent_data_set:	
  1006  0054                     sent_data_set@p_data:	
  1007                           ; 1 bytes @ 0x6
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x6
  1011  0054                     	ds	2
  1012  0056                     sent_data_set@data_len:	
  1013                           
  1014                           ; 1 bytes @ 0x8
  1015  0056                     	ds	1
  1016  0057                     sent_data_set@byte_of_data:	
  1017                           
  1018                           ; 1 bytes @ 0x9
  1019  0057                     	ds	1
  1020  0058                     ??_sent_data_set:	
  1021                           
  1022                           ; 0 bytes @ 0xA
  1023  0058                     	ds	5
  1024  005D                     ??_I2Ctemp_data_set:	
  1025                           
  1026                           ; 0 bytes @ 0xF
  1027  005D                     	ds	1
  1028  005E                     I2Ctemp_data_set@I2CTEMP_data:	
  1029                           
  1030                           ; 2 bytes @ 0x10
  1031  005E                     	ds	2
  1032  0060                     ??_command:	
  1033                           
  1034                           ; 0 bytes @ 0x12
  1035  0060                     	ds	3
  1036  0063                     command@data:	
  1037                           
  1038                           ; 1 bytes @ 0x15
  1039  0063                     	ds	1
  1040  0064                     ??_main:	
  1041                           
  1042                           ; 0 bytes @ 0x16
  1043  0064                     	ds	3
  1044  0067                     main@COM_stat:	
  1045                           
  1046                           ; 1 bytes @ 0x19
  1047  0067                     	ds	1
  1048                           
  1049                           	psect	maintext
  1050  05F0                     __pmaintext:	
  1051 ;;
  1052 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1053 ;;
  1054 ;; *************** function _main *****************
  1055 ;; Defined at:
  1056 ;;		line 26 in file "OBC1_main.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  COM_stat        1   25[BANK0 ] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2   26[None  ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : B00/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       0       0       0       0
  1071 ;;      Locals:         0       1       0       0       0
  1072 ;;      Temps:          0       3       0       0       0
  1073 ;;      Totals:         0       4       0       0       0
  1074 ;;Total ram usage:        4 bytes
  1075 ;; Hardware stack levels required when called:    6
  1076 ;; This function calls:
  1077 ;;		_COM_status
  1078 ;;		_MCLR_init
  1079 ;;		_POW_status
  1080 ;;		_ad_con_init
  1081 ;;		_command
  1082 ;;		_spi_master_start
  1083 ;;		_sysprot_init
  1084 ;;		_uart_init
  1085 ;; This function is called by:
  1086 ;;		Startup code after reset
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _main
  1092  05F0                     _main:	
  1093                           
  1094                           ;OBC1_main.c: 28: TRISDbits.TRISD7 = 0;
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1098  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  1099  05F1  1303               	bcf	3,6	;RP1=0, select bank1
  1100  05F2  1388               	bcf	8,7	;volatile
  1101                           
  1102                           ;OBC1_main.c: 29: PORTDbits.RD7 = 0;
  1103  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1104  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1105  05F5  1388               	bcf	8,7	;volatile
  1106                           
  1107                           ;OBC1_main.c: 30: TRISDbits.TRISD6 = 0;
  1108  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1109  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1110  05F8  1308               	bcf	8,6	;volatile
  1111                           
  1112                           ;OBC1_main.c: 31: PORTDbits.RD6 = 0;
  1113  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1114  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1115  05FB  1308               	bcf	8,6	;volatile
  1116                           
  1117                           ;OBC1_main.c: 32: TRISDbits.TRISD2 = 0;
  1118  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1119  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1120  05FE  1108               	bcf	8,2	;volatile
  1121                           
  1122                           ;OBC1_main.c: 33: PORTDbits.RD2 = 1;
  1123  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0601  1508               	bsf	8,2	;volatile
  1126                           
  1127                           ;OBC1_main.c: 36: MCLR_init();
  1128  0602  120A  118A  2254  120A  118A  	fcall	_MCLR_init
  1129                           
  1130                           ;OBC1_main.c: 37: sysprot_init();
  1131  0607  120A  118A  221A  120A  118A  	fcall	_sysprot_init
  1132                           
  1133                           ;OBC1_main.c: 38: ad_con_init();
  1134  060C  120A  118A  222F  120A  118A  	fcall	_ad_con_init
  1135                           
  1136                           ;OBC1_main.c: 39: spi_master_start();
  1137  0611  120A  118A  22DF  120A  118A  	fcall	_spi_master_start
  1138                           
  1139                           ;OBC1_main.c: 40: uart_init();
  1140  0616  120A  118A  223A  120A  118A  	fcall	_uart_init
  1141                           
  1142                           ;OBC1_main.c: 41: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1143  061B  301A               	movlw	26
  1144  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1145  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1146  061E  00E6               	movwf	??_main+2
  1147  061F  305E               	movlw	94
  1148  0620  00E5               	movwf	??_main+1
  1149  0621  3086               	movlw	134
  1150  0622  00E4               	movwf	??_main
  1151  0623                     u907:	
  1152  0623  0BE4               	decfsz	??_main,f
  1153  0624  2E23               	goto	u907
  1154  0625  0BE5               	decfsz	??_main+1,f
  1155  0626  2E23               	goto	u907
  1156  0627  0BE6               	decfsz	??_main+2,f
  1157  0628  2E23               	goto	u907
  1158  0629  0000               	nop
  1159  062A                     l1787:	
  1160                           ;OBC1_main.c: 43: while(1)
  1161                           
  1162                           
  1163                           ;OBC1_main.c: 44: {
  1164                           ;OBC1_main.c: 45: PORTDbits.RD7 = 1;
  1165  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1166  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1167  062C  1788               	bsf	8,7	;volatile
  1168                           
  1169                           ;OBC1_main.c: 46: _delay((unsigned long)((100)*(20000000/4000.0)));
  1170  062D  3003               	movlw	3
  1171  062E  00E6               	movwf	??_main+2
  1172  062F  308A               	movlw	138
  1173  0630  00E5               	movwf	??_main+1
  1174  0631  3056               	movlw	86
  1175  0632  00E4               	movwf	??_main
  1176  0633                     u917:	
  1177  0633  0BE4               	decfsz	??_main,f
  1178  0634  2E33               	goto	u917
  1179  0635  0BE5               	decfsz	??_main+1,f
  1180  0636  2E33               	goto	u917
  1181  0637  0BE6               	decfsz	??_main+2,f
  1182  0638  2E33               	goto	u917
  1183  0639  2E3A               	nop2
  1184                           
  1185                           ;OBC1_main.c: 49: uint8_t COM_stat = COM_status();
  1186  063A  120A  118A  22C2  120A  118A  	fcall	_COM_status
  1187  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0641  00E4               	movwf	??_main
  1190  0642  0864               	movf	??_main,w
  1191  0643  00E7               	movwf	main@COM_stat
  1192                           
  1193                           ;OBC1_main.c: 52: POW_status();
  1194  0644  120A  118A  2264  120A  118A  	fcall	_POW_status
  1195                           
  1196                           ;OBC1_main.c: 55: command(COM_stat);
  1197  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1198  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1199  064B  0867               	movf	main@COM_stat,w
  1200  064C  120A  118A  2769  120A  118A  	fcall	_command
  1201                           
  1202                           ;OBC1_main.c: 57: PORTDbits.RD7 = 0;
  1203  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0653  1388               	bcf	8,7	;volatile
  1206                           
  1207                           ;OBC1_main.c: 58: _delay((unsigned long)((100)*(20000000/4000.0)));
  1208  0654  3003               	movlw	3
  1209  0655  00E6               	movwf	??_main+2
  1210  0656  308A               	movlw	138
  1211  0657  00E5               	movwf	??_main+1
  1212  0658  3056               	movlw	86
  1213  0659  00E4               	movwf	??_main
  1214  065A                     u927:	
  1215  065A  0BE4               	decfsz	??_main,f
  1216  065B  2E5A               	goto	u927
  1217  065C  0BE5               	decfsz	??_main+1,f
  1218  065D  2E5A               	goto	u927
  1219  065E  0BE6               	decfsz	??_main+2,f
  1220  065F  2E5A               	goto	u927
  1221  0660  2E61               	nop2
  1222  0661  2E2A               	goto	l1787
  1223  0662                     __end_of_main:	
  1224                           ;OBC1_main.c: 59: }
  1225                           ;OBC1_main.c: 61: return 0;
  1226                           ;	Return value of _main is never used
  1227                           
  1228                           
  1229                           	psect	text1
  1230  023A                     __ptext1:	
  1231 ;; *************** function _uart_init *****************
  1232 ;; Defined at:
  1233 ;;		line 34 in file "uart_serial.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;		None               void
  1240 ;; Registers used:
  1241 ;;		wreg
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function _uart_init
  1262  023A                     _uart_init:	
  1263                           
  1264                           ;uart_serial.c: 36: TRISCbits.TRISC7 = 1;
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in _uart_init: [wreg]
  1268  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1269  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1270  023C  1787               	bsf	7,7	;volatile
  1271                           
  1272                           ;uart_serial.c: 37: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1273  023D  3081               	movlw	129
  1274  023E  0099               	movwf	25	;volatile
  1275                           
  1276                           ;uart_serial.c: 38: TXSTA = (0x00 | 0x04 | 0x20);
  1277  023F  3024               	movlw	36
  1278  0240  0098               	movwf	24	;volatile
  1279                           
  1280                           ;uart_serial.c: 39: RCSTA = (0x00 | 0x90);
  1281  0241  3090               	movlw	144
  1282  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0244  0098               	movwf	24	;volatile
  1285  0245  0008               	return
  1286  0246                     __end_of_uart_init:	
  1287                           
  1288                           	psect	text2
  1289  021A                     __ptext2:	
  1290 ;; *************** function _sysprot_init *****************
  1291 ;; Defined at:
  1292 ;;		line 85 in file "system_protocol.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;		None               void
  1299 ;; Registers used:
  1300 ;;		None
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _sysprot_init
  1321  021A                     _sysprot_init:	
  1322                           
  1323                           ;system_protocol.c: 87: TRISDbits.TRISD0 = 1;
  1324                           
  1325                           ;incstack = 0
  1326                           ; Regs used in _sysprot_init: []
  1327  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1328  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1329  021C  1408               	bsf	8,0	;volatile
  1330                           
  1331                           ;system_protocol.c: 88: TRISDbits.TRISD1 = 1;
  1332  021D  1488               	bsf	8,1	;volatile
  1333  021E  0008               	return
  1334  021F                     __end_of_sysprot_init:	
  1335                           
  1336                           	psect	text3
  1337  0769                     __ptext3:	
  1338 ;; *************** function _command *****************
  1339 ;; Defined at:
  1340 ;;		line 50 in file "OBC1_app.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  data            1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  data            1   21[BANK0 ] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;		None               void
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         0       1       0       0       0
  1356 ;;      Temps:          0       3       0       0       0
  1357 ;;      Totals:         0       4       0       0       0
  1358 ;;Total ram usage:        4 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    5
  1361 ;; This function calls:
  1362 ;;		_I2Ctemp_data_set
  1363 ;;		_LED_data_set
  1364 ;;		_cw_data_set
  1365 ;;		_get_cw_data
  1366 ;;		_putch
  1367 ;;		_send_data_master
  1368 ;;		_spi_master_send
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _command
  1376  0769                     _command:	
  1377                           
  1378                           ;incstack = 0
  1379                           ; Regs used in _command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1380                           ;command@data stored from wreg
  1381  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1382  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1383  076B  00E3               	movwf	command@data
  1384                           
  1385                           ;OBC1_app.c: 52: switch(data)
  1386  076C  2FE7               	goto	l1727
  1387  076D                     l1707:	
  1388                           ;OBC1_app.c: 53: {
  1389                           ;OBC1_app.c: 54: case (0x03):
  1390                           
  1391                           
  1392                           ;OBC1_app.c: 55: get_cw_data();
  1393  076D  120A  118A  26E2  120A  118A  	fcall	_get_cw_data
  1394                           
  1395                           ;OBC1_app.c: 56: cw_data_set(&cw);
  1396  0772  3041               	movlw	(low (_cw| 0))& (0+255)
  1397  0773  120A  118A  2662  120A  118A  	fcall	_cw_data_set
  1398                           
  1399                           ;OBC1_app.c: 57: spi_master_send(COM, 0x11);
  1400  0778  3011               	movlw	17
  1401  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1402  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1403  077B  00E0               	movwf	??_command
  1404  077C  0860               	movf	??_command,w
  1405  077D  00F0               	movwf	spi_master_send@data
  1406  077E  3003               	movlw	3
  1407  077F  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  1408                           
  1409                           ;OBC1_app.c: 58: send_data_master(COM, 0x01, DATA_END);
  1410  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0786  01CF               	clrf	send_data_master@data_type
  1413  0787  0ACF               	incf	send_data_master@data_type,f
  1414  0788  3010               	movlw	16
  1415  0789  00E0               	movwf	??_command
  1416  078A  0860               	movf	??_command,w
  1417  078B  00D0               	movwf	send_data_master@data_end_command
  1418  078C  3003               	movlw	3
  1419  078D  120A  118A  2275   	fcall	_send_data_master
  1420                           
  1421                           ;OBC1_app.c: 59: break;
  1422  0790  0008               	return
  1423  0791                     l375:	
  1424                           ;OBC1_app.c: 61: case (0x01):
  1425                           
  1426                           
  1427                           ;OBC1_app.c: 62: PORTDbits.RD6 = 1;
  1428  0791  1708               	bsf	8,6	;volatile
  1429                           
  1430                           ;OBC1_app.c: 63: _delay((unsigned long)((100)*(20000000/4000.0)));
  1431  0792  3003               	movlw	3
  1432  0793  00E2               	movwf	??_command+2
  1433  0794  308A               	movlw	138
  1434  0795  00E1               	movwf	??_command+1
  1435  0796  3056               	movlw	86
  1436  0797  00E0               	movwf	??_command
  1437  0798                     u937:	
  1438  0798  0BE0               	decfsz	??_command,f
  1439  0799  2F98               	goto	u937
  1440  079A  0BE1               	decfsz	??_command+1,f
  1441  079B  2F98               	goto	u937
  1442  079C  0BE2               	decfsz	??_command+2,f
  1443  079D  2F98               	goto	u937
  1444  079E  2F9F               	nop2
  1445                           
  1446                           ;OBC1_app.c: 64: PORTDbits.RD6 = 0;
  1447  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1448  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1449  07A1  1308               	bcf	8,6	;volatile
  1450                           
  1451                           ;OBC1_app.c: 65: _delay((unsigned long)((100)*(20000000/4000.0)));
  1452  07A2  3003               	movlw	3
  1453  07A3  00E2               	movwf	??_command+2
  1454  07A4  308A               	movlw	138
  1455  07A5  00E1               	movwf	??_command+1
  1456  07A6  3056               	movlw	86
  1457  07A7  00E0               	movwf	??_command
  1458  07A8                     u947:	
  1459  07A8  0BE0               	decfsz	??_command,f
  1460  07A9  2FA8               	goto	u947
  1461  07AA  0BE1               	decfsz	??_command+1,f
  1462  07AB  2FA8               	goto	u947
  1463  07AC  0BE2               	decfsz	??_command+2,f
  1464  07AD  2FA8               	goto	u947
  1465  07AE  2FAF               	nop2
  1466                           
  1467                           ;OBC1_app.c: 66: LED_data_set();
  1468  07AF  120A  118A  2246  120A  118A  	fcall	_LED_data_set
  1469                           
  1470                           ;OBC1_app.c: 67: spi_master_send(COM, 0x11);
  1471  07B4  3011               	movlw	17
  1472  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1473  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1474  07B7  00E0               	movwf	??_command
  1475  07B8  0860               	movf	??_command,w
  1476  07B9  00F0               	movwf	spi_master_send@data
  1477  07BA  3003               	movlw	3
  1478  07BB  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  1479                           
  1480                           ;OBC1_app.c: 68: send_data_master(COM, (0x01), DATA_END);
  1481  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1482  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1483  07C2  01CF               	clrf	send_data_master@data_type
  1484  07C3  0ACF               	incf	send_data_master@data_type,f
  1485  07C4  3010               	movlw	16
  1486  07C5  00E0               	movwf	??_command
  1487  07C6  0860               	movf	??_command,w
  1488  07C7  00D0               	movwf	send_data_master@data_end_command
  1489  07C8  3003               	movlw	3
  1490  07C9  120A  118A  2275   	fcall	_send_data_master
  1491                           
  1492                           ;OBC1_app.c: 69: break;
  1493  07CC  0008               	return
  1494  07CD                     l1719:	
  1495                           ;OBC1_app.c: 71: case (0x02):
  1496                           
  1497                           
  1498                           ;OBC1_app.c: 72: putch(0x01);
  1499  07CD  3001               	movlw	1
  1500  07CE  120A  118A  221F  120A  118A  	fcall	_putch
  1501                           
  1502                           ;OBC1_app.c: 73: I2Ctemp_data_set();
  1503  07D3  120A  118A  233D  120A  118A  	fcall	_I2Ctemp_data_set
  1504                           
  1505                           ;OBC1_app.c: 74: send_data_master(COM, (0x02), DATA_END);
  1506  07D8  3002               	movlw	2
  1507  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1508  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1509  07DB  00E0               	movwf	??_command
  1510  07DC  0860               	movf	??_command,w
  1511  07DD  00CF               	movwf	send_data_master@data_type
  1512  07DE  3010               	movlw	16
  1513  07DF  00E1               	movwf	??_command+1
  1514  07E0  0861               	movf	??_command+1,w
  1515  07E1  00D0               	movwf	send_data_master@data_end_command
  1516  07E2  3003               	movlw	3
  1517  07E3  120A  118A  2275   	fcall	_send_data_master
  1518                           
  1519                           ;OBC1_app.c: 76: }
  1520                           
  1521                           ;OBC1_app.c: 75: break;
  1522  07E6  0008               	return
  1523  07E7                     l1727:	
  1524  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1525  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1526  07E9  0863               	movf	command@data,w
  1527                           
  1528                           ; Switch size 1, requested type "space"
  1529                           ; Number of cases is 3, Range of values is 1 to 3
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte           10     6 (average)
  1533                           ; direct_byte           20    11 (fixed)
  1534                           ; jumptable            263     9 (fixed)
  1535                           ;	Chosen strategy is simple_byte
  1536  07EA  3A01               	xorlw	1	; case 1
  1537  07EB  1903               	skipnz
  1538  07EC  2F91               	goto	l375
  1539  07ED  3A03               	xorlw	3	; case 2
  1540  07EE  1903               	skipnz
  1541  07EF  2FCD               	goto	l1719
  1542  07F0  3A01               	xorlw	1	; case 3
  1543  07F1  1903               	skipnz
  1544  07F2  2F6D               	goto	l1707
  1545  07F3  2FF4               	goto	l377
  1546  07F4                     l377:	
  1547  07F4  0008               	return
  1548  07F5                     __end_of_command:	
  1549                           
  1550                           	psect	text4
  1551  0275                     __ptext4:	
  1552 ;; *************** function _send_data_master *****************
  1553 ;; Defined at:
  1554 ;;		line 217 in file "system_protocol.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  destination     1    wreg     enum E1099
  1557 ;;  data_type       1    1[BANK0 ] enum E1104
  1558 ;;  data_end_com    1    2[BANK0 ] enum E1108
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  destination     1    4[BANK0 ] enum E1099
  1561 ;; Return value:  Size  Location     Type
  1562 ;;		None               void
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       2       0       0       0
  1571 ;;      Locals:         0       1       0       0       0
  1572 ;;      Temps:          0       1       0       0       0
  1573 ;;      Totals:         0       4       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    3
  1577 ;; This function calls:
  1578 ;;		_packet_send_master
  1579 ;; This function is called by:
  1580 ;;		_command
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _send_data_master
  1586  0275                     _send_data_master:	
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1590                           ;send_data_master@destination stored from wreg
  1591  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0277  00D2               	movwf	send_data_master@destination
  1594                           
  1595                           ;system_protocol.c: 219: packet.data_type = (uint8_t)data_type;
  1596  0278  084F               	movf	send_data_master@data_type,w
  1597  0279  00D1               	movwf	??_send_data_master
  1598  027A  0851               	movf	??_send_data_master,w
  1599  027B  00A1               	movwf	_packet
  1600                           
  1601                           ;system_protocol.c: 220: packet.data_end_command = (uint8_t)data_end_command;
  1602  027C  0850               	movf	send_data_master@data_end_command,w
  1603  027D  00D1               	movwf	??_send_data_master
  1604  027E  0851               	movf	??_send_data_master,w
  1605  027F  00C0               	movwf	_packet+31
  1606                           
  1607                           ;system_protocol.c: 222: packet_send_master(destination, &packet);
  1608  0280  3021               	movlw	(low (_packet| 0))& (0+255)
  1609  0281  00D1               	movwf	??_send_data_master
  1610  0282  0851               	movf	??_send_data_master,w
  1611  0283  00FC               	movwf	packet_send_master@p_packet
  1612  0284  0852               	movf	send_data_master@destination,w
  1613  0285  120A  118A  23DD   	fcall	_packet_send_master
  1614  0288  0008               	return
  1615  0289                     __end_of_send_data_master:	
  1616                           
  1617                           	psect	text5
  1618  03DD                     __ptext5:	
  1619 ;; *************** function _packet_send_master *****************
  1620 ;; Defined at:
  1621 ;;		line 465 in file "system_protocol.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  destination     1    wreg     enum E1099
  1624 ;;  p_packet        1   12[COMMON] PTR struct .
  1625 ;;		 -> packet(32), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  destination     1    0[BANK0 ] enum E1099
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         1       0       0       0       0
  1638 ;;      Locals:         0       1       0       0       0
  1639 ;;      Temps:          1       0       0       0       0
  1640 ;;      Totals:         2       1       0       0       0
  1641 ;;Total ram usage:        3 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    2
  1644 ;; This function calls:
  1645 ;;		_send_payload
  1646 ;;		_spi_master_send
  1647 ;; This function is called by:
  1648 ;;		_send_data_master
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _packet_send_master
  1654  03DD                     _packet_send_master:	
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1658                           ;packet_send_master@destination stored from wreg
  1659  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1660  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1661  03DF  00CE               	movwf	packet_send_master@destination
  1662                           
  1663                           ;system_protocol.c: 468: spi_master_send(destination, 0x01);
  1664  03E0  01F0               	clrf	spi_master_send@data
  1665  03E1  0AF0               	incf	spi_master_send@data,f
  1666  03E2  084E               	movf	packet_send_master@destination,w
  1667  03E3  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  1668                           
  1669                           ;system_protocol.c: 471: spi_master_send(destination, &p_packet->data_type);
  1670  03E8  087C               	movf	packet_send_master@p_packet,w
  1671  03E9  00FD               	movwf	??_packet_send_master
  1672  03EA  087D               	movf	??_packet_send_master,w
  1673  03EB  00F0               	movwf	spi_master_send@data
  1674  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1675  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1676  03EE  084E               	movf	packet_send_master@destination,w
  1677  03EF  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  1678                           
  1679                           ;system_protocol.c: 474: send_payload(destination, &p_packet->payload);
  1680  03F4  087C               	movf	packet_send_master@p_packet,w
  1681  03F5  3E01               	addlw	1
  1682  03F6  00FD               	movwf	??_packet_send_master
  1683  03F7  087D               	movf	??_packet_send_master,w
  1684  03F8  00F6               	movwf	send_payload@p_payload
  1685  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1686  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1687  03FB  084E               	movf	packet_send_master@destination,w
  1688  03FC  120A  118A  24B1  120A  118A  	fcall	_send_payload
  1689                           
  1690                           ;system_protocol.c: 477: spi_master_send(destination, &p_packet->data_end_command);
  1691  0401  087C               	movf	packet_send_master@p_packet,w
  1692  0402  3E1F               	addlw	31
  1693  0403  00FD               	movwf	??_packet_send_master
  1694  0404  087D               	movf	??_packet_send_master,w
  1695  0405  00F0               	movwf	spi_master_send@data
  1696  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0408  084E               	movf	packet_send_master@destination,w
  1699  0409  120A  118A  253E   	fcall	_spi_master_send
  1700  040C  0008               	return
  1701  040D                     __end_of_packet_send_master:	
  1702                           
  1703                           	psect	text6
  1704  04B1                     __ptext6:	
  1705 ;; *************** function _send_payload *****************
  1706 ;; Defined at:
  1707 ;;		line 397 in file "system_protocol.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  destination     1    wreg     enum E1099
  1710 ;;  p_payload       1    6[COMMON] PTR unsigned char 
  1711 ;;		 -> packet(32), 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  destination     1   11[COMMON] enum E1099
  1714 ;;  index_pos       1   10[COMMON] unsigned char 
  1715 ;;  i               1    9[COMMON] unsigned char 
  1716 ;;  data_len        1    8[COMMON] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      unsigned char 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         1       0       0       0       0
  1727 ;;      Locals:         4       0       0       0       0
  1728 ;;      Temps:          1       0       0       0       0
  1729 ;;      Totals:         6       0       0       0       0
  1730 ;;Total ram usage:        6 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    1
  1733 ;; This function calls:
  1734 ;;		_spi_master_send
  1735 ;; This function is called by:
  1736 ;;		_packet_send_master
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _send_payload
  1742  04B1                     _send_payload:	
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1746                           ;send_payload@destination stored from wreg
  1747  04B1  00FB               	movwf	send_payload@destination
  1748                           
  1749                           ;system_protocol.c: 399: uint8_t i;
  1750                           ;system_protocol.c: 400: uint8_t data_len;
  1751                           ;system_protocol.c: 401: uint8_t index_pos = 0;
  1752  04B2  01FA               	clrf	send_payload@index_pos
  1753  04B3                     l1503:	
  1754                           ;system_protocol.c: 404: while(*p_payload != 0x00 || index_pos < 30)
  1755                           
  1756  04B3  0876               	movf	send_payload@p_payload,w
  1757  04B4  0084               	movwf	4
  1758  04B5  1383               	bcf	3,7	;select IRP bank0
  1759  04B6  0800               	movf	0,w
  1760  04B7  1903               	btfsc	3,2
  1761  04B8  2CEE               	goto	l1505
  1762  04B9                     l1483:	
  1763                           
  1764                           ;system_protocol.c: 405: {
  1765                           ;system_protocol.c: 406: data_len = *p_payload;
  1766  04B9  0876               	movf	send_payload@p_payload,w
  1767  04BA  0084               	movwf	4
  1768  04BB  1383               	bcf	3,7	;select IRP bank0
  1769  04BC  0800               	movf	0,w
  1770  04BD  00F7               	movwf	??_send_payload
  1771  04BE  0877               	movf	??_send_payload,w
  1772  04BF  00F8               	movwf	send_payload@data_len
  1773                           
  1774                           ;system_protocol.c: 407: spi_master_send(destination, p_payload++);
  1775  04C0  0876               	movf	send_payload@p_payload,w
  1776  04C1  00F7               	movwf	??_send_payload
  1777  04C2  0877               	movf	??_send_payload,w
  1778  04C3  00F0               	movwf	spi_master_send@data
  1779  04C4  087B               	movf	send_payload@destination,w
  1780  04C5  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  1781  04CA  3001               	movlw	1
  1782  04CB  00F7               	movwf	??_send_payload
  1783  04CC  0877               	movf	??_send_payload,w
  1784  04CD  07F6               	addwf	send_payload@p_payload,f
  1785                           
  1786                           ;system_protocol.c: 408: index_pos++;
  1787  04CE  3001               	movlw	1
  1788  04CF  00F7               	movwf	??_send_payload
  1789  04D0  0877               	movf	??_send_payload,w
  1790  04D1  07FA               	addwf	send_payload@index_pos,f
  1791                           
  1792                           ;system_protocol.c: 409: for(i = 0; i < data_len; i++)
  1793  04D2  01F9               	clrf	send_payload@i
  1794  04D3                     l1501:	
  1795  04D3  0878               	movf	send_payload@data_len,w
  1796  04D4  0279               	subwf	send_payload@i,w
  1797  04D5  1803               	btfsc	3,0
  1798  04D6  2CB3               	goto	l1503
  1799                           
  1800                           ;system_protocol.c: 410: {
  1801                           ;system_protocol.c: 411: spi_master_send(destination, p_payload++);
  1802  04D7  0876               	movf	send_payload@p_payload,w
  1803  04D8  00F7               	movwf	??_send_payload
  1804  04D9  0877               	movf	??_send_payload,w
  1805  04DA  00F0               	movwf	spi_master_send@data
  1806  04DB  087B               	movf	send_payload@destination,w
  1807  04DC  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  1808  04E1  3001               	movlw	1
  1809  04E2  00F7               	movwf	??_send_payload
  1810  04E3  0877               	movf	??_send_payload,w
  1811  04E4  07F6               	addwf	send_payload@p_payload,f
  1812                           
  1813                           ;system_protocol.c: 412: index_pos++;
  1814  04E5  3001               	movlw	1
  1815  04E6  00F7               	movwf	??_send_payload
  1816  04E7  0877               	movf	??_send_payload,w
  1817  04E8  07FA               	addwf	send_payload@index_pos,f
  1818  04E9  3001               	movlw	1
  1819  04EA  00F7               	movwf	??_send_payload
  1820  04EB  0877               	movf	??_send_payload,w
  1821  04EC  07F9               	addwf	send_payload@i,f
  1822  04ED  2CD3               	goto	l1501
  1823  04EE                     l1505:	
  1824  04EE  301E               	movlw	30
  1825  04EF  027A               	subwf	send_payload@index_pos,w
  1826  04F0  1803               	btfsc	3,0
  1827  04F1  0008               	return
  1828  04F2  2CB9               	goto	l1483
  1829  04F3                     __end_of_send_payload:	
  1830                           ;system_protocol.c: 413: }
  1831                           ;system_protocol.c: 414: }
  1832                           ;system_protocol.c: 416: return index_pos;
  1833                           ;	Return value of _send_payload is never used
  1834                           
  1835                           
  1836                           	psect	text7
  1837  021F                     __ptext7:	
  1838 ;; *************** function _putch *****************
  1839 ;; Defined at:
  1840 ;;		line 53 in file "uart_serial.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  byte            1    wreg     unsigned char 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  byte            1    0[COMMON] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         1       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0
  1857 ;;      Totals:         1       0       0       0       0
  1858 ;;Total ram usage:        1 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_command
  1864 ;;		_put_string
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _putch
  1870  021F                     _putch:	
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _putch: [wreg]
  1874                           ;putch@byte stored from wreg
  1875  021F  00F0               	movwf	putch@byte
  1876  0220                     l170:	
  1877                           ;uart_serial.c: 56: {
  1878                           ;uart_serial.c: 57: ;
  1879                           
  1880                           ;uart_serial.c: 55: while(!TXIF)
  1881                           
  1882  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0222  1E0C               	btfss	12,4	;volatile
  1885  0223  2A20               	goto	l170
  1886                           
  1887                           ;uart_serial.c: 58: }
  1888                           ;uart_serial.c: 59: TXREG = byte;
  1889  0224  0870               	movf	putch@byte,w
  1890  0225  0099               	movwf	25	;volatile
  1891  0226  0008               	return
  1892  0227                     __end_of_putch:	
  1893                           
  1894                           	psect	text8
  1895  06E2                     __ptext8:	
  1896 ;; *************** function _get_cw_data *****************
  1897 ;; Defined at:
  1898 ;;		line 94 in file "system_protocol.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  buf             2    0[BANK0 ] unsigned int 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;		None               void
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         0       2       0       0       0
  1914 ;;      Temps:          1       0       0       0       0
  1915 ;;      Totals:         1       2       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		_get_adcon
  1921 ;;		_spi_master_receive
  1922 ;;		_spi_master_start
  1923 ;; This function is called by:
  1924 ;;		_command
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _get_cw_data
  1930  06E2                     _get_cw_data:	
  1931                           
  1932                           ;system_protocol.c: 96: uint16_t buf;
  1933                           ;system_protocol.c: 98: spi_master_start();
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1937  06E2  120A  118A  22DF  120A  118A  	fcall	_spi_master_start
  1938                           
  1939                           ;system_protocol.c: 99: cw.power1[0] = spi_master_receive(POW);
  1940  06E7  3004               	movlw	4
  1941  06E8  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1942  06ED  00FD               	movwf	??_get_cw_data
  1943  06EE  087D               	movf	??_get_cw_data,w
  1944  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1945  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1946  06F1  00C1               	movwf	_cw
  1947                           
  1948                           ;system_protocol.c: 100: cw.power1[1] = spi_master_receive(POW);
  1949  06F2  3004               	movlw	4
  1950  06F3  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1951  06F8  00FD               	movwf	??_get_cw_data
  1952  06F9  087D               	movf	??_get_cw_data,w
  1953  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1954  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1955  06FC  00C2               	movwf	_cw+1
  1956                           
  1957                           ;system_protocol.c: 101: cw.power2[0] = spi_master_receive(POW);
  1958  06FD  3004               	movlw	4
  1959  06FE  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1960  0703  00FD               	movwf	??_get_cw_data
  1961  0704  087D               	movf	??_get_cw_data,w
  1962  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0707  00C3               	movwf	_cw+2
  1965                           
  1966                           ;system_protocol.c: 102: cw.power2[1] = spi_master_receive(POW);
  1967  0708  3004               	movlw	4
  1968  0709  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1969  070E  00FD               	movwf	??_get_cw_data
  1970  070F  087D               	movf	??_get_cw_data,w
  1971  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0712  00C4               	movwf	_cw+3
  1974                           
  1975                           ;system_protocol.c: 103: cw.power3[0] = spi_master_receive(POW);
  1976  0713  3004               	movlw	4
  1977  0714  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1978  0719  00FD               	movwf	??_get_cw_data
  1979  071A  087D               	movf	??_get_cw_data,w
  1980  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1981  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1982  071D  00C5               	movwf	_cw+4
  1983                           
  1984                           ;system_protocol.c: 104: cw.power3[1] = spi_master_receive(POW);
  1985  071E  3004               	movlw	4
  1986  071F  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1987  0724  00FD               	movwf	??_get_cw_data
  1988  0725  087D               	movf	??_get_cw_data,w
  1989  0726  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0727  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0728  00C6               	movwf	_cw+5
  1992                           
  1993                           ;system_protocol.c: 105: cw.power4[0] = spi_master_receive(POW);
  1994  0729  3004               	movlw	4
  1995  072A  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  1996  072F  00FD               	movwf	??_get_cw_data
  1997  0730  087D               	movf	??_get_cw_data,w
  1998  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0732  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0733  00C7               	movwf	_cw+6
  2001                           
  2002                           ;system_protocol.c: 106: cw.power4[1] = spi_master_receive(POW);
  2003  0734  3004               	movlw	4
  2004  0735  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  2005  073A  00FD               	movwf	??_get_cw_data
  2006  073B  087D               	movf	??_get_cw_data,w
  2007  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2008  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2009  073E  00C8               	movwf	_cw+7
  2010                           
  2011                           ;system_protocol.c: 107: cw.power5[0] = spi_master_receive(POW);
  2012  073F  3004               	movlw	4
  2013  0740  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  2014  0745  00FD               	movwf	??_get_cw_data
  2015  0746  087D               	movf	??_get_cw_data,w
  2016  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0749  00C9               	movwf	_cw+8
  2019                           
  2020                           ;system_protocol.c: 108: cw.power5[1] = spi_master_receive(POW);
  2021  074A  3004               	movlw	4
  2022  074B  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  2023  0750  00FD               	movwf	??_get_cw_data
  2024  0751  087D               	movf	??_get_cw_data,w
  2025  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0754  00CA               	movwf	_cw+9
  2028                           
  2029                           ;system_protocol.c: 109: buf = get_adcon();
  2030  0755  120A  118A  22FC   	fcall	_get_adcon
  2031  0758  0877               	movf	?_get_adcon+1,w
  2032  0759  1283               	bcf	3,5	;RP0=0, select bank0
  2033  075A  1303               	bcf	3,6	;RP1=0, select bank0
  2034  075B  00CF               	movwf	get_cw_data@buf+1
  2035  075C  0876               	movf	?_get_adcon,w
  2036  075D  00CE               	movwf	get_cw_data@buf
  2037                           
  2038                           ;system_protocol.c: 110: cw.temp[0] = (uint8_t)(buf >> 8);
  2039  075E  084F               	movf	get_cw_data@buf+1,w
  2040  075F  00FD               	movwf	??_get_cw_data
  2041  0760  087D               	movf	??_get_cw_data,w
  2042  0761  00CB               	movwf	_cw+10
  2043                           
  2044                           ;system_protocol.c: 111: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  2045  0762  084E               	movf	get_cw_data@buf,w
  2046  0763  00FD               	movwf	??_get_cw_data
  2047  0764  087D               	movf	??_get_cw_data,w
  2048  0765  00CC               	movwf	_cw+11
  2049                           
  2050                           ;system_protocol.c: 112: cw.obc2 = 1;
  2051  0766  144D               	bsf	_cw+12,0
  2052                           
  2053                           ;system_protocol.c: 113: cw.powmcu = 1;
  2054  0767  14CD               	bsf	_cw+12,1
  2055  0768  0008               	return
  2056  0769                     __end_of_get_cw_data:	
  2057                           
  2058                           	psect	text9
  2059  02DF                     __ptext9:	
  2060 ;; *************** function _spi_master_start *****************
  2061 ;; Defined at:
  2062 ;;		line 36 in file "spi_master.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		None
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;;		_get_cw_data
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _spi_master_start
  2092  02DF                     _spi_master_start:	
  2093                           
  2094                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _spi_master_start: []
  2098  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2099  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2100  02E1  1187               	bcf	7,3	;volatile
  2101                           
  2102                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  2103  02E2  1287               	bcf	7,5	;volatile
  2104                           
  2105                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  2106  02E3  1607               	bsf	7,4	;volatile
  2107                           
  2108                           ;spi_master.c: 44: TRISCbits.TRISC0 = 0;
  2109  02E4  1007               	bcf	7,0	;volatile
  2110                           
  2111                           ;spi_master.c: 45: TRISCbits.TRISC1 = 0;
  2112  02E5  1087               	bcf	7,1	;volatile
  2113                           
  2114                           ;spi_master.c: 48: SSPCONbits.SSPEN = 0;
  2115  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2116  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2117  02E8  1294               	bcf	20,5	;volatile
  2118                           
  2119                           ;spi_master.c: 51: SSPSTATbits.SMP = 0;
  2120  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  2121  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  2122  02EB  1394               	bcf	20,7	;volatile
  2123                           
  2124                           ;spi_master.c: 52: SSPCONbits.CKP = 0;
  2125  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2126  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2127  02EE  1214               	bcf	20,4	;volatile
  2128                           
  2129                           ;spi_master.c: 53: SSPSTATbits.CKE = 0;
  2130  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2131  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2132  02F1  1314               	bcf	20,6	;volatile
  2133                           
  2134                           ;spi_master.c: 56: SSPCONbits.SSPM3 = 0;
  2135  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2136  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2137  02F4  1194               	bcf	20,3	;volatile
  2138                           
  2139                           ;spi_master.c: 57: SSPCONbits.SSPM2 = 0;
  2140  02F5  1114               	bcf	20,2	;volatile
  2141                           
  2142                           ;spi_master.c: 58: SSPCONbits.SSPM1 = 0;
  2143  02F6  1094               	bcf	20,1	;volatile
  2144                           
  2145                           ;spi_master.c: 59: SSPCONbits.SSPM0 = 0;
  2146  02F7  1014               	bcf	20,0	;volatile
  2147                           
  2148                           ;spi_master.c: 62: PORTCbits.RC0 = 1;
  2149  02F8  1407               	bsf	7,0	;volatile
  2150                           
  2151                           ;spi_master.c: 63: PORTCbits.RC1 = 1;
  2152  02F9  1487               	bsf	7,1	;volatile
  2153                           
  2154                           ;spi_master.c: 66: SSPCONbits.SSPEN = 1;
  2155  02FA  1694               	bsf	20,5	;volatile
  2156  02FB  0008               	return
  2157  02FC                     __end_of_spi_master_start:	
  2158                           
  2159                           	psect	text10
  2160  02FC                     __ptext10:	
  2161 ;; *************** function _get_adcon *****************
  2162 ;; Defined at:
  2163 ;;		line 91 in file "AD_value.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  voltage_valu    3    0        unsigned int 
  2168 ;;  ad_value        2   11[COMMON] unsigned int 
  2169 ;;  my_adres        2    9[COMMON] struct .
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  2    6[COMMON] unsigned int 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         2       0       0       0       0
  2180 ;;      Locals:         4       0       0       0       0
  2181 ;;      Temps:          1       0       0       0       0
  2182 ;;      Totals:         7       0       0       0       0
  2183 ;;Total ram usage:        7 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    2
  2186 ;; This function calls:
  2187 ;;		_bit_shift
  2188 ;; This function is called by:
  2189 ;;		_get_cw_data
  2190 ;;		_get_pt
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           
  2195                           ;psect for function _get_adcon
  2196  02FC                     _get_adcon:	
  2197                           
  2198                           ;AD_value.c: 94: uint16_t ad_value = 0b0000000000;
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2202  02FC  01FB               	clrf	get_adcon@ad_value
  2203  02FD  01FC               	clrf	get_adcon@ad_value+1
  2204                           
  2205                           ;AD_value.c: 95: double voltage_value;
  2206                           ;AD_value.c: 96: adres_t my_adres;
  2207                           ;AD_value.c: 99: ADCON0 = 0b10000001;
  2208  02FE  3081               	movlw	129
  2209  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0301  009F               	movwf	31	;volatile
  2212                           
  2213                           ;AD_value.c: 100: ADCON0bits.GO_DONE = 1;
  2214  0302  151F               	bsf	31,2	;volatile
  2215  0303                     l65:	
  2216                           ;AD_value.c: 103: while(ADCON0bits.GO_DONE){;}
  2217                           
  2218  0303  191F               	btfsc	31,2	;volatile
  2219  0304  2B03               	goto	l65
  2220                           
  2221                           ;AD_value.c: 106: my_adres.my_adres_h = ADRESH;
  2222  0305  081E               	movf	30,w	;volatile
  2223  0306  00F8               	movwf	??_get_adcon
  2224  0307  0878               	movf	??_get_adcon,w
  2225  0308  00F9               	movwf	get_adcon@my_adres
  2226                           
  2227                           ;AD_value.c: 107: my_adres.my_adres_l = ADRESL;
  2228  0309  1683               	bsf	3,5	;RP0=1, select bank1
  2229  030A  1303               	bcf	3,6	;RP1=0, select bank1
  2230  030B  081E               	movf	30,w	;volatile
  2231  030C  00F8               	movwf	??_get_adcon
  2232  030D  0878               	movf	??_get_adcon,w
  2233  030E  00FA               	movwf	get_adcon@my_adres+1
  2234                           
  2235                           ;AD_value.c: 108: bit_shift(&ad_value, &my_adres);
  2236  030F  3079               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  2237  0310  00F8               	movwf	??_get_adcon
  2238  0311  0878               	movf	??_get_adcon,w
  2239  0312  00F0               	movwf	bit_shift@p_adres
  2240  0313  307B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  2241  0314  120A  118A  240D   	fcall	_bit_shift
  2242                           
  2243                           ;AD_value.c: 110: return ad_value;
  2244  0317  087C               	movf	get_adcon@ad_value+1,w
  2245  0318  00F7               	movwf	?_get_adcon+1
  2246  0319  087B               	movf	get_adcon@ad_value,w
  2247  031A  00F6               	movwf	?_get_adcon
  2248  031B  0008               	return
  2249  031C                     __end_of_get_adcon:	
  2250                           
  2251                           	psect	text11
  2252  040D                     __ptext11:	
  2253 ;; *************** function _bit_shift *****************
  2254 ;; Defined at:
  2255 ;;		line 71 in file "AD_value.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  p_ad_value      1    wreg     PTR unsigned int 
  2258 ;;		 -> get_adcon@ad_value(2), 
  2259 ;;  p_adres         1    0[COMMON] PTR struct .
  2260 ;;		 -> get_adcon@my_adres(2), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  p_ad_value      1    5[COMMON] PTR unsigned int 
  2263 ;;		 -> get_adcon@ad_value(2), 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         1       0       0       0       0
  2274 ;;      Locals:         1       0       0       0       0
  2275 ;;      Temps:          4       0       0       0       0
  2276 ;;      Totals:         6       0       0       0       0
  2277 ;;Total ram usage:        6 bytes
  2278 ;; Hardware stack levels used:    2
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_get_adcon
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _bit_shift
  2288  040D                     _bit_shift:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  2292                           ;bit_shift@p_ad_value stored from wreg
  2293  040D  00F5               	movwf	bit_shift@p_ad_value
  2294                           
  2295                           ;AD_value.c: 73: const uint8_t bit_mask_for_l = 0b00000011;
  2296                           ;AD_value.c: 75: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  2297  040E  0870               	movf	bit_shift@p_adres,w
  2298  040F  0084               	movwf	4
  2299  0410  0800               	movf	0,w
  2300  0411  00F1               	movwf	??_bit_shift
  2301  0412  01F2               	clrf	??_bit_shift+1
  2302  0413  0875               	movf	bit_shift@p_ad_value,w
  2303  0414  0084               	movwf	4
  2304  0415  0871               	movf	??_bit_shift,w
  2305  0416  0080               	movwf	0
  2306  0417  0A84               	incf	4,f
  2307  0418  0872               	movf	??_bit_shift+1,w
  2308  0419  0080               	movwf	0
  2309                           
  2310                           ;AD_value.c: 76: *p_ad_value <<= 2;
  2311  041A  0875               	movf	bit_shift@p_ad_value,w
  2312  041B  0084               	movwf	4
  2313  041C  3002               	movlw	2
  2314  041D                     u565:	
  2315  041D  1003               	clrc
  2316  041E  0D80               	rlf	0,f
  2317  041F  0A84               	incf	4,f
  2318  0420  0D80               	rlf	0,f
  2319  0421  0384               	decf	4,f
  2320  0422  3EFF               	addlw	-1
  2321  0423  1D03               	skipz
  2322  0424  2C1D               	goto	u565
  2323                           
  2324                           ;AD_value.c: 77: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  2325  0425  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  2326  0426  0084               	movwf	4
  2327  0427  120A  118A  2003  120A  118A  	fcall	stringdir
  2328  042C  00F1               	movwf	??_bit_shift
  2329  042D  0A70               	incf	bit_shift@p_adres,w
  2330  042E  0084               	movwf	4
  2331  042F  0800               	movf	0,w
  2332  0430  00F2               	movwf	??_bit_shift+1
  2333  0431  3006               	movlw	6
  2334  0432                     u575:	
  2335  0432  1003               	clrc
  2336  0433  0CF2               	rrf	??_bit_shift+1,f
  2337  0434  3EFF               	addlw	-1
  2338  0435  1D03               	skipz
  2339  0436  2C32               	goto	u575
  2340  0437  0872               	movf	??_bit_shift+1,w
  2341  0438  0571               	andwf	??_bit_shift,w
  2342  0439  00F3               	movwf	??_bit_shift+2
  2343  043A  01F4               	clrf	??_bit_shift+3
  2344  043B  0875               	movf	bit_shift@p_ad_value,w
  2345  043C  0084               	movwf	4
  2346  043D  0873               	movf	??_bit_shift+2,w
  2347  043E  0480               	iorwf	0,f
  2348  043F  0A84               	incf	4,f
  2349  0440  0874               	movf	??_bit_shift+3,w
  2350  0441  0480               	iorwf	0,f
  2351  0442  0008               	return
  2352  0443                     __end_of_bit_shift:	
  2353                           
  2354                           	psect	text12
  2355  0662                     __ptext12:	
  2356 ;; *************** function _cw_data_set *****************
  2357 ;; Defined at:
  2358 ;;		line 180 in file "system_protocol.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  p_cw_data       1    wreg     PTR struct .
  2361 ;;		 -> cw(13), 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  p_cw_data       1    5[COMMON] PTR struct .
  2364 ;;		 -> cw(13), 
  2365 ;;  i               1    0        unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       0       0       0       0
  2376 ;;      Locals:         1       0       0       0       0
  2377 ;;      Temps:          1       0       0       0       0
  2378 ;;      Totals:         2       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    1
  2382 ;; This function calls:
  2383 ;;		_uint8_data_set
  2384 ;; This function is called by:
  2385 ;;		_command
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _cw_data_set
  2391  0662                     _cw_data_set:	
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2395                           ;cw_data_set@p_cw_data stored from wreg
  2396  0662  00F5               	movwf	cw_data_set@p_cw_data
  2397                           
  2398                           ;system_protocol.c: 182: uint8_t i;
  2399                           ;system_protocol.c: 185: uint8_data_set(&(p_cw_data->power1), 2);
  2400  0663  0875               	movf	cw_data_set@p_cw_data,w
  2401  0664  00F0               	movwf	uint8_data_set@p_data
  2402  0665  3000               	movlw	0
  2403  0666  00F1               	movwf	uint8_data_set@p_data+1
  2404  0667  3002               	movlw	2
  2405  0668  00F4               	movwf	??_cw_data_set
  2406  0669  0874               	movf	??_cw_data_set,w
  2407  066A  00F2               	movwf	uint8_data_set@data_len
  2408  066B  120A  118A  235F  120A  118A  	fcall	_uint8_data_set
  2409                           
  2410                           ;system_protocol.c: 186: uint8_data_set(&(p_cw_data->power2), 2);
  2411  0670  0875               	movf	cw_data_set@p_cw_data,w
  2412  0671  3E02               	addlw	2
  2413  0672  00F0               	movwf	uint8_data_set@p_data
  2414  0673  3000               	movlw	0
  2415  0674  00F1               	movwf	uint8_data_set@p_data+1
  2416  0675  3002               	movlw	2
  2417  0676  00F4               	movwf	??_cw_data_set
  2418  0677  0874               	movf	??_cw_data_set,w
  2419  0678  00F2               	movwf	uint8_data_set@data_len
  2420  0679  120A  118A  235F  120A  118A  	fcall	_uint8_data_set
  2421                           
  2422                           ;system_protocol.c: 187: uint8_data_set(&(p_cw_data->power3), 2);
  2423  067E  0875               	movf	cw_data_set@p_cw_data,w
  2424  067F  3E04               	addlw	4
  2425  0680  00F0               	movwf	uint8_data_set@p_data
  2426  0681  3000               	movlw	0
  2427  0682  00F1               	movwf	uint8_data_set@p_data+1
  2428  0683  3002               	movlw	2
  2429  0684  00F4               	movwf	??_cw_data_set
  2430  0685  0874               	movf	??_cw_data_set,w
  2431  0686  00F2               	movwf	uint8_data_set@data_len
  2432  0687  120A  118A  235F  120A  118A  	fcall	_uint8_data_set
  2433                           
  2434                           ;system_protocol.c: 188: uint8_data_set(&(p_cw_data->power4), 2);
  2435  068C  0875               	movf	cw_data_set@p_cw_data,w
  2436  068D  3E06               	addlw	6
  2437  068E  00F0               	movwf	uint8_data_set@p_data
  2438  068F  3000               	movlw	0
  2439  0690  00F1               	movwf	uint8_data_set@p_data+1
  2440  0691  3002               	movlw	2
  2441  0692  00F4               	movwf	??_cw_data_set
  2442  0693  0874               	movf	??_cw_data_set,w
  2443  0694  00F2               	movwf	uint8_data_set@data_len
  2444  0695  120A  118A  235F  120A  118A  	fcall	_uint8_data_set
  2445                           
  2446                           ;system_protocol.c: 189: uint8_data_set(&(p_cw_data->power5), 2);
  2447  069A  0875               	movf	cw_data_set@p_cw_data,w
  2448  069B  3E08               	addlw	8
  2449  069C  00F0               	movwf	uint8_data_set@p_data
  2450  069D  3000               	movlw	0
  2451  069E  00F1               	movwf	uint8_data_set@p_data+1
  2452  069F  3002               	movlw	2
  2453  06A0  00F4               	movwf	??_cw_data_set
  2454  06A1  0874               	movf	??_cw_data_set,w
  2455  06A2  00F2               	movwf	uint8_data_set@data_len
  2456  06A3  120A  118A  235F  120A  118A  	fcall	_uint8_data_set
  2457                           
  2458                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->temp), 2);
  2459  06A8  0875               	movf	cw_data_set@p_cw_data,w
  2460  06A9  3E0A               	addlw	10
  2461  06AA  00F0               	movwf	uint8_data_set@p_data
  2462  06AB  3000               	movlw	0
  2463  06AC  00F1               	movwf	uint8_data_set@p_data+1
  2464  06AD  3002               	movlw	2
  2465  06AE  00F4               	movwf	??_cw_data_set
  2466  06AF  0874               	movf	??_cw_data_set,w
  2467  06B0  00F2               	movwf	uint8_data_set@data_len
  2468  06B1  120A  118A  235F  120A  118A  	fcall	_uint8_data_set
  2469                           
  2470                           ;system_protocol.c: 195: packet.payload[index_pos++] = 1;
  2471  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2472  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2473  06B8  0820               	movf	_index_pos,w
  2474  06B9  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2475  06BA  0084               	movwf	4
  2476  06BB  1383               	bcf	3,7	;select IRP bank0
  2477  06BC  0180               	clrf	0
  2478  06BD  0A80               	incf	0,f
  2479  06BE  3001               	movlw	1
  2480  06BF  00F4               	movwf	??_cw_data_set
  2481  06C0  0874               	movf	??_cw_data_set,w
  2482  06C1  07A0               	addwf	_index_pos,f
  2483                           
  2484                           ;system_protocol.c: 196: packet.payload[index_pos++] = cw.obc2;
  2485  06C2  0820               	movf	_index_pos,w
  2486  06C3  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2487  06C4  0084               	movwf	4
  2488  06C5  3000               	movlw	0
  2489  06C6  184D               	btfsc	_cw+12,0
  2490  06C7  3001               	movlw	1
  2491  06C8  0080               	movwf	0
  2492  06C9  3001               	movlw	1
  2493  06CA  00F4               	movwf	??_cw_data_set
  2494  06CB  0874               	movf	??_cw_data_set,w
  2495  06CC  07A0               	addwf	_index_pos,f
  2496                           
  2497                           ;system_protocol.c: 199: packet.payload[index_pos++] = 1;
  2498  06CD  0820               	movf	_index_pos,w
  2499  06CE  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2500  06CF  0084               	movwf	4
  2501  06D0  0180               	clrf	0
  2502  06D1  0A80               	incf	0,f
  2503  06D2  3001               	movlw	1
  2504  06D3  00F4               	movwf	??_cw_data_set
  2505  06D4  0874               	movf	??_cw_data_set,w
  2506  06D5  07A0               	addwf	_index_pos,f
  2507                           
  2508                           ;system_protocol.c: 200: packet.payload[index_pos++] = cw.powmcu;
  2509  06D6  0820               	movf	_index_pos,w
  2510  06D7  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2511  06D8  0084               	movwf	4
  2512  06D9  3000               	movlw	0
  2513  06DA  18CD               	btfsc	_cw+12,1
  2514  06DB  3001               	movlw	1
  2515  06DC  0080               	movwf	0
  2516  06DD  3001               	movlw	1
  2517  06DE  00F4               	movwf	??_cw_data_set
  2518  06DF  0874               	movf	??_cw_data_set,w
  2519  06E0  07A0               	addwf	_index_pos,f
  2520  06E1  0008               	return
  2521  06E2                     __end_of_cw_data_set:	
  2522                           
  2523                           	psect	text13
  2524  0246                     __ptext13:	
  2525 ;; *************** function _LED_data_set *****************
  2526 ;; Defined at:
  2527 ;;		line 80 in file "OBC1_app.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;		None               void
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    4
  2548 ;; This function calls:
  2549 ;;		_sent_data_set
  2550 ;; This function is called by:
  2551 ;;		_command
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _LED_data_set
  2557  0246                     _LED_data_set:	
  2558                           
  2559                           ;OBC1_app.c: 82: sent_data_set(0x01, 1, 1);
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _LED_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2563  0246  3001               	movlw	1
  2564  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0249  00D4               	movwf	sent_data_set@p_data
  2567  024A  3000               	movlw	0
  2568  024B  00D5               	movwf	sent_data_set@p_data+1
  2569  024C  01D6               	clrf	sent_data_set@data_len
  2570  024D  0AD6               	incf	sent_data_set@data_len,f
  2571  024E  01D7               	clrf	sent_data_set@byte_of_data
  2572  024F  0AD7               	incf	sent_data_set@byte_of_data,f
  2573  0250  120A  118A  258D   	fcall	_sent_data_set
  2574  0253  0008               	return
  2575  0254                     __end_of_LED_data_set:	
  2576                           
  2577                           	psect	text14
  2578  033D                     __ptext14:	
  2579 ;; *************** function _I2Ctemp_data_set *****************
  2580 ;; Defined at:
  2581 ;;		line 86 in file "OBC1_app.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  I2CTEMP_data    2   16[BANK0 ] unsigned char [2]
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       2       0       0       0
  2597 ;;      Temps:          0       1       0       0       0
  2598 ;;      Totals:         0       3       0       0       0
  2599 ;;Total ram usage:        3 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    4
  2602 ;; This function calls:
  2603 ;;		_getch
  2604 ;;		_sent_data_set
  2605 ;; This function is called by:
  2606 ;;		_command
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _I2Ctemp_data_set
  2612  033D                     _I2Ctemp_data_set:	
  2613                           
  2614                           ;OBC1_app.c: 88: uint8_t I2CTEMP_data[2];
  2615                           ;OBC1_app.c: 89: I2CTEMP_data[0] = getch();
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in _I2Ctemp_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2619  033D  120A  118A  2289  120A  118A  	fcall	_getch
  2620  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0344  00DD               	movwf	??_I2Ctemp_data_set
  2623  0345  085D               	movf	??_I2Ctemp_data_set,w
  2624  0346  00DE               	movwf	I2Ctemp_data_set@I2CTEMP_data
  2625                           
  2626                           ;OBC1_app.c: 90: I2CTEMP_data[1] = getch();
  2627  0347  120A  118A  2289  120A  118A  	fcall	_getch
  2628  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2629  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2630  034E  00DD               	movwf	??_I2Ctemp_data_set
  2631  034F  085D               	movf	??_I2Ctemp_data_set,w
  2632  0350  00DF               	movwf	I2Ctemp_data_set@I2CTEMP_data+1
  2633                           
  2634                           ;OBC1_app.c: 91: sent_data_set(I2CTEMP_data, 2, 1);
  2635  0351  305E               	movlw	(low (I2Ctemp_data_set@I2CTEMP_data| 0))& (0+255)
  2636  0352  00D4               	movwf	sent_data_set@p_data
  2637  0353  3000               	movlw	0
  2638  0354  00D5               	movwf	sent_data_set@p_data+1
  2639  0355  3002               	movlw	2
  2640  0356  00DD               	movwf	??_I2Ctemp_data_set
  2641  0357  085D               	movf	??_I2Ctemp_data_set,w
  2642  0358  00D6               	movwf	sent_data_set@data_len
  2643  0359  01D7               	clrf	sent_data_set@byte_of_data
  2644  035A  0AD7               	incf	sent_data_set@byte_of_data,f
  2645  035B  120A  118A  258D   	fcall	_sent_data_set
  2646  035E  0008               	return
  2647  035F                     __end_of_I2Ctemp_data_set:	
  2648                           
  2649                           	psect	text15
  2650  058D                     __ptext15:	
  2651 ;; *************** function _sent_data_set *****************
  2652 ;; Defined at:
  2653 ;;		line 141 in file "system_protocol.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  p_data          2    6[BANK0 ] PTR void 
  2656 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  2657 ;;  data_len        1    8[BANK0 ] unsigned char 
  2658 ;;  byte_of_data    1    9[BANK0 ] unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      unsigned char 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       4       0       0       0
  2671 ;;      Locals:         0       0       0       0       0
  2672 ;;      Temps:          0       5       0       0       0
  2673 ;;      Totals:         0       9       0       0       0
  2674 ;;Total ram usage:        9 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    3
  2677 ;; This function calls:
  2678 ;;		___wmul
  2679 ;;		_double_data_set
  2680 ;;		_uint16_data_set
  2681 ;;		_uint8_data_set
  2682 ;; This function is called by:
  2683 ;;		_LED_data_set
  2684 ;;		_I2Ctemp_data_set
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           
  2689                           ;psect for function _sent_data_set
  2690  058D                     _sent_data_set:	
  2691                           
  2692                           ;system_protocol.c: 144: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2696  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2697  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2698  058F  0857               	movf	sent_data_set@byte_of_data,w
  2699  0590  3E01               	addlw	1
  2700  0591  00F0               	movwf	___wmul@multiplier
  2701  0592  3000               	movlw	0
  2702  0593  1803               	skipnc
  2703  0594  3001               	movlw	1
  2704  0595  00F1               	movwf	___wmul@multiplier+1
  2705  0596  0856               	movf	sent_data_set@data_len,w
  2706  0597  00D8               	movwf	??_sent_data_set
  2707  0598  01D9               	clrf	??_sent_data_set+1
  2708  0599  0858               	movf	??_sent_data_set,w
  2709  059A  00F2               	movwf	___wmul@multiplicand
  2710  059B  0859               	movf	??_sent_data_set+1,w
  2711  059C  00F3               	movwf	___wmul@multiplicand+1
  2712  059D  120A  118A  231C  120A  118A  	fcall	___wmul
  2713  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2714  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2715  05A4  0820               	movf	_index_pos,w
  2716  05A5  0770               	addwf	?___wmul,w
  2717  05A6  00DA               	movwf	??_sent_data_set+2
  2718  05A7  0871               	movf	?___wmul+1,w
  2719  05A8  1803               	skipnc
  2720  05A9  0A71               	incf	?___wmul+1,w
  2721  05AA  00DB               	movwf	??_sent_data_set+3
  2722  05AB  09DA               	comf	??_sent_data_set+2,f
  2723  05AC  09DB               	comf	??_sent_data_set+3,f
  2724  05AD  0ADA               	incf	??_sent_data_set+2,f
  2725  05AE  1903               	skipnz
  2726  05AF  0ADB               	incf	??_sent_data_set+3,f
  2727  05B0  301E               	movlw	30
  2728  05B1  075A               	addwf	??_sent_data_set+2,w
  2729  05B2  085B               	movf	??_sent_data_set+3,w
  2730  05B3  1803               	skipnc
  2731  05B4  0A5B               	incf	??_sent_data_set+3,w
  2732  05B5  3E00               	addlw	0
  2733  05B6  00DC               	movwf	??_sent_data_set+4
  2734  05B7  1BDC               	btfsc	??_sent_data_set+4,7
  2735  05B8  0008               	return
  2736  05B9  2DE2               	goto	l1591
  2737  05BA                     l1583:	
  2738                           ;system_protocol.c: 151: {
  2739                           ;system_protocol.c: 152: case 1:
  2740                           
  2741                           ;system_protocol.c: 147: }
  2742                           ;system_protocol.c: 150: switch(byte_of_data)
  2743                           
  2744                           ;system_protocol.c: 145: {
  2745                           ;system_protocol.c: 146: return 0xff;
  2746                           ;	Return value of _sent_data_set is never used
  2747                           
  2748                           
  2749                           ;system_protocol.c: 153: uint8_data_set((uint8_t *)p_data, data_len);
  2750  05BA  0854               	movf	sent_data_set@p_data,w
  2751  05BB  00F0               	movwf	uint8_data_set@p_data
  2752  05BC  0855               	movf	sent_data_set@p_data+1,w
  2753  05BD  00F1               	movwf	uint8_data_set@p_data+1
  2754  05BE  0856               	movf	sent_data_set@data_len,w
  2755  05BF  00D8               	movwf	??_sent_data_set
  2756  05C0  0858               	movf	??_sent_data_set,w
  2757  05C1  00F2               	movwf	uint8_data_set@data_len
  2758  05C2  120A  118A  235F   	fcall	_uint8_data_set
  2759                           
  2760                           ;system_protocol.c: 154: break;
  2761  05C5  0008               	return
  2762  05C6                     l1585:	
  2763                           ;system_protocol.c: 155: case 2:
  2764                           
  2765                           
  2766                           ;system_protocol.c: 156: uint16_data_set((uint16_t *)p_data, data_len);
  2767  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2768  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2769  05C8  0854               	movf	sent_data_set@p_data,w
  2770  05C9  00F6               	movwf	uint16_data_set@p_data
  2771  05CA  0855               	movf	sent_data_set@p_data+1,w
  2772  05CB  00F7               	movwf	uint16_data_set@p_data+1
  2773  05CC  0856               	movf	sent_data_set@data_len,w
  2774  05CD  00D8               	movwf	??_sent_data_set
  2775  05CE  0858               	movf	??_sent_data_set,w
  2776  05CF  00F8               	movwf	uint16_data_set@data_len
  2777  05D0  120A  118A  247A   	fcall	_uint16_data_set
  2778                           
  2779                           ;system_protocol.c: 157: break;
  2780  05D3  0008               	return
  2781  05D4                     l1587:	
  2782                           ;system_protocol.c: 158: case 4:
  2783                           
  2784                           
  2785                           ;system_protocol.c: 159: double_data_set((double *)p_data, data_len);
  2786  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2787  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2788  05D6  0854               	movf	sent_data_set@p_data,w
  2789  05D7  00FA               	movwf	double_data_set@p_data
  2790  05D8  0855               	movf	sent_data_set@p_data+1,w
  2791  05D9  00FB               	movwf	double_data_set@p_data+1
  2792  05DA  0856               	movf	sent_data_set@data_len,w
  2793  05DB  00D8               	movwf	??_sent_data_set
  2794  05DC  0858               	movf	??_sent_data_set,w
  2795  05DD  00FC               	movwf	double_data_set@data_len
  2796  05DE  120A  118A  2443   	fcall	_double_data_set
  2797                           
  2798                           ;system_protocol.c: 163: }
  2799                           
  2800                           ;system_protocol.c: 162: return 0xff;
  2801                           ;	Return value of _sent_data_set is never used
  2802                           
  2803                           ;system_protocol.c: 161: default:
  2804                           
  2805                           ;system_protocol.c: 160: break;
  2806  05E1  0008               	return
  2807  05E2                     l1591:	
  2808  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2809  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2810  05E4  0857               	movf	sent_data_set@byte_of_data,w
  2811                           
  2812                           ; Switch size 1, requested type "space"
  2813                           ; Number of cases is 3, Range of values is 1 to 4
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte           10     6 (average)
  2817                           ; direct_byte           23    11 (fixed)
  2818                           ; jumptable            263     9 (fixed)
  2819                           ;	Chosen strategy is simple_byte
  2820  05E5  3A01               	xorlw	1	; case 1
  2821  05E6  1903               	skipnz
  2822  05E7  2DBA               	goto	l1583
  2823  05E8  3A03               	xorlw	3	; case 2
  2824  05E9  1903               	skipnz
  2825  05EA  2DC6               	goto	l1585
  2826  05EB  3A06               	xorlw	6	; case 4
  2827  05EC  1903               	skipnz
  2828  05ED  2DD4               	goto	l1587
  2829  05EE  2DEF               	goto	l227
  2830  05EF                     l227:	
  2831                           ;system_protocol.c: 166: return (uint8_t)(30 - index_pos);
  2832                           ;	Return value of _sent_data_set is never used
  2833                           
  2834  05EF  0008               	return
  2835  05F0                     __end_of_sent_data_set:	
  2836                           
  2837                           	psect	text16
  2838  035F                     __ptext16:	
  2839 ;; *************** function _uint8_data_set *****************
  2840 ;; Defined at:
  2841 ;;		line 260 in file "system_protocol.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  p_data          2    0[COMMON] PTR unsigned char 
  2844 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), cw(13), 
  2845 ;;  data_len        1    2[COMMON] unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         3       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0
  2860 ;;      Totals:         4       0       0       0       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_sent_data_set
  2867 ;;		_cw_data_set
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _uint8_data_set
  2873  035F                     _uint8_data_set:	
  2874  035F                     l1435:	
  2875                           ;system_protocol.c: 262: while(data_len)
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  2879                           
  2880  035F  0872               	movf	uint8_data_set@data_len,w
  2881  0360  1903               	btfsc	3,2
  2882  0361  0008               	return
  2883                           
  2884                           ;system_protocol.c: 263: {
  2885                           ;system_protocol.c: 264: packet.payload[index_pos++] = 1;
  2886  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0364  0820               	movf	_index_pos,w
  2889  0365  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2890  0366  0084               	movwf	4
  2891  0367  1383               	bcf	3,7	;select IRP bank0
  2892  0368  0180               	clrf	0
  2893  0369  0A80               	incf	0,f
  2894  036A  3001               	movlw	1
  2895  036B  00F3               	movwf	??_uint8_data_set
  2896  036C  0873               	movf	??_uint8_data_set,w
  2897  036D  07A0               	addwf	_index_pos,f
  2898                           
  2899                           ;system_protocol.c: 265: packet.payload[index_pos++] = *p_data++;
  2900  036E  0870               	movf	uint8_data_set@p_data,w
  2901  036F  0084               	movwf	4
  2902  0370  1783               	bsf	3,7
  2903  0371  1C71               	btfss	uint8_data_set@p_data+1,0
  2904  0372  1383               	bcf	3,7
  2905  0373  0800               	movf	0,w
  2906  0374  00F3               	movwf	??_uint8_data_set
  2907  0375  0820               	movf	_index_pos,w
  2908  0376  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2909  0377  0084               	movwf	4
  2910  0378  0873               	movf	??_uint8_data_set,w
  2911  0379  1383               	bcf	3,7	;select IRP bank0
  2912  037A  0080               	movwf	0
  2913  037B  3001               	movlw	1
  2914  037C  07F0               	addwf	uint8_data_set@p_data,f
  2915  037D  1803               	skipnc
  2916  037E  0AF1               	incf	uint8_data_set@p_data+1,f
  2917  037F  3000               	movlw	0
  2918  0380  07F1               	addwf	uint8_data_set@p_data+1,f
  2919  0381  3001               	movlw	1
  2920  0382  00F3               	movwf	??_uint8_data_set
  2921  0383  0873               	movf	??_uint8_data_set,w
  2922  0384  07A0               	addwf	_index_pos,f
  2923                           
  2924                           ;system_protocol.c: 266: data_len--;
  2925  0385  3001               	movlw	1
  2926  0386  02F2               	subwf	uint8_data_set@data_len,f
  2927  0387  2B5F               	goto	l1435
  2928  0388                     __end_of_uint8_data_set:	
  2929                           
  2930                           	psect	text17
  2931  047A                     __ptext17:	
  2932 ;; *************** function _uint16_data_set *****************
  2933 ;; Defined at:
  2934 ;;		line 282 in file "system_protocol.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  p_data          2    6[COMMON] PTR unsigned int 
  2937 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  2938 ;;  data_len        1    8[COMMON] unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  buf             3   10[COMMON] unsigned char [3]
  2941 ;;  i               1   13[COMMON] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         3       0       0       0       0
  2952 ;;      Locals:         4       0       0       0       0
  2953 ;;      Temps:          1       0       0       0       0
  2954 ;;      Totals:         8       0       0       0       0
  2955 ;;Total ram usage:        8 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    2
  2958 ;; This function calls:
  2959 ;;		_uint16_to_byte_array
  2960 ;; This function is called by:
  2961 ;;		_sent_data_set
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _uint16_data_set
  2967  047A                     _uint16_data_set:	
  2968  047A                     l251:	
  2969                           ;system_protocol.c: 284: uint8_t buf[3];
  2970                           ;system_protocol.c: 285: uint8_t i;
  2971                           ;system_protocol.c: 287: while(data_len)
  2972                           
  2973                           ;incstack = 0
  2974                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2975                           
  2976  047A  0878               	movf	uint16_data_set@data_len,w
  2977  047B  1903               	btfsc	3,2
  2978  047C  0008               	return
  2979                           
  2980                           ;system_protocol.c: 288: {
  2981                           ;system_protocol.c: 289: uint16_to_byte_array(p_data++, buf);
  2982  047D  0876               	movf	uint16_data_set@p_data,w
  2983  047E  00F0               	movwf	uint16_to_byte_array@p_data
  2984  047F  0877               	movf	uint16_data_set@p_data+1,w
  2985  0480  00F1               	movwf	uint16_to_byte_array@p_data+1
  2986  0481  307A               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  2987  0482  00F9               	movwf	??_uint16_data_set
  2988  0483  0879               	movf	??_uint16_data_set,w
  2989  0484  00F2               	movwf	uint16_to_byte_array@p_data_array
  2990  0485  120A  118A  2388  120A  118A  	fcall	_uint16_to_byte_array
  2991  048A  3002               	movlw	2
  2992  048B  07F6               	addwf	uint16_data_set@p_data,f
  2993  048C  1803               	skipnc
  2994  048D  0AF7               	incf	uint16_data_set@p_data+1,f
  2995  048E  3000               	movlw	0
  2996  048F  07F7               	addwf	uint16_data_set@p_data+1,f
  2997                           
  2998                           ;system_protocol.c: 291: for(i = 0; i < 3; i++)
  2999  0490  01FD               	clrf	uint16_data_set@i
  3000  0491  3003               	movlw	3
  3001  0492  027D               	subwf	uint16_data_set@i,w
  3002  0493  1803               	btfsc	3,0
  3003  0494  2CAE               	goto	l1457
  3004  0495                     l1449:	
  3005                           
  3006                           ;system_protocol.c: 292: {
  3007                           ;system_protocol.c: 293: packet.payload[index_pos++] = buf[i];
  3008  0495  087D               	movf	uint16_data_set@i,w
  3009  0496  3E7A               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  3010  0497  0084               	movwf	4
  3011  0498  0800               	movf	0,w
  3012  0499  00F9               	movwf	??_uint16_data_set
  3013  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3014  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3015  049C  0820               	movf	_index_pos,w
  3016  049D  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3017  049E  0084               	movwf	4
  3018  049F  0879               	movf	??_uint16_data_set,w
  3019  04A0  1383               	bcf	3,7	;select IRP bank0
  3020  04A1  0080               	movwf	0
  3021  04A2  3001               	movlw	1
  3022  04A3  00F9               	movwf	??_uint16_data_set
  3023  04A4  0879               	movf	??_uint16_data_set,w
  3024  04A5  07A0               	addwf	_index_pos,f
  3025  04A6  3001               	movlw	1
  3026  04A7  00F9               	movwf	??_uint16_data_set
  3027  04A8  0879               	movf	??_uint16_data_set,w
  3028  04A9  07FD               	addwf	uint16_data_set@i,f
  3029  04AA  3003               	movlw	3
  3030  04AB  027D               	subwf	uint16_data_set@i,w
  3031  04AC  1C03               	skipc
  3032  04AD  2C95               	goto	l1449
  3033  04AE                     l1457:	
  3034                           
  3035                           ;system_protocol.c: 294: }
  3036                           ;system_protocol.c: 295: data_len--;
  3037  04AE  3001               	movlw	1
  3038  04AF  02F8               	subwf	uint16_data_set@data_len,f
  3039  04B0  2C7A               	goto	l251
  3040  04B1                     __end_of_uint16_data_set:	
  3041                           
  3042                           	psect	text18
  3043  0388                     __ptext18:	
  3044 ;; *************** function _uint16_to_byte_array *****************
  3045 ;; Defined at:
  3046 ;;		line 340 in file "system_protocol.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  p_data          2    0[COMMON] PTR unsigned int 
  3049 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  3050 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3051 ;;		 -> uint16_data_set@buf(3), 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         3       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0
  3065 ;;      Temps:          3       0       0       0       0
  3066 ;;      Totals:         6       0       0       0       0
  3067 ;;Total ram usage:        6 bytes
  3068 ;; Hardware stack levels used:    2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_uint16_data_set
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function _uint16_to_byte_array
  3078  0388                     _uint16_to_byte_array:	
  3079                           
  3080                           ;system_protocol.c: 342: const uint16_t bit_mask = 0b0000000011111111;
  3081                           ;system_protocol.c: 345: p_data_array[0] = 2;
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  3085  0388  3002               	movlw	2
  3086  0389  00F3               	movwf	??_uint16_to_byte_array
  3087  038A  0872               	movf	uint16_to_byte_array@p_data_array,w
  3088  038B  0084               	movwf	4
  3089  038C  0873               	movf	??_uint16_to_byte_array,w
  3090  038D  0080               	movwf	0
  3091                           
  3092                           ;system_protocol.c: 346: p_data_array[1] = (uint8_t)(*p_data >> 8);
  3093  038E  0870               	movf	uint16_to_byte_array@p_data,w
  3094  038F  0084               	movwf	4
  3095  0390  1783               	bsf	3,7
  3096  0391  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  3097  0392  1383               	bcf	3,7
  3098  0393  0800               	movf	0,w
  3099  0394  00F3               	movwf	??_uint16_to_byte_array
  3100  0395  0A84               	incf	4,f
  3101  0396  0800               	movf	0,w
  3102  0397  00F4               	movwf	??_uint16_to_byte_array+1
  3103  0398  0874               	movf	??_uint16_to_byte_array+1,w
  3104  0399  00F5               	movwf	??_uint16_to_byte_array+2
  3105  039A  0A72               	incf	uint16_to_byte_array@p_data_array,w
  3106  039B  0084               	movwf	4
  3107  039C  0875               	movf	??_uint16_to_byte_array+2,w
  3108  039D  0080               	movwf	0
  3109                           
  3110                           ;system_protocol.c: 347: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  3111  039E  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  3112  039F  0084               	movwf	4
  3113  03A0  120A  118A  2003   	fcall	stringdir
  3114  03A3  00F3               	movwf	??_uint16_to_byte_array
  3115  03A4  0870               	movf	uint16_to_byte_array@p_data,w
  3116  03A5  0084               	movwf	4
  3117  03A6  1783               	bsf	3,7
  3118  03A7  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  3119  03A8  1383               	bcf	3,7
  3120  03A9  0800               	movf	0,w
  3121  03AA  0573               	andwf	??_uint16_to_byte_array,w
  3122  03AB  00F4               	movwf	??_uint16_to_byte_array+1
  3123  03AC  0872               	movf	uint16_to_byte_array@p_data_array,w
  3124  03AD  3E02               	addlw	2
  3125  03AE  0084               	movwf	4
  3126  03AF  0874               	movf	??_uint16_to_byte_array+1,w
  3127  03B0  0080               	movwf	0
  3128  03B1  0008               	return
  3129  03B2                     __end_of_uint16_to_byte_array:	
  3130                           
  3131                           	psect	text19
  3132  0443                     __ptext19:	
  3133 ;; *************** function _double_data_set *****************
  3134 ;; Defined at:
  3135 ;;		line 311 in file "system_protocol.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  p_data          2   10[COMMON] PTR 
  3138 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  3139 ;;  data_len        1   12[COMMON] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  buf             5    0[BANK0 ] unsigned char [5]
  3142 ;;  i               1    5[BANK0 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;		None               void
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         3       0       0       0       0
  3153 ;;      Locals:         0       6       0       0       0
  3154 ;;      Temps:          1       0       0       0       0
  3155 ;;      Totals:         4       6       0       0       0
  3156 ;;Total ram usage:       10 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    1
  3159 ;; This function calls:
  3160 ;;		_double_to_byte_array
  3161 ;; This function is called by:
  3162 ;;		_sent_data_set
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _double_data_set
  3168  0443                     _double_data_set:	
  3169  0443                     l259:	
  3170                           ;system_protocol.c: 313: uint8_t buf[5];
  3171                           ;system_protocol.c: 314: uint8_t i;
  3172                           ;system_protocol.c: 316: while(data_len)
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3176                           
  3177  0443  087C               	movf	double_data_set@data_len,w
  3178  0444  1903               	btfsc	3,2
  3179  0445  0008               	return
  3180                           
  3181                           ;system_protocol.c: 317: {
  3182                           ;system_protocol.c: 318: double_to_byte_array(p_data++, buf);
  3183  0446  087A               	movf	double_data_set@p_data,w
  3184  0447  00F0               	movwf	double_to_byte_array@p_data
  3185  0448  087B               	movf	double_data_set@p_data+1,w
  3186  0449  00F1               	movwf	double_to_byte_array@p_data+1
  3187  044A  304E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  3188  044B  00FD               	movwf	??_double_data_set
  3189  044C  087D               	movf	??_double_data_set,w
  3190  044D  00F2               	movwf	double_to_byte_array@p_data_array
  3191  044E  120A  118A  23B2  120A  118A  	fcall	_double_to_byte_array
  3192  0453  3003               	movlw	3
  3193  0454  07FA               	addwf	double_data_set@p_data,f
  3194  0455  1803               	skipnc
  3195  0456  0AFB               	incf	double_data_set@p_data+1,f
  3196  0457  3000               	movlw	0
  3197  0458  07FB               	addwf	double_data_set@p_data+1,f
  3198                           
  3199                           ;system_protocol.c: 320: for(i = 0; i < 5; i++)
  3200  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3201  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3202  045B  01D3               	clrf	double_data_set@i
  3203  045C  3005               	movlw	5
  3204  045D  0253               	subwf	double_data_set@i,w
  3205  045E  1803               	btfsc	3,0
  3206  045F  2C77               	goto	l1479
  3207  0460                     l1471:	
  3208                           
  3209                           ;system_protocol.c: 321: {
  3210                           ;system_protocol.c: 322: packet.payload[index_pos++] = buf[i];
  3211  0460  0853               	movf	double_data_set@i,w
  3212  0461  3E4E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  3213  0462  0084               	movwf	4
  3214  0463  1383               	bcf	3,7	;select IRP bank0
  3215  0464  0800               	movf	0,w
  3216  0465  00FD               	movwf	??_double_data_set
  3217  0466  0820               	movf	_index_pos,w
  3218  0467  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3219  0468  0084               	movwf	4
  3220  0469  087D               	movf	??_double_data_set,w
  3221  046A  0080               	movwf	0
  3222  046B  3001               	movlw	1
  3223  046C  00FD               	movwf	??_double_data_set
  3224  046D  087D               	movf	??_double_data_set,w
  3225  046E  07A0               	addwf	_index_pos,f
  3226  046F  3001               	movlw	1
  3227  0470  00FD               	movwf	??_double_data_set
  3228  0471  087D               	movf	??_double_data_set,w
  3229  0472  07D3               	addwf	double_data_set@i,f
  3230  0473  3005               	movlw	5
  3231  0474  0253               	subwf	double_data_set@i,w
  3232  0475  1C03               	skipc
  3233  0476  2C60               	goto	l1471
  3234  0477                     l1479:	
  3235                           
  3236                           ;system_protocol.c: 323: }
  3237                           ;system_protocol.c: 324: data_len--;
  3238  0477  3001               	movlw	1
  3239  0478  02FC               	subwf	double_data_set@data_len,f
  3240  0479  2C43               	goto	l259
  3241  047A                     __end_of_double_data_set:	
  3242                           
  3243                           	psect	text20
  3244  03B2                     __ptext20:	
  3245 ;; *************** function _double_to_byte_array *****************
  3246 ;; Defined at:
  3247 ;;		line 362 in file "system_protocol.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  p_data          2    0[COMMON] PTR 
  3250 ;;		 -> I2Ctemp_data_set@I2CTEMP_data(2), RAM(512), 
  3251 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3252 ;;		 -> double_data_set@buf(5), 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  converter       4    5[COMMON] struct .
  3255 ;;  i               1    9[COMMON] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3265 ;;      Params:         3       0       0       0       0
  3266 ;;      Locals:         5       0       0       0       0
  3267 ;;      Temps:          2       0       0       0       0
  3268 ;;      Totals:        10       0       0       0       0
  3269 ;;Total ram usage:       10 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_double_data_set
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function _double_to_byte_array
  3280  03B2                     _double_to_byte_array:	
  3281                           
  3282                           ;system_protocol.c: 364: uint8_t i;
  3283                           ;system_protocol.c: 365: union
  3284                           ;system_protocol.c: 366: {
  3285                           ;system_protocol.c: 367: double data;
  3286                           ;system_protocol.c: 368: uint8_t array[4];
  3287                           ;system_protocol.c: 369: } converter;
  3288                           ;system_protocol.c: 372: converter.data = *p_data;
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  3292  03B2  0870               	movf	double_to_byte_array@p_data,w
  3293  03B3  0084               	movwf	4
  3294  03B4  1783               	bsf	3,7
  3295  03B5  1C71               	btfss	double_to_byte_array@p_data+1,0
  3296  03B6  1383               	bcf	3,7
  3297  03B7  0800               	movf	0,w
  3298  03B8  00F5               	movwf	double_to_byte_array@converter
  3299  03B9  0A84               	incf	4,f
  3300  03BA  0800               	movf	0,w
  3301  03BB  00F6               	movwf	double_to_byte_array@converter+1
  3302  03BC  0A84               	incf	4,f
  3303  03BD  0800               	movf	0,w
  3304  03BE  00F7               	movwf	double_to_byte_array@converter+2
  3305                           
  3306                           ;system_protocol.c: 375: p_data_array[0] = 4;
  3307  03BF  3004               	movlw	4
  3308  03C0  00F3               	movwf	??_double_to_byte_array
  3309  03C1  0872               	movf	double_to_byte_array@p_data_array,w
  3310  03C2  0084               	movwf	4
  3311  03C3  0873               	movf	??_double_to_byte_array,w
  3312  03C4  1383               	bcf	3,7	;select IRP bank0
  3313  03C5  0080               	movwf	0
  3314                           
  3315                           ;system_protocol.c: 378: for(i = 0; i < 4; i++)
  3316  03C6  01F9               	clrf	double_to_byte_array@i
  3317  03C7                     L1:	
  3318  03C7  3004               	movlw	4
  3319  03C8  0279               	subwf	double_to_byte_array@i,w
  3320  03C9  1803               	btfsc	3,0
  3321  03CA  0008               	return
  3322                           
  3323                           ;system_protocol.c: 379: {
  3324                           ;system_protocol.c: 380: p_data_array[i + 1] = converter.array[i];
  3325  03CB  0879               	movf	double_to_byte_array@i,w
  3326  03CC  3E75               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  3327  03CD  0084               	movwf	4
  3328  03CE  0800               	movf	0,w
  3329  03CF  00F3               	movwf	??_double_to_byte_array
  3330  03D0  0879               	movf	double_to_byte_array@i,w
  3331  03D1  3E01               	addlw	1
  3332  03D2  0772               	addwf	double_to_byte_array@p_data_array,w
  3333  03D3  00F4               	movwf	??_double_to_byte_array+1
  3334  03D4  0874               	movf	??_double_to_byte_array+1,w
  3335  03D5  0084               	movwf	4
  3336  03D6  0873               	movf	??_double_to_byte_array,w
  3337  03D7  0080               	movwf	0
  3338  03D8  3001               	movlw	1
  3339  03D9  00F3               	movwf	??_double_to_byte_array
  3340  03DA  0873               	movf	??_double_to_byte_array,w
  3341  03DB  07F9               	addwf	double_to_byte_array@i,f
  3342  03DC  2BC7               	goto	L1
  3343  03DD                     __end_of_double_to_byte_array:	
  3344                           
  3345                           	psect	text21
  3346  031C                     __ptext21:	
  3347 ;; *************** function ___wmul *****************
  3348 ;; Defined at:
  3349 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  multiplier      2    0[COMMON] unsigned int 
  3352 ;;  multiplicand    2    2[COMMON] unsigned int 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  product         2    4[COMMON] unsigned int 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2    0[COMMON] unsigned int 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3364 ;;      Params:         4       0       0       0       0
  3365 ;;      Locals:         2       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0
  3367 ;;      Totals:         6       0       0       0       0
  3368 ;;Total ram usage:        6 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_sent_data_set
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function ___wmul
  3379  031C                     ___wmul:	
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3383  031C  01F4               	clrf	___wmul@product
  3384  031D  01F5               	clrf	___wmul@product+1
  3385  031E                     l1509:	
  3386  031E  1C70               	btfss	___wmul@multiplier,0
  3387  031F  2B26               	goto	l467
  3388  0320  0872               	movf	___wmul@multiplicand,w
  3389  0321  07F4               	addwf	___wmul@product,f
  3390  0322  1803               	skipnc
  3391  0323  0AF5               	incf	___wmul@product+1,f
  3392  0324  0873               	movf	___wmul@multiplicand+1,w
  3393  0325  07F5               	addwf	___wmul@product+1,f
  3394  0326                     l467:	
  3395  0326  3001               	movlw	1
  3396  0327                     u695:	
  3397  0327  1003               	clrc
  3398  0328  0DF2               	rlf	___wmul@multiplicand,f
  3399  0329  0DF3               	rlf	___wmul@multiplicand+1,f
  3400  032A  3EFF               	addlw	-1
  3401  032B  1D03               	skipz
  3402  032C  2B27               	goto	u695
  3403  032D  3001               	movlw	1
  3404  032E                     u705:	
  3405  032E  1003               	clrc
  3406  032F  0CF1               	rrf	___wmul@multiplier+1,f
  3407  0330  0CF0               	rrf	___wmul@multiplier,f
  3408  0331  3EFF               	addlw	-1
  3409  0332  1D03               	skipz
  3410  0333  2B2E               	goto	u705
  3411  0334  0870               	movf	___wmul@multiplier,w
  3412  0335  0471               	iorwf	___wmul@multiplier+1,w
  3413  0336  1D03               	btfss	3,2
  3414  0337  2B1E               	goto	l1509
  3415  0338  0875               	movf	___wmul@product+1,w
  3416  0339  00F1               	movwf	?___wmul+1
  3417  033A  0874               	movf	___wmul@product,w
  3418  033B  00F0               	movwf	?___wmul
  3419  033C  0008               	return
  3420  033D                     __end_of___wmul:	
  3421                           
  3422                           	psect	text22
  3423  0289                     __ptext22:	
  3424 ;; *************** function _getch *****************
  3425 ;; Defined at:
  3426 ;;		line 90 in file "uart_serial.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  count           2    0[COMMON] int 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      unsigned char 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, btemp+1
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       0       0       0       0
  3441 ;;      Locals:         2       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0
  3443 ;;      Totals:         2       0       0       0       0
  3444 ;;Total ram usage:        2 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_I2Ctemp_data_set
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _getch
  3455  0289                     _getch:	
  3456                           
  3457                           ;uart_serial.c: 92: int count = 0;
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _getch: [wreg+status,2+btemp+1]
  3461  0289  01F0               	clrf	getch@count
  3462  028A  01F1               	clrf	getch@count+1
  3463                           
  3464                           ;uart_serial.c: 93: while(!RCIF && count <= 100) count++;
  3465  028B  2A92               	goto	l1571
  3466  028C                     l1569:	
  3467  028C  3001               	movlw	1
  3468  028D  07F0               	addwf	getch@count,f
  3469  028E  1803               	skipnc
  3470  028F  0AF1               	incf	getch@count+1,f
  3471  0290  3000               	movlw	0
  3472  0291  07F1               	addwf	getch@count+1,f
  3473  0292                     l1571:	
  3474  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0293  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0294  1A8C               	btfsc	12,5	;volatile
  3477  0295  2AA1               	goto	l1575
  3478  0296  0871               	movf	getch@count+1,w
  3479  0297  3A80               	xorlw	128
  3480  0298  00FF               	movwf	127
  3481  0299  3080               	movlw	128
  3482  029A  027F               	subwf	127,w
  3483  029B  1D03               	skipz
  3484  029C  2A9F               	goto	u785
  3485  029D  3065               	movlw	101
  3486  029E  0270               	subwf	getch@count,w
  3487  029F                     u785:	
  3488  029F  1C03               	skipc
  3489  02A0  2A8C               	goto	l1569
  3490  02A1                     l1575:	
  3491                           
  3492                           ;uart_serial.c: 95: return RCREG;
  3493  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3494  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3495  02A3  081A               	movf	26,w	;volatile
  3496  02A4  0008               	return
  3497  02A5                     __end_of_getch:	
  3498                           
  3499                           	psect	text23
  3500  022F                     __ptext23:	
  3501 ;; *************** function _ad_con_init *****************
  3502 ;; Defined at:
  3503 ;;		line 49 in file "AD_value.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;		None               void
  3510 ;; Registers used:
  3511 ;;		wreg
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _ad_con_init
  3532  022F                     _ad_con_init:	
  3533                           
  3534                           ;AD_value.c: 52: PORTAbits.RA0 = 0;
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _ad_con_init: [wreg]
  3538  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0231  1005               	bcf	5,0	;volatile
  3541                           
  3542                           ;AD_value.c: 53: PORTAbits.RA3 = 0;
  3543  0232  1185               	bcf	5,3	;volatile
  3544                           
  3545                           ;AD_value.c: 54: TRISAbits.TRISA0 = 1;
  3546  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3548  0235  1405               	bsf	5,0	;volatile
  3549                           
  3550                           ;AD_value.c: 55: TRISAbits.TRISA3 = 1;
  3551  0236  1585               	bsf	5,3	;volatile
  3552                           
  3553                           ;AD_value.c: 56: ADCON1 = 0b00000001;
  3554  0237  3001               	movlw	1
  3555  0238  009F               	movwf	31	;volatile
  3556  0239  0008               	return
  3557  023A                     __end_of_ad_con_init:	
  3558                           
  3559                           	psect	text24
  3560  0264                     __ptext24:	
  3561 ;; *************** function _POW_status *****************
  3562 ;; Defined at:
  3563 ;;		line 44 in file "OBC1_app.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;		None               void
  3570 ;; Registers used:
  3571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0
  3580 ;;      Totals:         0       0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    1
  3584 ;; This function calls:
  3585 ;;		_MCLR_reset
  3586 ;;		_spi_master_send
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _POW_status
  3594  0264                     _POW_status:	
  3595                           
  3596                           ;OBC1_app.c: 46: spi_master_send(POW, 0x01);
  3597                           
  3598                           ;incstack = 0
  3599                           ; Regs used in _POW_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3600  0264  01F0               	clrf	spi_master_send@data
  3601  0265  0AF0               	incf	spi_master_send@data,f
  3602  0266  3004               	movlw	4
  3603  0267  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  3604                           
  3605                           ;OBC1_app.c: 47: if(PORTDbits.RD1==0) MCLR_reset(0x06);
  3606  026C  1283               	bcf	3,5	;RP0=0, select bank0
  3607  026D  1303               	bcf	3,6	;RP1=0, select bank0
  3608  026E  1888               	btfsc	8,1	;volatile
  3609  026F  0008               	return
  3610  0270  3006               	movlw	6
  3611  0271  120A  118A  22A5   	fcall	_MCLR_reset
  3612  0274  0008               	return
  3613  0275                     __end_of_POW_status:	
  3614                           
  3615                           	psect	text25
  3616  0254                     __ptext25:	
  3617 ;; *************** function _MCLR_init *****************
  3618 ;; Defined at:
  3619 ;;		line 35 in file "MCLR_reset.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  nin             2    0[COMMON] PTR unsigned char 
  3624 ;;		 -> RAM(512), 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;		None               void
  3627 ;; Registers used:
  3628 ;;		wreg, fsr0l, fsr0h
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3634 ;;      Params:         0       0       0       0       0
  3635 ;;      Locals:         2       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0
  3637 ;;      Totals:         2       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           
  3648                           ;psect for function _MCLR_init
  3649  0254                     _MCLR_init:	
  3650                           
  3651                           ;MCLR_reset.c: 37: uint8_t *nin;
  3652                           ;MCLR_reset.c: 38: nin = 0x09;
  3653                           
  3654                           ;incstack = 0
  3655                           ; Regs used in _MCLR_init: [wregfsr0]
  3656  0254  3009               	movlw	9
  3657  0255  00F0               	movwf	MCLR_init@nin
  3658  0256  3000               	movlw	0
  3659  0257  00F1               	movwf	MCLR_init@nin+1
  3660                           
  3661                           ;MCLR_reset.c: 41: TRISEbits.TRISE1 = 0;
  3662  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3663  0259  1303               	bcf	3,6	;RP1=0, select bank1
  3664  025A  1089               	bcf	9,1	;volatile
  3665                           
  3666                           ;MCLR_reset.c: 42: TRISEbits.TRISE0 = 0;
  3667  025B  1009               	bcf	9,0	;volatile
  3668                           
  3669                           ;MCLR_reset.c: 45: *nin = 0x03;
  3670  025C  0870               	movf	MCLR_init@nin,w
  3671  025D  0084               	movwf	4
  3672  025E  1383               	bcf	3,7
  3673  025F  1871               	btfsc	MCLR_init@nin+1,0
  3674  0260  1783               	bsf	3,7
  3675  0261  3003               	movlw	3
  3676  0262  0080               	movwf	0
  3677  0263  0008               	return
  3678  0264                     __end_of_MCLR_init:	
  3679                           
  3680                           	psect	text26
  3681  02C2                     __ptext26:	
  3682 ;; *************** function _COM_status *****************
  3683 ;; Defined at:
  3684 ;;		line 32 in file "OBC1_app.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  COM_stat        1    7[COMMON] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      unsigned char 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         1       0       0       0       0
  3700 ;;      Temps:          1       0       0       0       0
  3701 ;;      Totals:         2       0       0       0       0
  3702 ;;Total ram usage:        2 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    1
  3705 ;; This function calls:
  3706 ;;		_MCLR_reset
  3707 ;;		_spi_master_receive
  3708 ;;		_spi_master_send
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _COM_status
  3716  02C2                     _COM_status:	
  3717                           
  3718                           ;OBC1_app.c: 34: uint8_t COM_stat = 0;
  3719                           
  3720                           ;incstack = 0
  3721                           ; Regs used in _COM_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3722  02C2  01F7               	clrf	COM_status@COM_stat
  3723                           
  3724                           ;OBC1_app.c: 35: spi_master_send(COM, 0x01);
  3725  02C3  01F0               	clrf	spi_master_send@data
  3726  02C4  0AF0               	incf	spi_master_send@data,f
  3727  02C5  3003               	movlw	3
  3728  02C6  120A  118A  253E  120A  118A  	fcall	_spi_master_send
  3729                           
  3730                           ;OBC1_app.c: 36: COM_stat = spi_master_receive(COM);
  3731  02CB  3003               	movlw	3
  3732  02CC  120A  118A  24F3  120A  118A  	fcall	_spi_master_receive
  3733  02D1  00F6               	movwf	??_COM_status
  3734  02D2  0876               	movf	??_COM_status,w
  3735  02D3  00F7               	movwf	COM_status@COM_stat
  3736                           
  3737                           ;OBC1_app.c: 37: if(COM_stat == 0x00 || COM_stat == 0xFF)
  3738  02D4  0877               	movf	COM_status@COM_stat,w
  3739  02D5  1D03               	btfss	3,2
  3740  02D6  0A77               	incf	COM_status@COM_stat,w
  3741  02D7  1D03               	btfss	3,2
  3742  02D8  2ADD               	goto	l1695
  3743                           
  3744                           ;OBC1_app.c: 38: {
  3745                           ;OBC1_app.c: 39: MCLR_reset(0x05);
  3746  02D9  3005               	movlw	5
  3747  02DA  120A  118A  22A5   	fcall	_MCLR_reset
  3748  02DD                     l1695:	
  3749                           
  3750                           ;OBC1_app.c: 40: }
  3751                           ;OBC1_app.c: 41: return COM_stat;
  3752  02DD  0877               	movf	COM_status@COM_stat,w
  3753  02DE  0008               	return
  3754  02DF                     __end_of_COM_status:	
  3755                           
  3756                           	psect	text27
  3757  053E                     __ptext27:	
  3758 ;; *************** function _spi_master_send *****************
  3759 ;; Defined at:
  3760 ;;		line 154 in file "spi_master.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  destination     1    wreg     enum E1099
  3763 ;;  data            1    0[COMMON] unsigned char 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  destination     1    5[COMMON] enum E1099
  3766 ;;  timeout_coun    2    3[COMMON] unsigned int 
  3767 ;;  dummy           1    2[COMMON] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;		None               void
  3770 ;; Registers used:
  3771 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         1       0       0       0       0
  3778 ;;      Locals:         4       0       0       0       0
  3779 ;;      Temps:          1       0       0       0       0
  3780 ;;      Totals:         6       0       0       0       0
  3781 ;;Total ram usage:        6 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_send_payload
  3787 ;;		_packet_send_master
  3788 ;;		_COM_status
  3789 ;;		_POW_status
  3790 ;;		_command
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           
  3795                           ;psect for function _spi_master_send
  3796  053E                     _spi_master_send:	
  3797                           
  3798                           ;incstack = 0
  3799                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  3800                           ;spi_master_send@destination stored from wreg
  3801  053E  00F5               	movwf	spi_master_send@destination
  3802                           
  3803                           ;spi_master.c: 156: uint8_t dummy;
  3804                           ;spi_master.c: 157: uint16_t timeout_counter = 1000;
  3805  053F  30E8               	movlw	232
  3806  0540  00F3               	movwf	spi_master_send@timeout_counter
  3807  0541  3003               	movlw	3
  3808  0542  00F4               	movwf	spi_master_send@timeout_counter+1
  3809                           
  3810                           ;spi_master.c: 160: dummy = SSPBUF;
  3811  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3812  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0545  0813               	movf	19,w	;volatile
  3814  0546  00F1               	movwf	??_spi_master_send
  3815  0547  0871               	movf	??_spi_master_send,w
  3816  0548  00F2               	movwf	spi_master_send@dummy
  3817                           
  3818                           ;spi_master.c: 163: switch(destination)
  3819  0549  2D50               	goto	l1375
  3820  054A                     l115:	
  3821                           ;spi_master.c: 166: while(PORTDbits.RD0 == 0){;}
  3822                           
  3823                           ;spi_master.c: 164: {
  3824                           ;spi_master.c: 165: case COM:
  3825                           
  3826  054A  1808               	btfsc	8,0	;volatile
  3827  054B  2D5D               	goto	l1379
  3828  054C  2D4A               	goto	l115
  3829  054D                     l120:	
  3830                           ;spi_master.c: 169: while(PORTDbits.RD1 == 0){;}
  3831                           
  3832                           ;spi_master.c: 168: case POW:
  3833                           
  3834                           ;spi_master.c: 167: break;
  3835                           
  3836  054D  1888               	btfsc	8,1	;volatile
  3837  054E  2D5D               	goto	l1379
  3838  054F  2D4D               	goto	l120
  3839  0550                     l1375:	
  3840                           ;spi_master.c: 171: }
  3841                           
  3842                           ;spi_master.c: 170: break;
  3843                           
  3844  0550  0875               	movf	spi_master_send@destination,w
  3845                           
  3846                           ; Switch size 1, requested type "space"
  3847                           ; Number of cases is 2, Range of values is 3 to 4
  3848                           ; switch strategies available:
  3849                           ; Name         Instructions Cycles
  3850                           ; simple_byte            7     4 (average)
  3851                           ; direct_byte           17    11 (fixed)
  3852                           ; jumptable            263     9 (fixed)
  3853                           ;	Chosen strategy is simple_byte
  3854  0551  3A03               	xorlw	3	; case 3
  3855  0552  1903               	skipnz
  3856  0553  2D4A               	goto	l115
  3857  0554  3A07               	xorlw	7	; case 4
  3858  0555  1903               	skipnz
  3859  0556  2D4D               	goto	l120
  3860  0557  2D5D               	goto	l1379
  3861                           
  3862                           ;spi_master.c: 174: switch(destination)
  3863  0558  2D5D               	goto	l1379
  3864  0559                     l124:	
  3865                           ;spi_master.c: 175: {
  3866                           ;spi_master.c: 176: case COM:
  3867                           
  3868                           
  3869                           ;spi_master.c: 177: PORTCbits.RC0 = 0;
  3870  0559  1007               	bcf	7,0	;volatile
  3871                           
  3872                           ;spi_master.c: 178: break;
  3873  055A  2D65               	goto	l1381
  3874  055B                     l126:	
  3875                           ;spi_master.c: 179: case POW:
  3876                           
  3877                           
  3878                           ;spi_master.c: 180: PORTCbits.RC1 = 0;
  3879  055B  1087               	bcf	7,1	;volatile
  3880                           
  3881                           ;spi_master.c: 182: }
  3882                           
  3883                           ;spi_master.c: 181: break;
  3884  055C  2D65               	goto	l1381
  3885  055D                     l1379:	
  3886  055D  0875               	movf	spi_master_send@destination,w
  3887                           
  3888                           ; Switch size 1, requested type "space"
  3889                           ; Number of cases is 2, Range of values is 3 to 4
  3890                           ; switch strategies available:
  3891                           ; Name         Instructions Cycles
  3892                           ; simple_byte            7     4 (average)
  3893                           ; direct_byte           17    11 (fixed)
  3894                           ; jumptable            263     9 (fixed)
  3895                           ;	Chosen strategy is simple_byte
  3896  055E  3A03               	xorlw	3	; case 3
  3897  055F  1903               	skipnz
  3898  0560  2D59               	goto	l124
  3899  0561  3A07               	xorlw	7	; case 4
  3900  0562  1903               	skipnz
  3901  0563  2D5B               	goto	l126
  3902  0564  2D65               	goto	l1381
  3903  0565                     l1381:	
  3904                           
  3905                           ;spi_master.c: 185: SSPBUF = data;
  3906  0565  0870               	movf	spi_master_send@data,w
  3907  0566  0093               	movwf	19	;volatile
  3908  0567                     l1389:	
  3909                           ;spi_master.c: 188: while(SSPSTATbits.BF == 0)
  3910                           
  3911  0567  1683               	bsf	3,5	;RP0=1, select bank1
  3912  0568  1303               	bcf	3,6	;RP1=0, select bank1
  3913  0569  1814               	btfsc	20,0	;volatile
  3914  056A  2D7F               	goto	l1393
  3915                           
  3916                           ;spi_master.c: 189: {
  3917                           ;spi_master.c: 191: if(timeout_counter == 0)
  3918  056B  0873               	movf	spi_master_send@timeout_counter,w
  3919  056C  0474               	iorwf	spi_master_send@timeout_counter+1,w
  3920  056D  1903               	btfsc	3,2
  3921  056E  0008               	return
  3922                           
  3923                           ;spi_master.c: 194: }
  3924                           ;spi_master.c: 197: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3925                           
  3926                           ;spi_master.c: 192: {
  3927                           ;spi_master.c: 193: return;
  3928  056F  2D70               	nop2	;2 cycle nop
  3929  0570  2D71               	nop2	;2 cycle nop
  3930  0571  0000               	nop
  3931                           
  3932                           ;spi_master.c: 198: timeout_counter--;
  3933  0572  3001               	movlw	1
  3934  0573  02F3               	subwf	spi_master_send@timeout_counter,f
  3935  0574  3000               	movlw	0
  3936  0575  1C03               	skipc
  3937  0576  03F4               	decf	spi_master_send@timeout_counter+1,f
  3938  0577  02F4               	subwf	spi_master_send@timeout_counter+1,f
  3939  0578  2D67               	goto	l1389
  3940  0579                     l133:	
  3941                           ;spi_master.c: 203: {
  3942                           ;spi_master.c: 204: case COM:
  3943                           
  3944                           ;spi_master.c: 199: }
  3945                           ;spi_master.c: 202: switch(destination)
  3946                           
  3947                           
  3948                           ;spi_master.c: 205: PORTCbits.RC0 = 1;
  3949  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3950  057A  1407               	bsf	7,0	;volatile
  3951                           
  3952                           ;spi_master.c: 206: break;
  3953  057B  2D87               	goto	l1395
  3954  057C                     l135:	
  3955                           ;spi_master.c: 207: case POW:
  3956                           
  3957                           
  3958                           ;spi_master.c: 208: PORTCbits.RC1 = 1;
  3959  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3960  057D  1487               	bsf	7,1	;volatile
  3961                           
  3962                           ;spi_master.c: 210: }
  3963                           
  3964                           ;spi_master.c: 209: break;
  3965  057E  2D87               	goto	l1395
  3966  057F                     l1393:	
  3967  057F  0875               	movf	spi_master_send@destination,w
  3968                           
  3969                           ; Switch size 1, requested type "space"
  3970                           ; Number of cases is 2, Range of values is 3 to 4
  3971                           ; switch strategies available:
  3972                           ; Name         Instructions Cycles
  3973                           ; simple_byte            7     4 (average)
  3974                           ; direct_byte           17    11 (fixed)
  3975                           ; jumptable            263     9 (fixed)
  3976                           ;	Chosen strategy is simple_byte
  3977  0580  3A03               	xorlw	3	; case 3
  3978  0581  1903               	skipnz
  3979  0582  2D79               	goto	l133
  3980  0583  3A07               	xorlw	7	; case 4
  3981  0584  1903               	skipnz
  3982  0585  2D7C               	goto	l135
  3983  0586  2D87               	goto	l1395
  3984  0587                     l1395:	
  3985                           
  3986                           ;spi_master.c: 213: dummy = SSPBUF;
  3987  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3988  0588  0813               	movf	19,w	;volatile
  3989  0589  00F1               	movwf	??_spi_master_send
  3990  058A  0871               	movf	??_spi_master_send,w
  3991  058B  00F2               	movwf	spi_master_send@dummy
  3992  058C  0008               	return
  3993  058D                     __end_of_spi_master_send:	
  3994                           
  3995                           	psect	text28
  3996  04F3                     __ptext28:	
  3997 ;; *************** function _spi_master_receive *****************
  3998 ;; Defined at:
  3999 ;;		line 80 in file "spi_master.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  destination     1    wreg     enum E1099
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  destination     1    4[COMMON] enum E1099
  4004 ;;  timeout_coun    2    2[COMMON] unsigned int 
  4005 ;;  dummy           1    1[COMMON] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      unsigned char 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         4       0       0       0       0
  4017 ;;      Temps:          1       0       0       0       0
  4018 ;;      Totals:         5       0       0       0       0
  4019 ;;Total ram usage:        5 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_get_cw_data
  4025 ;;		_COM_status
  4026 ;;		_receive_payload
  4027 ;;		_packet_receive_master
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function _spi_master_receive
  4033  04F3                     _spi_master_receive:	
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  4037                           ;spi_master_receive@destination stored from wreg
  4038  04F3  00F4               	movwf	spi_master_receive@destination
  4039                           
  4040                           ;spi_master.c: 82: uint8_t dummy;
  4041                           ;spi_master.c: 83: uint16_t timeout_counter = 1000;
  4042  04F4  30E8               	movlw	232
  4043  04F5  00F2               	movwf	spi_master_receive@timeout_counter
  4044  04F6  3003               	movlw	3
  4045  04F7  00F3               	movwf	spi_master_receive@timeout_counter+1
  4046                           
  4047                           ;spi_master.c: 86: dummy = SSPBUF;
  4048  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  4049  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  4050  04FA  0813               	movf	19,w	;volatile
  4051  04FB  00F0               	movwf	??_spi_master_receive
  4052  04FC  0870               	movf	??_spi_master_receive,w
  4053  04FD  00F1               	movwf	spi_master_receive@dummy
  4054                           
  4055                           ;spi_master.c: 89: switch(destination)
  4056  04FE  2D05               	goto	l1543
  4057  04FF                     l90:	
  4058                           ;spi_master.c: 92: while(PORTDbits.RD0 == 0){;}
  4059                           
  4060                           ;spi_master.c: 90: {
  4061                           ;spi_master.c: 91: case COM:
  4062                           
  4063  04FF  1808               	btfsc	8,0	;volatile
  4064  0500  2D12               	goto	l1547
  4065  0501  2CFF               	goto	l90
  4066  0502                     l95:	
  4067                           ;spi_master.c: 95: while(PORTDbits.RD1 == 0){;}
  4068                           
  4069                           ;spi_master.c: 94: case POW:
  4070                           
  4071                           ;spi_master.c: 93: break;
  4072                           
  4073  0502  1888               	btfsc	8,1	;volatile
  4074  0503  2D12               	goto	l1547
  4075  0504  2D02               	goto	l95
  4076  0505                     l1543:	
  4077                           ;spi_master.c: 97: }
  4078                           
  4079                           ;spi_master.c: 96: break;
  4080                           
  4081  0505  0874               	movf	spi_master_receive@destination,w
  4082                           
  4083                           ; Switch size 1, requested type "space"
  4084                           ; Number of cases is 2, Range of values is 3 to 4
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte            7     4 (average)
  4088                           ; direct_byte           17    11 (fixed)
  4089                           ; jumptable            263     9 (fixed)
  4090                           ;	Chosen strategy is simple_byte
  4091  0506  3A03               	xorlw	3	; case 3
  4092  0507  1903               	skipnz
  4093  0508  2CFF               	goto	l90
  4094  0509  3A07               	xorlw	7	; case 4
  4095  050A  1903               	skipnz
  4096  050B  2D02               	goto	l95
  4097  050C  2D12               	goto	l1547
  4098                           
  4099                           ;spi_master.c: 100: switch(destination)
  4100  050D  2D12               	goto	l1547
  4101  050E                     l99:	
  4102                           ;spi_master.c: 101: {
  4103                           ;spi_master.c: 102: case COM:
  4104                           
  4105                           
  4106                           ;spi_master.c: 103: PORTCbits.RC0 = 0;
  4107  050E  1007               	bcf	7,0	;volatile
  4108                           
  4109                           ;spi_master.c: 104: break;
  4110  050F  2D1A               	goto	l1549
  4111  0510                     l101:	
  4112                           ;spi_master.c: 105: case POW:
  4113                           
  4114                           
  4115                           ;spi_master.c: 106: PORTCbits.RC1 = 0;
  4116  0510  1087               	bcf	7,1	;volatile
  4117                           
  4118                           ;spi_master.c: 108: }
  4119                           
  4120                           ;spi_master.c: 107: break;
  4121  0511  2D1A               	goto	l1549
  4122  0512                     l1547:	
  4123  0512  0874               	movf	spi_master_receive@destination,w
  4124                           
  4125                           ; Switch size 1, requested type "space"
  4126                           ; Number of cases is 2, Range of values is 3 to 4
  4127                           ; switch strategies available:
  4128                           ; Name         Instructions Cycles
  4129                           ; simple_byte            7     4 (average)
  4130                           ; direct_byte           17    11 (fixed)
  4131                           ; jumptable            263     9 (fixed)
  4132                           ;	Chosen strategy is simple_byte
  4133  0513  3A03               	xorlw	3	; case 3
  4134  0514  1903               	skipnz
  4135  0515  2D0E               	goto	l99
  4136  0516  3A07               	xorlw	7	; case 4
  4137  0517  1903               	skipnz
  4138  0518  2D10               	goto	l101
  4139  0519  2D1A               	goto	l1549
  4140  051A                     l1549:	
  4141                           
  4142                           ;spi_master.c: 112: SSPBUF = 0x00;
  4143  051A  0193               	clrf	19	;volatile
  4144  051B                     l1557:	
  4145                           ;spi_master.c: 115: while(SSPSTATbits.BF == 0)
  4146                           
  4147  051B  1683               	bsf	3,5	;RP0=1, select bank1
  4148  051C  1303               	bcf	3,6	;RP1=0, select bank1
  4149  051D  1814               	btfsc	20,0	;volatile
  4150  051E  2D33               	goto	l1561
  4151                           
  4152                           ;spi_master.c: 116: {
  4153                           ;spi_master.c: 118: if(timeout_counter == 0)
  4154  051F  0872               	movf	spi_master_receive@timeout_counter,w
  4155  0520  0473               	iorwf	spi_master_receive@timeout_counter+1,w
  4156  0521  1903               	btfsc	3,2
  4157  0522  0008               	return
  4158                           
  4159                           ;spi_master.c: 121: }
  4160                           ;spi_master.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4161                           
  4162                           ;spi_master.c: 119: {
  4163                           ;spi_master.c: 120: return;
  4164  0523  2D24               	nop2	;2 cycle nop
  4165  0524  2D25               	nop2	;2 cycle nop
  4166  0525  0000               	nop
  4167                           
  4168                           ;spi_master.c: 125: timeout_counter--;
  4169  0526  3001               	movlw	1
  4170  0527  02F2               	subwf	spi_master_receive@timeout_counter,f
  4171  0528  3000               	movlw	0
  4172  0529  1C03               	skipc
  4173  052A  03F3               	decf	spi_master_receive@timeout_counter+1,f
  4174  052B  02F3               	subwf	spi_master_receive@timeout_counter+1,f
  4175  052C  2D1B               	goto	l1557
  4176  052D                     l108:	
  4177                           ;spi_master.c: 130: {
  4178                           ;spi_master.c: 131: case COM:
  4179                           
  4180                           ;spi_master.c: 126: }
  4181                           ;spi_master.c: 129: switch(destination)
  4182                           
  4183                           
  4184                           ;spi_master.c: 132: PORTCbits.RC0 = 1;
  4185  052D  1283               	bcf	3,5	;RP0=0, select bank0
  4186  052E  1407               	bsf	7,0	;volatile
  4187                           
  4188                           ;spi_master.c: 133: break;
  4189  052F  2D3B               	goto	l1563
  4190  0530                     l110:	
  4191                           ;spi_master.c: 134: case POW:
  4192                           
  4193                           
  4194                           ;spi_master.c: 135: PORTCbits.RC1 = 1;
  4195  0530  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0531  1487               	bsf	7,1	;volatile
  4197                           
  4198                           ;spi_master.c: 137: }
  4199                           
  4200                           ;spi_master.c: 136: break;
  4201  0532  2D3B               	goto	l1563
  4202  0533                     l1561:	
  4203  0533  0874               	movf	spi_master_receive@destination,w
  4204                           
  4205                           ; Switch size 1, requested type "space"
  4206                           ; Number of cases is 2, Range of values is 3 to 4
  4207                           ; switch strategies available:
  4208                           ; Name         Instructions Cycles
  4209                           ; simple_byte            7     4 (average)
  4210                           ; direct_byte           17    11 (fixed)
  4211                           ; jumptable            263     9 (fixed)
  4212                           ;	Chosen strategy is simple_byte
  4213  0534  3A03               	xorlw	3	; case 3
  4214  0535  1903               	skipnz
  4215  0536  2D2D               	goto	l108
  4216  0537  3A07               	xorlw	7	; case 4
  4217  0538  1903               	skipnz
  4218  0539  2D30               	goto	l110
  4219  053A  2D3B               	goto	l1563
  4220  053B                     l1563:	
  4221                           
  4222                           ;spi_master.c: 139: return SSPBUF;
  4223  053B  1283               	bcf	3,5	;RP0=0, select bank0
  4224  053C  0813               	movf	19,w	;volatile
  4225  053D  0008               	return
  4226  053E                     __end_of_spi_master_receive:	
  4227                           
  4228                           	psect	text29
  4229  02A5                     __ptext29:	
  4230 ;; *************** function _MCLR_reset *****************
  4231 ;; Defined at:
  4232 ;;		line 60 in file "MCLR_reset.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  resetted_mcu    1    wreg     unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  resetted_mcu    1    2[COMMON] unsigned char 
  4237 ;;  nin             2    3[COMMON] PTR unsigned char 
  4238 ;;		 -> RAM(512), 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;		None               void
  4241 ;; Registers used:
  4242 ;;		wreg, fsr0l, fsr0h
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         3       0       0       0       0
  4250 ;;      Temps:          2       0       0       0       0
  4251 ;;      Totals:         5       0       0       0       0
  4252 ;;Total ram usage:        5 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_COM_status
  4258 ;;		_POW_status
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _MCLR_reset
  4264  02A5                     _MCLR_reset:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _MCLR_reset: [wregfsr0]
  4268                           ;MCLR_reset@resetted_mcu stored from wreg
  4269  02A5  00F2               	movwf	MCLR_reset@resetted_mcu
  4270                           
  4271                           ;MCLR_reset.c: 62: uint8_t *nin;
  4272                           ;MCLR_reset.c: 63: nin = 0x09;
  4273  02A6  3009               	movlw	9
  4274  02A7  00F3               	movwf	MCLR_reset@nin
  4275  02A8  3000               	movlw	0
  4276  02A9  00F4               	movwf	MCLR_reset@nin+1
  4277                           
  4278                           ;MCLR_reset.c: 66: *nin = resetted_mcu;
  4279  02AA  0873               	movf	MCLR_reset@nin,w
  4280  02AB  0084               	movwf	4
  4281  02AC  1383               	bcf	3,7
  4282  02AD  1874               	btfsc	MCLR_reset@nin+1,0
  4283  02AE  1783               	bsf	3,7
  4284  02AF  0872               	movf	MCLR_reset@resetted_mcu,w
  4285  02B0  0080               	movwf	0
  4286                           
  4287                           ;MCLR_reset.c: 67: _delay((unsigned long)((10)*(20000000/4000.0)));
  4288  02B1  3041               	movlw	65
  4289  02B2  00F1               	movwf	??_MCLR_reset+1
  4290  02B3  30EE               	movlw	238
  4291  02B4  00F0               	movwf	??_MCLR_reset
  4292  02B5                     u957:	
  4293  02B5  0BF0               	decfsz	??_MCLR_reset,f
  4294  02B6  2AB5               	goto	u957
  4295  02B7  0BF1               	decfsz	??_MCLR_reset+1,f
  4296  02B8  2AB5               	goto	u957
  4297  02B9  0000               	nop
  4298                           
  4299                           ;MCLR_reset.c: 68: *nin = 0x03;
  4300  02BA  0873               	movf	MCLR_reset@nin,w
  4301  02BB  0084               	movwf	4
  4302  02BC  1383               	bcf	3,7
  4303  02BD  1874               	btfsc	MCLR_reset@nin+1,0
  4304  02BE  1783               	bsf	3,7
  4305  02BF  3003               	movlw	3
  4306  02C0  0080               	movwf	0
  4307  02C1  0008               	return
  4308  02C2                     __end_of_MCLR_reset:	
  4309  007E                     btemp	set	126	;btemp
  4310  007E                     wtemp	set	126
  4311  007E                     wtemp0	set	126
  4312  0080                     wtemp1	set	128
  4313  0082                     wtemp2	set	130
  4314  0084                     wtemp3	set	132
  4315  0086                     wtemp4	set	134
  4316  0088                     wtemp5	set	136
  4317  007F                     wtemp6	set	127
  4318  007E                     ttemp	set	126
  4319  007E                     ttemp0	set	126
  4320  0081                     ttemp1	set	129
  4321  0084                     ttemp2	set	132
  4322  0087                     ttemp3	set	135
  4323  007F                     ttemp4	set	127
  4324  007E                     ltemp	set	126
  4325  007E                     ltemp0	set	126
  4326  0082                     ltemp1	set	130
  4327  0086                     ltemp2	set	134
  4328  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint16_data_set@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(2) Largest target is 512
		 -> I2Ctemp_data_set@I2CTEMP_data(BANK0[2]), RAM(DATA[512]), 

    MCLR_reset@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    MCLR_init@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(COMMON[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(COMMON[2]), 


Critical Paths under _main in COMMON

    _command->_get_cw_data
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set
    _sent_data_set->_double_data_set
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _POW_status->_spi_master_send
    _COM_status->_spi_master_send

Critical Paths under _main in BANK0

    _main->_command
    _command->_I2Ctemp_data_set
    _send_data_master->_packet_send_master
    _LED_data_set->_sent_data_set
    _I2Ctemp_data_set->_sent_data_set
    _sent_data_set->_double_data_set

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10730
                                             22 BANK0      4     4      0
                         _COM_status
                          _MCLR_init
                         _POW_status
                        _ad_con_init
                            _command
                   _spi_master_start
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command                                              4     4      0    9209
                                             18 BANK0      4     4      0
                   _I2Ctemp_data_set
                       _LED_data_set
                        _cw_data_set
                        _get_cw_data
                              _putch
                   _send_data_master
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _send_data_master                                     4     2      2    2038
                                              1 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (3) _packet_send_master                                   3     2      1    1654
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (4) _send_payload                                         6     5      1     856
                                              6 COMMON     6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_cw_data                                          3     3      0     426
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           10     8      2     290
                                              6 COMMON     7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (5) _bit_shift                                            6     5      1     190
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _cw_data_set                                          3     3      0     947
                                              4 COMMON     2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _LED_data_set                                         0     0      0    2544
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (2) _I2Ctemp_data_set                                     3     3      0    2619
                                             15 BANK0      3     3      0
                              _getch
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (3) _sent_data_set                                        9     5      4    2544
                                              6 BANK0      9     5      4
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) _uint16_data_set                                      8     5      3     487
                                              6 COMMON     8     5      3
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (6) _uint16_to_byte_array                                 6     3      3     216
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (4) _double_data_set                                     10     7      3     555
                                             10 COMMON     4     1      3
                                              0 BANK0      6     6      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (5) _double_to_byte_array                                10     7      3     286
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getch                                                2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POW_status                                           0     0      0     658
                         _MCLR_reset
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (1) _MCLR_init                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _COM_status                                           2     2      0     817
                                              6 COMMON     2     2      0
                         _MCLR_reset
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      6     5      1     591
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _spi_master_receive                                   5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _MCLR_reset                                           5     5      0      67
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COM_status
     _MCLR_reset
     _spi_master_receive
     _spi_master_send
   _MCLR_init
   _POW_status
     _MCLR_reset
     _spi_master_send
   _ad_con_init
   _command
     _I2Ctemp_data_set
       _getch
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _LED_data_set
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _cw_data_set
       _uint8_data_set
     _get_cw_data
       _get_adcon
         _bit_shift
       _spi_master_receive
       _spi_master_start
     _putch
     _send_data_master
       _packet_send_master
         _send_payload
           _spi_master_send
         _spi_master_send
     _spi_master_send
   _spi_master_start
   _sysprot_init
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      56       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      56      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 12 20:42:36 2016

                                   pc 0002                           __CFG_CP$OFF 0000  
                         _SSPSTATbits 0094                                    l65 0303  
                                  l90 04FF                                    l95 0502  
                                  l99 050E                ??_uint16_to_byte_array 0073  
                                  _cw 0041                                    fsr 0004  
                 ___wmul@multiplicand 0072                  __size_of_ad_con_init 000B  
                                 l101 0510                                   l110 0530  
                                 l120 054D                                   l115 054A  
                                 l108 052D                                   l124 0559  
                                 l133 0579                                   l126 055B  
                                 l135 057C                                   l170 0220  
                                 l251 047A                                   l227 05EF  
                                 l259 0443                                   l375 0791  
                                 l377 07F4                                   l467 0326  
                        __CFG_CPD$OFF 0000                                   u705 032E  
                                 u565 041D                                   u575 0432  
                                 u907 0623                                   u917 0633  
                                 u695 0327                                   u927 065A  
                                 u785 029F                                   u937 0798  
                                 u947 07A8                                   u957 02B5  
                          _POW_status 0264                           ?_COM_status 0070  
                uint8_data_set@p_data 0070                                   fsr0 0004  
                                 indf 0000           send_data_master@destination 0052  
              ??_double_to_byte_array 0073                          __CFG_FOSC$HS 0000  
                         ?_MCLR_reset 0070                           command@data 0063  
                        __CFG_LVP$OFF 0000                                  l1501 04D3  
                                l1503 04B3                                  l1505 04EE  
                                l1435 035F                                  l1381 0565  
                                l1509 031E                                  l1543 0505  
                                l1375 0550                                  l1471 0460  
                                l1561 0533                                  l1393 057F  
                                l1457 04AE                                  l1449 0495  
                                l1563 053B                                  l1547 0512  
                                l1395 0587                                  l1379 055D  
                                l1571 0292                                  l1483 04B9  
                                l1707 076D                                  l1557 051B  
                                l1549 051A                                  l1389 0567  
                                l1575 02A1                                  l1479 0477  
                                l1583 05BA                                  l1591 05E2  
                                l1719 07CD                                  l1727 07E7  
                                l1569 028C                                  l1585 05C6  
                                l1587 05D4                                  l1695 02DD  
                                l1787 062A                                  _RCIF 0065  
                                _TXIF 0064                          __CFG_WRT$OFF 0000  
                                _main 05F0                      ??_uint8_data_set 0073  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                                ltemp 007E                  __end_of_sysprot_init 021F  
                                start 0000                                  ttemp 007E  
                                wtemp 007E                    __size_of_MCLR_init 0010  
       spi_master_receive@destination 0074                     ??_double_data_set 007D  
                               ?_main 0070                         __CFG_WDTE$OFF 0000  
              uint8_data_set@data_len 0072                                 _RCREG 001A  
                               _RCSTA 0018                                 _SPBRG 0099  
                               _TXREG 0019                                 _TXSTA 0098  
                       __CFG_PWRTE$ON 0000                       __end_of_command 07F5  
                               _getch 0289      double_to_byte_array@p_data_array 0072  
            __end_of_send_data_master 0289                                 _putch 021F  
                       ?_LED_data_set 0070                      ?_uint16_data_set 0076  
                               pclath 000A                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                    bit_shift@p_adres 0070                   __size_of_COM_status 001D  
         __size_of_spi_master_receive 004B                       __initialization 07F5  
                 __size_of_MCLR_reset 001D                 uint16_data_set@p_data 0076  
                        __end_of_main 0662                                ??_main 0064  
                      get_cw_data@buf 004E      uint16_to_byte_array@p_data_array 0072  
                         ?_POW_status 0070                     __end_of_MCLR_init 0264  
                              ?_getch 0070                                _ADCON0 001F  
                              _ADCON1 009F                        ??_LED_data_set 007E  
                              _ADRESH 001E                                _ADRESL 009E  
                              ?_putch 0070        spi_master_send@timeout_counter 0073  
                              _SSPBUF 0013            __end_of_packet_send_master 040D  
                __size_of_get_cw_data 0087                  __size_of_cw_data_set 0080  
                              ___wmul 031C              __end_of_I2Ctemp_data_set 035F  
               double_data_set@p_data 007A                                _packet 0021  
                           ??_command 0060             __size_of_spi_master_start 001D  
               __size_of_sysprot_init 0005               __end_of__initialization 07FC  
               send_payload@index_pos 007A                   __size_of_POW_status 0011  
               send_payload@p_payload 0076                        __pcstackCOMMON 0070  
               __end_of_sent_data_set 05F0                         __end_of_getch 02A5  
                 spi_master_send@data 0070                         __end_of_putch 0227  
                  COM_status@COM_stat 0077                    __size_of_bit_shift 0036  
                        ??_COM_status 0076                          _sysprot_init 021A  
                        ??_MCLR_reset 0070                    __size_of_get_adcon 0020  
                             ??_getch 0070                               ??_putch 0070  
                        MCLR_init@nin 0070                            __pbssBANK0 0020  
          uint16_to_byte_array@p_data 0070              __size_of_spi_master_send 004F  
   spi_master_receive@timeout_counter 0072                       _double_data_set 0443  
                  __end_of_COM_status 02DF                            __pmaintext 05F0  
                             ?___wmul 0070                    __end_of_MCLR_reset 02C2  
                       ??_ad_con_init 0070                  __end_of_LED_data_set 0254  
                       ?_send_payload 0076         __size_of_uint16_to_byte_array 002A  
                  __size_of_uart_init 000C         __size_of_double_to_byte_array 002B  
             bit_shift@bit_mask_for_l 000B                            __stringtab 0003  
                   ?_send_data_master 004F                    ??_send_data_master 0051  
                  uint16_data_set@buf 007A                     __end_of_bit_shift 0443  
                   __end_of_get_adcon 031C                       __size_of___wmul 0021  
             spi_master_receive@dummy 0071                        ??_send_payload 0077  
                             __ptext1 023A                               __ptext2 021A  
                             __ptext3 0769                               __ptext4 0275  
                             __ptext5 03DD                               __ptext6 04B1  
                             __ptext7 021F                               __ptext8 06E2  
                             __ptext9 02DF                               _command 0769  
                        ??_POW_status 0076                   __end_of_ad_con_init 023A  
                cw_data_set@p_cw_data 0075                      _spi_master_start 02DF  
                             clrloop0 0228                  end_of_initialization 07FC  
             __end_of_double_data_set 047A                             _MCLR_init 0254  
          __end_of_spi_master_receive 053E             sent_data_set@byte_of_data 0057  
                   __end_of_uart_init 0246                    __end_of_POW_status 0275  
            __size_of_uint16_data_set 0037                     ??_spi_master_send 0071  
                    double_data_set@i 0053               __size_of_uint8_data_set 0029  
                   ?_I2Ctemp_data_set 0070                             _PORTAbits 0005  
                  _packet_send_master 03DD                             _PORTCbits 0007  
                           _PORTDbits 0008                    ??_I2Ctemp_data_set 005D  
               double_to_byte_array@i 0079                            getch@count 0070  
                           _TRISAbits 0085                             _TRISCbits 0087  
                           _TRISDbits 0088                             _TRISEbits 0089  
                 ?_packet_send_master 007C                            ?_MCLR_init 0070  
        I2Ctemp_data_set@I2CTEMP_data 005E                         ??_get_cw_data 007D  
                       ??_cw_data_set 0074                 __size_of_LED_data_set 000E  
             uint16_data_set@data_len 0078                 sent_data_set@data_len 0056  
                ??_packet_send_master 007D                           _ad_con_init 022F  
                      __end_of___wmul 033D                         send_payload@i 0079  
          spi_master_send@destination 0075                  spi_master_send@dummy 0072  
                 start_initialization 07F5                          _LED_data_set 0246  
                    ?_double_data_set 007A                  __end_of_send_payload 04F3  
     __end_ofbit_shift@bit_mask_for_l 000C                      uint16_data_set@i 007D  
                            ??___wmul 0074                  send_payload@data_len 0078  
                 __end_of_get_cw_data 0769                   __end_of_cw_data_set 06E2  
                   ??_uint16_data_set 0079         double_to_byte_array@converter 0075  
                           ___latbits 0002                         __pcstackBANK0 004E  
                 sent_data_set@p_data 0054                __size_of_sent_data_set 0063  
                         ??_MCLR_init 0070          __end_of_uint16_to_byte_array 03B2  
                       MCLR_reset@nin 0073          __end_of_double_to_byte_array 03DD  
                           _bit_shift 040D              __end_of_spi_master_start 02FC  
                      _uint8_data_set 035F             __size_of_send_data_master 0014  
                           _get_adcon 02FC            double_to_byte_array@p_data 0070  
                           __pstrings 0003                              ?_command 0070  
           send_data_master@data_type 004F                             _index_pos 0020  
                      __size_of_getch 001C                        __size_of_putch 0008  
                     _spi_master_send 053E                        ___wmul@product 0074  
                           clear_ram0 0227                           _get_cw_data 06E2  
                         _cw_data_set 0662                __end_of_uint8_data_set 0388  
                          ?_bit_shift 0070                             _uart_init 023A  
                       _sent_data_set 058D                            ?_get_adcon 0076  
                  _spi_master_receive 04F3                            _ADCON0bits 001F  
                         __stringbase 0008                     ___wmul@multiplier 0070  
                 ?_spi_master_receive 0070                 __size_of_send_payload 0042  
           __size_of_I2Ctemp_data_set 0022                  ??_spi_master_receive 0070  
                     ?_uint8_data_set 0070                            ?_uart_init 0070  
                      ?_sent_data_set 0054                          ?_ad_con_init 0070  
                  __end_of__stringtab 0009                          _send_payload 04B1  
                _uint16_to_byte_array 0388                      __size_of_command 008C  
                       ?_sysprot_init 0070               double_data_set@data_len 007C  
             __end_of_spi_master_send 058D                              __ptext10 02FC  
                            __ptext11 040D                              __ptext20 03B2  
                            __ptext12 0662                              __ptext21 031C  
                            __ptext13 0246                              __ptext22 0289  
                            __ptext14 033D                              __ptext23 022F  
                            __ptext15 058D                              __ptext24 0264  
                            __ptext16 035F                              __ptext25 0254  
                            __ptext17 047A                              __ptext26 02C2  
                            __ptext18 0388                              __ptext27 053E  
                            __ptext19 0443                              __ptext28 04F3  
                            __ptext29 02A5                  _double_to_byte_array 03B2  
__end_ofuint16_to_byte_array@bit_mask 000B          uint16_to_byte_array@bit_mask 0009  
                       __size_of_main 0072                MCLR_reset@resetted_mcu 0072  
                     _uint16_data_set 047A            packet_send_master@p_packet 007C  
         __size_of_packet_send_master 0030                           ??_bit_shift 0071  
                    _send_data_master 0275                           ??_get_adcon 0078  
               ?_uint16_to_byte_array 0070                        ??_sysprot_init 0070  
                          _COM_status 02C2                             putch@byte 0070  
                          _MCLR_reset 02A5                    double_data_set@buf 004E  
               ?_double_to_byte_array 0070                     get_adcon@ad_value 007B  
                           stringcode 0003              __size_of_double_data_set 0037  
                     ??_sent_data_set 0058                           ??_uart_init 0070  
             send_payload@destination 007B                     ?_spi_master_start 0070  
                  ??_spi_master_start 0070                     get_adcon@my_adres 0079  
                        main@COM_stat 0067                              stringdir 0003  
                            stringtab 0003                      ?_spi_master_send 0070  
                    _I2Ctemp_data_set 033D               __end_of_uint16_data_set 04B1  
    send_data_master@data_end_command 0050                            _SSPCONbits 0014  
                        ?_get_cw_data 0070                          ?_cw_data_set 0070  
       packet_send_master@destination 004E                   bit_shift@p_ad_value 0075  
