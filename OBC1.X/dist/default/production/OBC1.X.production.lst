

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 06 20:04:40 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0087                     	;# 
    79  0088                     	;# 
    80  0089                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0094                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  0087                     	;# 
   139  0088                     	;# 
   140  0089                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0008                     	;# 
   289  0009                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  000D                     	;# 
   294  000E                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001D                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  0081                     	;# 
   316  0085                     	;# 
   317  0086                     	;# 
   318  0087                     	;# 
   319  0088                     	;# 
   320  0089                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0094                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  009F                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0088                     	;# 
   380  0089                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0098                     	;# 
   389  0099                     	;# 
   390  009C                     	;# 
   391  009D                     	;# 
   392  009E                     	;# 
   393  009F                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  000E                     	;# 
   416  000F                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0013                     	;# 
   421  0014                     	;# 
   422  0015                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0017                     	;# 
   426  0018                     	;# 
   427  0019                     	;# 
   428  001A                     	;# 
   429  001B                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001D                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  0081                     	;# 
   436  0085                     	;# 
   437  0086                     	;# 
   438  0087                     	;# 
   439  0088                     	;# 
   440  0089                     	;# 
   441  008C                     	;# 
   442  008D                     	;# 
   443  008E                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000E                     	;# 
   476  000F                     	;# 
   477  0010                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  0081                     	;# 
   496  0085                     	;# 
   497  0086                     	;# 
   498  0087                     	;# 
   499  0088                     	;# 
   500  0089                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  0091                     	;# 
   505  0092                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  000E                     	;# 
   536  000F                     	;# 
   537  0010                     	;# 
   538  0011                     	;# 
   539  0012                     	;# 
   540  0013                     	;# 
   541  0014                     	;# 
   542  0015                     	;# 
   543  0015                     	;# 
   544  0016                     	;# 
   545  0017                     	;# 
   546  0018                     	;# 
   547  0019                     	;# 
   548  001A                     	;# 
   549  001B                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  001D                     	;# 
   553  001E                     	;# 
   554  001F                     	;# 
   555  0081                     	;# 
   556  0085                     	;# 
   557  0086                     	;# 
   558  0087                     	;# 
   559  0088                     	;# 
   560  0089                     	;# 
   561  008C                     	;# 
   562  008D                     	;# 
   563  008E                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0094                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009C                     	;# 
   571  009D                     	;# 
   572  009E                     	;# 
   573  009F                     	;# 
   574  010C                     	;# 
   575  010D                     	;# 
   576  010E                     	;# 
   577  010F                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580                           
   581                           	psect	strings
   582  0003                     __pstrings:	
   583  0003                     stringtab:	
   584  0003                     __stringtab:	
   585  0003                     stringcode:	
   586                           ;	String table - string pointers are 1 byte each
   587                           
   588  0003                     stringdir:	
   589  0003  3000               	movlw	high stringdir
   590  0004  008A               	movwf	10
   591  0005  0804               	movf	4,w
   592  0006  0A84               	incf	4,f
   593  0007  0782               	addwf	2,f
   594  0008                     __stringbase:	
   595  0008  3400               	retlw	0
   596  0009                     __end_of__stringtab:	
   597  0009                     uint16_to_byte_array@bit_mask:	
   598  0009  34FF               	retlw	255
   599  000A  3400               	retlw	0
   600  000B                     __end_ofuint16_to_byte_array@bit_mask:	
   601  000B                     bit_shift@bit_mask_for_l:	
   602  000B  3403               	retlw	3
   603  000C                     __end_ofbit_shift@bit_mask_for_l:	
   604  001F                     _ADCON0	set	31
   605  001F                     _ADCON0bits	set	31
   606  001E                     _ADRESH	set	30
   607  0005                     _PORTAbits	set	5
   608  0007                     _PORTCbits	set	7
   609  0008                     _PORTDbits	set	8
   610  001A                     _RCREG	set	26
   611  0018                     _RCSTA	set	24
   612  0013                     _SSPBUF	set	19
   613  0014                     _SSPCONbits	set	20
   614  0019                     _TXREG	set	25
   615  0065                     _RCIF	set	101
   616  0064                     _TXIF	set	100
   617  009F                     _ADCON1	set	159
   618  009E                     _ADRESL	set	158
   619  0099                     _SPBRG	set	153
   620  0094                     _SSPSTATbits	set	148
   621  0085                     _TRISAbits	set	133
   622  0087                     _TRISCbits	set	135
   623  0088                     _TRISDbits	set	136
   624  0089                     _TRISEbits	set	137
   625  0098                     _TXSTA	set	152
   626                           
   627                           ; #config settings
   628  0000                     
   629                           	psect	cinit
   630  07F5                     start_initialization:	
   631  07F5                     __initialization:	
   632                           
   633                           ; Clear objects allocated to BANK0
   634  07F5  1383               	bcf	3,7	;select IRP bank0
   635  07F6  3020               	movlw	low __pbssBANK0
   636  07F7  0084               	movwf	4
   637  07F8  304E               	movlw	low (__pbssBANK0+46)
   638  07F9  120A  118A  21E7   	fcall	clear_ram0
   639  07FC                     end_of_initialization:	
   640                           ;End of C runtime variable initialization code
   641                           
   642  07FC                     __end_of__initialization:	
   643  07FC  0183               	clrf	3
   644  07FD  120A  118A  2DDB   	ljmp	_main	;jump to C main() function
   645                           
   646                           	psect	bssBANK0
   647  0020                     __pbssBANK0:	
   648  0020                     _index_pos:	
   649  0020                     	ds	1
   650  0021                     _packet:	
   651  0021                     	ds	32
   652  0041                     _cw:	
   653  0041                     	ds	13
   654                           
   655                           	psect	clrtext
   656  01E7                     clear_ram0:	
   657                           ;	Called with FSR containing the base address, and
   658                           ;	W with the last address+1
   659                           
   660  01E7  0064               	clrwdt	;clear the watchdog before getting into this loop
   661  01E8                     clrloop0:	
   662  01E8  0180               	clrf	0	;clear RAM location pointed to by FSR
   663  01E9  0A84               	incf	4,f	;increment pointer
   664  01EA  0604               	xorwf	4,w	;XOR with final address
   665  01EB  1903               	btfsc	3,2	;have we reached the end yet?
   666  01EC  3400               	retlw	0	;all done for this memory range, return
   667  01ED  0604               	xorwf	4,w	;XOR again to restore value
   668  01EE  29E8               	goto	clrloop0	;do the next byte
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:	
   672  0070                     ?_MCLR_init:	
   673  0070                     ??_MCLR_init:	
   674                           ; 0 bytes @ 0x0
   675                           
   676  0070                     ?_sysprot_init:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ??_sysprot_init:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ?_uart_init:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ??_uart_init:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_ad_con_init:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ??_ad_con_init:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_spi_master_start:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ??_spi_master_start:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_spi_master_send:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ??_spi_master_receive:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_MCLR_reset:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ??_MCLR_reset:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_command:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_uint8_data_set:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_uint16_to_byte_array:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_double_to_byte_array:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_LED_data_set:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_I2Ctemp_data_set:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_bit_shift:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_get_cw_data:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_cw_data_set:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ?_receive_data_master:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0070                     ?_receive_payload:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0070                     ?_spi_master_receive:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_main:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?___wmul:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     bit_shift@p_adres:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     spi_master_send@data:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     MCLR_init@nin:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     uint8_data_set@p_data:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     uint16_to_byte_array@p_data:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0070                     double_to_byte_array@p_data:	
   770                           ; 2 bytes @ 0x0
   771                           
   772  0070                     ___wmul@multiplier:	
   773                           ; 2 bytes @ 0x0
   774                           
   775                           
   776                           ; 2 bytes @ 0x0
   777  0070                     	ds	1
   778  0071                     ??_spi_master_send:	
   779  0071                     ??_bit_shift:	
   780                           ; 0 bytes @ 0x1
   781                           
   782  0071                     spi_master_receive@dummy:	
   783                           ; 0 bytes @ 0x1
   784                           
   785                           
   786                           ; 1 bytes @ 0x1
   787  0071                     	ds	1
   788  0072                     spi_master_send@dummy:	
   789  0072                     MCLR_reset@resetted_mcu:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0072                     uint8_data_set@data_len:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     uint16_to_byte_array@p_data_array:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     double_to_byte_array@p_data_array:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     spi_master_receive@timeout_counter:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     ___wmul@multiplicand:	
   805                           ; 2 bytes @ 0x2
   806                           
   807                           
   808                           ; 2 bytes @ 0x2
   809  0072                     	ds	1
   810  0073                     ??_uint8_data_set:	
   811  0073                     ??_uint16_to_byte_array:	
   812                           ; 0 bytes @ 0x3
   813                           
   814  0073                     ??_double_to_byte_array:	
   815                           ; 0 bytes @ 0x3
   816                           
   817  0073                     spi_master_send@timeout_counter:	
   818                           ; 0 bytes @ 0x3
   819                           
   820  0073                     MCLR_reset@nin:	
   821                           ; 2 bytes @ 0x3
   822                           
   823                           
   824                           ; 2 bytes @ 0x3
   825  0073                     	ds	1
   826  0074                     ??_cw_data_set:	
   827  0074                     ??___wmul:	
   828                           ; 0 bytes @ 0x4
   829                           
   830  0074                     spi_master_receive@destination:	
   831                           ; 0 bytes @ 0x4
   832                           
   833  0074                     ___wmul@product:	
   834                           ; 1 bytes @ 0x4
   835                           
   836                           
   837                           ; 2 bytes @ 0x4
   838  0074                     	ds	1
   839  0075                     ??_receive_payload:	
   840  0075                     bit_shift@p_ad_value:	
   841                           ; 0 bytes @ 0x5
   842                           
   843  0075                     spi_master_send@destination:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0075                     cw_data_set@p_cw_data:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0075                     double_to_byte_array@converter:	
   850                           ; 1 bytes @ 0x5
   851                           
   852                           
   853                           ; 4 bytes @ 0x5
   854  0075                     	ds	1
   855  0076                     ?_uint16_data_set:	
   856  0076                     ?_send_payload:	
   857                           ; 0 bytes @ 0x6
   858                           
   859  0076                     ?_get_adcon:	
   860                           ; 1 bytes @ 0x6
   861                           
   862  0076                     send_payload@p_payload:	
   863                           ; 2 bytes @ 0x6
   864                           
   865  0076                     receive_payload@data_len:	
   866                           ; 1 bytes @ 0x6
   867                           
   868  0076                     uint16_data_set@p_data:	
   869                           ; 1 bytes @ 0x6
   870                           
   871                           
   872                           ; 2 bytes @ 0x6
   873  0076                     	ds	1
   874  0077                     ??_send_payload:	
   875  0077                     receive_payload@i:	
   876                           ; 0 bytes @ 0x7
   877                           
   878                           
   879                           ; 1 bytes @ 0x7
   880  0077                     	ds	1
   881  0078                     ??_get_adcon:	
   882  0078                     uint16_data_set@data_len:	
   883                           ; 0 bytes @ 0x8
   884                           
   885  0078                     send_payload@data_len:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  0078                     receive_payload@p_payload:	
   889                           ; 1 bytes @ 0x8
   890                           
   891                           
   892                           ; 1 bytes @ 0x8
   893  0078                     	ds	1
   894  0079                     ??_uint16_data_set:	
   895  0079                     double_to_byte_array@i:	
   896                           ; 0 bytes @ 0x9
   897                           
   898  0079                     send_payload@i:	
   899                           ; 1 bytes @ 0x9
   900                           
   901  0079                     receive_payload@rec_index_pos:	
   902                           ; 1 bytes @ 0x9
   903                           
   904  0079                     get_adcon@my_adres:	
   905                           ; 1 bytes @ 0x9
   906                           
   907                           
   908                           ; 2 bytes @ 0x9
   909  0079                     	ds	1
   910  007A                     ?_double_data_set:	
   911  007A                     send_payload@index_pos:	
   912                           ; 0 bytes @ 0xA
   913                           
   914  007A                     receive_payload@destination:	
   915                           ; 1 bytes @ 0xA
   916                           
   917  007A                     double_data_set@p_data:	
   918                           ; 1 bytes @ 0xA
   919                           
   920  007A                     uint16_data_set@buf:	
   921                           ; 2 bytes @ 0xA
   922                           
   923                           
   924                           ; 3 bytes @ 0xA
   925  007A                     	ds	1
   926  007B                     ?_packet_receive_master:	
   927  007B                     send_payload@destination:	
   928                           ; 0 bytes @ 0xB
   929                           
   930  007B                     packet_receive_master@p_packet:	
   931                           ; 1 bytes @ 0xB
   932                           
   933  007B                     get_adcon@ad_value:	
   934                           ; 1 bytes @ 0xB
   935                           
   936                           
   937                           ; 2 bytes @ 0xB
   938  007B                     	ds	1
   939  007C                     ?_packet_send_master:	
   940  007C                     ??_packet_receive_master:	
   941                           ; 0 bytes @ 0xC
   942                           
   943  007C                     double_data_set@data_len:	
   944                           ; 0 bytes @ 0xC
   945                           
   946  007C                     packet_send_master@p_packet:	
   947                           ; 1 bytes @ 0xC
   948                           
   949                           
   950                           ; 1 bytes @ 0xC
   951  007C                     	ds	1
   952  007D                     ??_double_data_set:	
   953  007D                     ??_packet_send_master:	
   954                           ; 0 bytes @ 0xD
   955                           
   956  007D                     ??_get_cw_data:	
   957                           ; 0 bytes @ 0xD
   958                           
   959  007D                     ??_receive_data_master:	
   960                           ; 0 bytes @ 0xD
   961                           
   962  007D                     uint16_data_set@i:	
   963                           ; 0 bytes @ 0xD
   964                           
   965                           
   966                           ; 1 bytes @ 0xD
   967  007D                     	ds	1
   968  007E                     ??_LED_data_set:	
   969  007E                     ??_I2Ctemp_data_set:	
   970                           ; 0 bytes @ 0xE
   971                           
   972                           
   973                           	psect	cstackBANK0
   974  004E                     __pcstackBANK0:	
   975                           ; 0 bytes @ 0xE
   976                           
   977  004E                     packet_send_master@destination:	
   978  004E                     packet_receive_master@use_obc:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  004E                     get_cw_data@buf:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  004E                     double_data_set@buf:	
   985                           ; 2 bytes @ 0x0
   986                           
   987                           
   988                           ; 5 bytes @ 0x0
   989  004E                     	ds	1
   990  004F                     ?_send_data_master:	
   991  004F                     send_data_master@data_type:	
   992                           ; 0 bytes @ 0x1
   993                           
   994  004F                     packet_receive_master@destination:	
   995                           ; 1 bytes @ 0x1
   996                           
   997                           
   998                           ; 1 bytes @ 0x1
   999  004F                     	ds	1
  1000  0050                     send_data_master@data_end_command:	
  1001  0050                     receive_data_master@destination:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x2
  1006  0050                     	ds	1
  1007  0051                     ??_send_data_master:	
  1008                           
  1009                           ; 0 bytes @ 0x3
  1010  0051                     	ds	1
  1011  0052                     send_data_master@destination:	
  1012                           
  1013                           ; 1 bytes @ 0x4
  1014  0052                     	ds	1
  1015  0053                     double_data_set@i:	
  1016                           
  1017                           ; 1 bytes @ 0x5
  1018  0053                     	ds	1
  1019  0054                     ?_sent_data_set:	
  1020  0054                     sent_data_set@p_data:	
  1021                           ; 1 bytes @ 0x6
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x6
  1025  0054                     	ds	2
  1026  0056                     sent_data_set@data_len:	
  1027                           
  1028                           ; 1 bytes @ 0x8
  1029  0056                     	ds	1
  1030  0057                     sent_data_set@byte_of_data:	
  1031                           
  1032                           ; 1 bytes @ 0x9
  1033  0057                     	ds	1
  1034  0058                     ??_sent_data_set:	
  1035                           
  1036                           ; 0 bytes @ 0xA
  1037  0058                     	ds	5
  1038  005D                     ??_command:	
  1039                           
  1040                           ; 0 bytes @ 0xF
  1041  005D                     	ds	3
  1042  0060                     command@data:	
  1043                           
  1044                           ; 1 bytes @ 0x12
  1045  0060                     	ds	1
  1046  0061                     ??_main:	
  1047                           
  1048                           ; 0 bytes @ 0x13
  1049  0061                     	ds	3
  1050  0064                     main@COM_status:	
  1051                           
  1052                           ; 1 bytes @ 0x16
  1053  0064                     	ds	1
  1054                           
  1055                           	psect	maintext
  1056  05DB                     __pmaintext:	
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 26 in file "OBC1_main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  COM_status      1   22[BANK0 ] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2   28[None  ] int 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : B00/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       1       0       0       0
  1078 ;;      Temps:          0       3       0       0       0
  1079 ;;      Totals:         0       4       0       0       0
  1080 ;;Total ram usage:        4 bytes
  1081 ;; Hardware stack levels required when called:    6
  1082 ;; This function calls:
  1083 ;;		_MCLR_init
  1084 ;;		_MCLR_reset
  1085 ;;		_ad_con_init
  1086 ;;		_command
  1087 ;;		_spi_master_receive
  1088 ;;		_spi_master_send
  1089 ;;		_spi_master_start
  1090 ;;		_sysprot_init
  1091 ;;		_uart_init
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           
  1098                           ;psect for function _main
  1099  05DB                     _main:	
  1100                           
  1101                           ;OBC1_main.c: 28: TRISDbits.TRISD7 = 0;
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1105  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  1106  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  1107  05DD  1388               	bcf	8,7	;volatile
  1108                           
  1109                           ;OBC1_main.c: 29: PORTDbits.RD7 = 0;
  1110  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1111  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1112  05E0  1388               	bcf	8,7	;volatile
  1113                           
  1114                           ;OBC1_main.c: 30: uint8_t COM_status = 0;
  1115  05E1  01E4               	clrf	main@COM_status
  1116                           
  1117                           ;OBC1_main.c: 32: MCLR_init();
  1118  05E2  120A  118A  2220  120A  118A  	fcall	_MCLR_init
  1119                           
  1120                           ;OBC1_main.c: 33: sysprot_init();
  1121  05E7  120A  118A  21E2  120A  118A  	fcall	_sysprot_init
  1122                           
  1123                           ;OBC1_main.c: 34: uart_init();
  1124  05EC  120A  118A  2206  120A  118A  	fcall	_uart_init
  1125                           
  1126                           ;OBC1_main.c: 35: ad_con_init();
  1127  05F1  120A  118A  21EF  120A  118A  	fcall	_ad_con_init
  1128                           
  1129                           ;OBC1_main.c: 36: spi_master_start();
  1130  05F6  120A  118A  2261  120A  118A  	fcall	_spi_master_start
  1131  05FB                     l1733:	
  1132                           ;OBC1_main.c: 38: while(1)
  1133                           
  1134                           
  1135                           ;OBC1_main.c: 39: {
  1136                           ;OBC1_main.c: 40: PORTDbits.RD7 = 1;
  1137  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1138  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1139  05FD  1788               	bsf	8,7	;volatile
  1140                           
  1141                           ;OBC1_main.c: 41: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1142  05FE  301A               	movlw	26
  1143  05FF  00E3               	movwf	??_main+2
  1144  0600  305E               	movlw	94
  1145  0601  00E2               	movwf	??_main+1
  1146  0602  3086               	movlw	134
  1147  0603  00E1               	movwf	??_main
  1148  0604                     u897:	
  1149  0604  0BE1               	decfsz	??_main,f
  1150  0605  2E04               	goto	u897
  1151  0606  0BE2               	decfsz	??_main+1,f
  1152  0607  2E04               	goto	u897
  1153  0608  0BE3               	decfsz	??_main+2,f
  1154  0609  2E04               	goto	u897
  1155  060A  0000               	nop
  1156                           
  1157                           ;OBC1_main.c: 44: spi_master_send(COM, 0x01);
  1158  060B  01F0               	clrf	spi_master_send@data
  1159  060C  0AF0               	incf	spi_master_send@data,f
  1160  060D  3003               	movlw	3
  1161  060E  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1162                           
  1163                           ;OBC1_main.c: 45: COM_status = spi_master_receive(COM);
  1164  0613  3003               	movlw	3
  1165  0614  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  1166  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1167  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1168  061B  00E1               	movwf	??_main
  1169  061C  0861               	movf	??_main,w
  1170  061D  00E4               	movwf	main@COM_status
  1171                           
  1172                           ;OBC1_main.c: 46: if(COM_status == 0x00 || COM_status == 0xFF)
  1173  061E  0864               	movf	main@COM_status,w
  1174  061F  1D03               	btfss	3,2
  1175  0620  0A64               	incf	main@COM_status,w
  1176  0621  1D03               	btfss	3,2
  1177  0622  2E29               	goto	l30
  1178                           
  1179                           ;OBC1_main.c: 47: {
  1180                           ;OBC1_main.c: 48: MCLR_reset(0x05);
  1181  0623  3005               	movlw	5
  1182  0624  120A  118A  2244  120A  118A  	fcall	_MCLR_reset
  1183  0629                     l30:	
  1184                           
  1185                           ;OBC1_main.c: 49: }
  1186                           ;OBC1_main.c: 52: spi_master_send(POW, 0x01);
  1187  0629  01F0               	clrf	spi_master_send@data
  1188  062A  0AF0               	incf	spi_master_send@data,f
  1189  062B  3004               	movlw	4
  1190  062C  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1191                           
  1192                           ;OBC1_main.c: 53: if(PORTDbits.RD1==0) MCLR_reset(0x06);
  1193  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0633  1888               	btfsc	8,1	;volatile
  1196  0634  2E3B               	goto	l33
  1197  0635  3006               	movlw	6
  1198  0636  120A  118A  2244  120A  118A  	fcall	_MCLR_reset
  1199  063B                     l33:	
  1200                           
  1201                           ;OBC1_main.c: 56: command(COM_status);
  1202  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1203  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1204  063D  0864               	movf	main@COM_status,w
  1205  063E  120A  118A  275B  120A  118A  	fcall	_command
  1206                           
  1207                           ;OBC1_main.c: 58: PORTDbits.RD7 = 0;
  1208  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0645  1388               	bcf	8,7	;volatile
  1211                           
  1212                           ;OBC1_main.c: 59: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1213  0646  301A               	movlw	26
  1214  0647  00E3               	movwf	??_main+2
  1215  0648  305E               	movlw	94
  1216  0649  00E2               	movwf	??_main+1
  1217  064A  3086               	movlw	134
  1218  064B  00E1               	movwf	??_main
  1219  064C                     u907:	
  1220  064C  0BE1               	decfsz	??_main,f
  1221  064D  2E4C               	goto	u907
  1222  064E  0BE2               	decfsz	??_main+1,f
  1223  064F  2E4C               	goto	u907
  1224  0650  0BE3               	decfsz	??_main+2,f
  1225  0651  2E4C               	goto	u907
  1226  0652  0000               	nop
  1227  0653  2DFB               	goto	l1733
  1228  0654                     __end_of_main:	
  1229                           ;OBC1_main.c: 61: }
  1230                           ;OBC1_main.c: 64: return 0;
  1231                           ;	Return value of _main is never used
  1232                           
  1233                           
  1234                           	psect	text1
  1235  0206                     __ptext1:	
  1236 ;; *************** function _uart_init *****************
  1237 ;; Defined at:
  1238 ;;		line 33 in file "uart_serial.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;		None               void
  1245 ;; Registers used:
  1246 ;;		wreg
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0
  1255 ;;      Totals:         0       0       0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _uart_init
  1267  0206                     _uart_init:	
  1268                           
  1269                           ;uart_serial.c: 35: TRISCbits.TRISC7 = 1;
  1270                           
  1271                           ;incstack = 0
  1272                           ; Regs used in _uart_init: [wreg]
  1273  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0208  1787               	bsf	7,7	;volatile
  1276                           
  1277                           ;uart_serial.c: 36: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1278  0209  3081               	movlw	129
  1279  020A  0099               	movwf	25	;volatile
  1280                           
  1281                           ;uart_serial.c: 37: TXSTA = (0x00 | 0x04 | 0x20);
  1282  020B  3024               	movlw	36
  1283  020C  0098               	movwf	24	;volatile
  1284                           
  1285                           ;uart_serial.c: 38: RCSTA = (0x00 | 0x90);
  1286  020D  3090               	movlw	144
  1287  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1288  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0210  0098               	movwf	24	;volatile
  1290  0211  0008               	return
  1291  0212                     __end_of_uart_init:	
  1292                           
  1293                           	psect	text2
  1294  01E2                     __ptext2:	
  1295 ;; *************** function _sysprot_init *****************
  1296 ;; Defined at:
  1297 ;;		line 85 in file "system_protocol.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		None
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0
  1314 ;;      Totals:         0       0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _sysprot_init
  1326  01E2                     _sysprot_init:	
  1327                           
  1328                           ;system_protocol.c: 87: TRISDbits.TRISD0 = 1;
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _sysprot_init: []
  1332  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1333  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1334  01E4  1408               	bsf	8,0	;volatile
  1335                           
  1336                           ;system_protocol.c: 88: TRISDbits.TRISD1 = 1;
  1337  01E5  1488               	bsf	8,1	;volatile
  1338  01E6  0008               	return
  1339  01E7                     __end_of_sysprot_init:	
  1340                           
  1341                           	psect	text3
  1342  075B                     __ptext3:	
  1343 ;; *************** function _command *****************
  1344 ;; Defined at:
  1345 ;;		line 29 in file "OBC1_app.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  data            1    wreg     unsigned char 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  data            1   18[BANK0 ] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       1       0       0       0
  1361 ;;      Temps:          0       3       0       0       0
  1362 ;;      Totals:         0       4       0       0       0
  1363 ;;Total ram usage:        4 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    5
  1366 ;; This function calls:
  1367 ;;		_I2Ctemp_data_set
  1368 ;;		_LED_data_set
  1369 ;;		_cw_data_set
  1370 ;;		_get_cw_data
  1371 ;;		_send_data_master
  1372 ;;		_spi_master_send
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _command
  1380  075B                     _command:	
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1384                           ;command@data stored from wreg
  1385  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1386  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1387  075D  00E0               	movwf	command@data
  1388                           
  1389                           ;OBC1_app.c: 32: switch(data)
  1390  075E  2FE7               	goto	l1697
  1391  075F                     l1681:	
  1392                           ;OBC1_app.c: 33: {
  1393                           ;OBC1_app.c: 34: case (0x03):
  1394                           
  1395                           
  1396                           ;OBC1_app.c: 35: get_cw_data();
  1397  075F  120A  118A  26D4  120A  118A  	fcall	_get_cw_data
  1398                           
  1399                           ;OBC1_app.c: 36: cw_data_set(&cw);
  1400  0764  3041               	movlw	(low (_cw| 0))& (0+255)
  1401  0765  120A  118A  2654  120A  118A  	fcall	_cw_data_set
  1402                           
  1403                           ;OBC1_app.c: 37: spi_master_send(COM, 0x11);
  1404  076A  3011               	movlw	17
  1405  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1406  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1407  076D  00DD               	movwf	??_command
  1408  076E  085D               	movf	??_command,w
  1409  076F  00F0               	movwf	spi_master_send@data
  1410  0770  3003               	movlw	3
  1411  0771  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1412                           
  1413                           ;OBC1_app.c: 38: send_data_master(COM, 0x01, DATA_END);
  1414  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0778  01CF               	clrf	send_data_master@data_type
  1417  0779  0ACF               	incf	send_data_master@data_type,f
  1418  077A  3010               	movlw	16
  1419  077B  00DD               	movwf	??_command
  1420  077C  085D               	movf	??_command,w
  1421  077D  00D0               	movwf	send_data_master@data_end_command
  1422  077E  3003               	movlw	3
  1423  077F  120A  118A  2230   	fcall	_send_data_master
  1424                           
  1425                           ;OBC1_app.c: 39: break;
  1426  0782  0008               	return
  1427  0783                     l375:	
  1428                           ;OBC1_app.c: 41: case (0x01):
  1429                           
  1430                           
  1431                           ;OBC1_app.c: 42: PORTDbits.RD6 = 1;
  1432  0783  1708               	bsf	8,6	;volatile
  1433                           
  1434                           ;OBC1_app.c: 43: _delay((unsigned long)((100)*(20000000/4000.0)));
  1435  0784  3003               	movlw	3
  1436  0785  00DF               	movwf	??_command+2
  1437  0786  308A               	movlw	138
  1438  0787  00DE               	movwf	??_command+1
  1439  0788  3056               	movlw	86
  1440  0789  00DD               	movwf	??_command
  1441  078A                     u917:	
  1442  078A  0BDD               	decfsz	??_command,f
  1443  078B  2F8A               	goto	u917
  1444  078C  0BDE               	decfsz	??_command+1,f
  1445  078D  2F8A               	goto	u917
  1446  078E  0BDF               	decfsz	??_command+2,f
  1447  078F  2F8A               	goto	u917
  1448  0790  2F91               	nop2
  1449                           
  1450                           ;OBC1_app.c: 44: PORTDbits.RD6 = 0;
  1451  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0793  1308               	bcf	8,6	;volatile
  1454                           
  1455                           ;OBC1_app.c: 45: _delay((unsigned long)((100)*(20000000/4000.0)));
  1456  0794  3003               	movlw	3
  1457  0795  00DF               	movwf	??_command+2
  1458  0796  308A               	movlw	138
  1459  0797  00DE               	movwf	??_command+1
  1460  0798  3056               	movlw	86
  1461  0799  00DD               	movwf	??_command
  1462  079A                     u927:	
  1463  079A  0BDD               	decfsz	??_command,f
  1464  079B  2F9A               	goto	u927
  1465  079C  0BDE               	decfsz	??_command+1,f
  1466  079D  2F9A               	goto	u927
  1467  079E  0BDF               	decfsz	??_command+2,f
  1468  079F  2F9A               	goto	u927
  1469  07A0  2FA1               	nop2
  1470                           
  1471                           ;OBC1_app.c: 46: LED_data_set();
  1472  07A1  120A  118A  2212  120A  118A  	fcall	_LED_data_set
  1473                           
  1474                           ;OBC1_app.c: 47: spi_master_send(COM, 0x11);
  1475  07A6  3011               	movlw	17
  1476  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1477  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1478  07A9  00DD               	movwf	??_command
  1479  07AA  085D               	movf	??_command,w
  1480  07AB  00F0               	movwf	spi_master_send@data
  1481  07AC  3003               	movlw	3
  1482  07AD  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1483                           
  1484                           ;OBC1_app.c: 48: send_data_master(COM, (0x01), DATA_END);
  1485  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1486  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1487  07B4  01CF               	clrf	send_data_master@data_type
  1488  07B5  0ACF               	incf	send_data_master@data_type,f
  1489  07B6  3010               	movlw	16
  1490  07B7  00DD               	movwf	??_command
  1491  07B8  085D               	movf	??_command,w
  1492  07B9  00D0               	movwf	send_data_master@data_end_command
  1493  07BA  3003               	movlw	3
  1494  07BB  120A  118A  2230   	fcall	_send_data_master
  1495                           
  1496                           ;OBC1_app.c: 49: break;
  1497  07BE  0008               	return
  1498  07BF                     l1693:	
  1499                           ;OBC1_app.c: 51: case (0x02):
  1500                           
  1501                           
  1502                           ;OBC1_app.c: 52: spi_master_send(OBC2, 0x01);
  1503  07BF  01F0               	clrf	spi_master_send@data
  1504  07C0  0AF0               	incf	spi_master_send@data,f
  1505  07C1  3002               	movlw	2
  1506  07C2  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1507                           
  1508                           ;OBC1_app.c: 53: I2Ctemp_data_set();
  1509  07C7  120A  118A  21DD  120A  118A  	fcall	_I2Ctemp_data_set
  1510                           
  1511                           ;OBC1_app.c: 54: spi_master_send(COM, 0x11);
  1512  07CC  3011               	movlw	17
  1513  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1514  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1515  07CF  00DD               	movwf	??_command
  1516  07D0  085D               	movf	??_command,w
  1517  07D1  00F0               	movwf	spi_master_send@data
  1518  07D2  3003               	movlw	3
  1519  07D3  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1520                           
  1521                           ;OBC1_app.c: 55: send_data_master(COM, 0x02, DATA_END);
  1522  07D8  3002               	movlw	2
  1523  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1524  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1525  07DB  00DD               	movwf	??_command
  1526  07DC  085D               	movf	??_command,w
  1527  07DD  00CF               	movwf	send_data_master@data_type
  1528  07DE  3010               	movlw	16
  1529  07DF  00DE               	movwf	??_command+1
  1530  07E0  085E               	movf	??_command+1,w
  1531  07E1  00D0               	movwf	send_data_master@data_end_command
  1532  07E2  3003               	movlw	3
  1533  07E3  120A  118A  2230   	fcall	_send_data_master
  1534                           
  1535                           ;OBC1_app.c: 57: }
  1536                           
  1537                           ;OBC1_app.c: 56: break;
  1538  07E6  0008               	return
  1539  07E7                     l1697:	
  1540  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1541  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1542  07E9  0860               	movf	command@data,w
  1543                           
  1544                           ; Switch size 1, requested type "space"
  1545                           ; Number of cases is 3, Range of values is 1 to 3
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte           10     6 (average)
  1549                           ; direct_byte           20    11 (fixed)
  1550                           ; jumptable            263     9 (fixed)
  1551                           ;	Chosen strategy is simple_byte
  1552  07EA  3A01               	xorlw	1	; case 1
  1553  07EB  1903               	skipnz
  1554  07EC  2F83               	goto	l375
  1555  07ED  3A03               	xorlw	3	; case 2
  1556  07EE  1903               	skipnz
  1557  07EF  2FBF               	goto	l1693
  1558  07F0  3A01               	xorlw	1	; case 3
  1559  07F1  1903               	skipnz
  1560  07F2  2F5F               	goto	l1681
  1561  07F3  2FF4               	goto	l377
  1562  07F4                     l377:	
  1563  07F4  0008               	return
  1564  07F5                     __end_of_command:	
  1565                           
  1566                           	psect	text4
  1567  0230                     __ptext4:	
  1568 ;; *************** function _send_data_master *****************
  1569 ;; Defined at:
  1570 ;;		line 217 in file "system_protocol.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  destination     1    wreg     enum E1099
  1573 ;;  data_type       1    1[BANK0 ] enum E1104
  1574 ;;  data_end_com    1    2[BANK0 ] enum E1108
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  destination     1    4[BANK0 ] enum E1099
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       2       0       0       0
  1587 ;;      Locals:         0       1       0       0       0
  1588 ;;      Temps:          0       1       0       0       0
  1589 ;;      Totals:         0       4       0       0       0
  1590 ;;Total ram usage:        4 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		_packet_send_master
  1595 ;; This function is called by:
  1596 ;;		_command
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _send_data_master
  1602  0230                     _send_data_master:	
  1603                           
  1604                           ;incstack = 0
  1605                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1606                           ;send_data_master@destination stored from wreg
  1607  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0232  00D2               	movwf	send_data_master@destination
  1610                           
  1611                           ;system_protocol.c: 219: packet.data_type = (uint8_t)data_type;
  1612  0233  084F               	movf	send_data_master@data_type,w
  1613  0234  00D1               	movwf	??_send_data_master
  1614  0235  0851               	movf	??_send_data_master,w
  1615  0236  00A1               	movwf	_packet
  1616                           
  1617                           ;system_protocol.c: 220: packet.data_end_command = (uint8_t)data_end_command;
  1618  0237  0850               	movf	send_data_master@data_end_command,w
  1619  0238  00D1               	movwf	??_send_data_master
  1620  0239  0851               	movf	??_send_data_master,w
  1621  023A  00C0               	movwf	_packet+31
  1622                           
  1623                           ;system_protocol.c: 222: packet_send_master(destination, &packet);
  1624  023B  3021               	movlw	(low (_packet| 0))& (0+255)
  1625  023C  00D1               	movwf	??_send_data_master
  1626  023D  0851               	movf	??_send_data_master,w
  1627  023E  00FC               	movwf	packet_send_master@p_packet
  1628  023F  0852               	movf	send_data_master@destination,w
  1629  0240  120A  118A  236B   	fcall	_packet_send_master
  1630  0243  0008               	return
  1631  0244                     __end_of_send_data_master:	
  1632                           
  1633                           	psect	text5
  1634  036B                     __ptext5:	
  1635 ;; *************** function _packet_send_master *****************
  1636 ;; Defined at:
  1637 ;;		line 465 in file "system_protocol.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  destination     1    wreg     enum E1099
  1640 ;;  p_packet        1   12[COMMON] PTR struct .
  1641 ;;		 -> packet(32), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  destination     1    0[BANK0 ] enum E1099
  1644 ;; Return value:  Size  Location     Type
  1645 ;;		None               void
  1646 ;; Registers used:
  1647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         1       0       0       0       0
  1654 ;;      Locals:         0       1       0       0       0
  1655 ;;      Temps:          1       0       0       0       0
  1656 ;;      Totals:         2       1       0       0       0
  1657 ;;Total ram usage:        3 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    2
  1660 ;; This function calls:
  1661 ;;		_send_payload
  1662 ;;		_spi_master_send
  1663 ;; This function is called by:
  1664 ;;		_send_data_master
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function _packet_send_master
  1670  036B                     _packet_send_master:	
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1674                           ;packet_send_master@destination stored from wreg
  1675  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1676  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1677  036D  00CE               	movwf	packet_send_master@destination
  1678                           
  1679                           ;system_protocol.c: 468: spi_master_send(destination, 0x01);
  1680  036E  01F0               	clrf	spi_master_send@data
  1681  036F  0AF0               	incf	spi_master_send@data,f
  1682  0370  084E               	movf	packet_send_master@destination,w
  1683  0371  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1684                           
  1685                           ;system_protocol.c: 471: spi_master_send(destination, &p_packet->data_type);
  1686  0376  087C               	movf	packet_send_master@p_packet,w
  1687  0377  00FD               	movwf	??_packet_send_master
  1688  0378  087D               	movf	??_packet_send_master,w
  1689  0379  00F0               	movwf	spi_master_send@data
  1690  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1691  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1692  037C  084E               	movf	packet_send_master@destination,w
  1693  037D  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1694                           
  1695                           ;system_protocol.c: 474: send_payload(destination, &p_packet->payload);
  1696  0382  087C               	movf	packet_send_master@p_packet,w
  1697  0383  3E01               	addlw	1
  1698  0384  00FD               	movwf	??_packet_send_master
  1699  0385  087D               	movf	??_packet_send_master,w
  1700  0386  00F6               	movwf	send_payload@p_payload
  1701  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0389  084E               	movf	packet_send_master@destination,w
  1704  038A  120A  118A  247A  120A  118A  	fcall	_send_payload
  1705                           
  1706                           ;system_protocol.c: 477: spi_master_send(destination, &p_packet->data_end_command);
  1707  038F  087C               	movf	packet_send_master@p_packet,w
  1708  0390  3E1F               	addlw	31
  1709  0391  00FD               	movwf	??_packet_send_master
  1710  0392  087D               	movf	??_packet_send_master,w
  1711  0393  00F0               	movwf	spi_master_send@data
  1712  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0396  084E               	movf	packet_send_master@destination,w
  1715  0397  120A  118A  2518   	fcall	_spi_master_send
  1716  039A  0008               	return
  1717  039B                     __end_of_packet_send_master:	
  1718                           
  1719                           	psect	text6
  1720  047A                     __ptext6:	
  1721 ;; *************** function _send_payload *****************
  1722 ;; Defined at:
  1723 ;;		line 397 in file "system_protocol.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  destination     1    wreg     enum E1099
  1726 ;;  p_payload       1    6[COMMON] PTR unsigned char 
  1727 ;;		 -> packet(32), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  destination     1   11[COMMON] enum E1099
  1730 ;;  index_pos       1   10[COMMON] unsigned char 
  1731 ;;  i               1    9[COMMON] unsigned char 
  1732 ;;  data_len        1    8[COMMON] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         1       0       0       0       0
  1743 ;;      Locals:         4       0       0       0       0
  1744 ;;      Temps:          1       0       0       0       0
  1745 ;;      Totals:         6       0       0       0       0
  1746 ;;Total ram usage:        6 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		_spi_master_send
  1751 ;; This function is called by:
  1752 ;;		_packet_send_master
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _send_payload
  1758  047A                     _send_payload:	
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           ;send_payload@destination stored from wreg
  1763  047A  00FB               	movwf	send_payload@destination
  1764                           
  1765                           ;system_protocol.c: 399: uint8_t i;
  1766                           ;system_protocol.c: 400: uint8_t data_len;
  1767                           ;system_protocol.c: 401: uint8_t index_pos = 0;
  1768  047B  01FA               	clrf	send_payload@index_pos
  1769  047C                     l1545:	
  1770                           ;system_protocol.c: 404: while(*p_payload != 0x00 || index_pos < 30)
  1771                           
  1772  047C  0876               	movf	send_payload@p_payload,w
  1773  047D  0084               	movwf	4
  1774  047E  1383               	bcf	3,7	;select IRP bank0
  1775  047F  0800               	movf	0,w
  1776  0480  1903               	btfsc	3,2
  1777  0481  2CB7               	goto	l1547
  1778  0482                     l1525:	
  1779                           
  1780                           ;system_protocol.c: 405: {
  1781                           ;system_protocol.c: 406: data_len = *p_payload;
  1782  0482  0876               	movf	send_payload@p_payload,w
  1783  0483  0084               	movwf	4
  1784  0484  1383               	bcf	3,7	;select IRP bank0
  1785  0485  0800               	movf	0,w
  1786  0486  00F7               	movwf	??_send_payload
  1787  0487  0877               	movf	??_send_payload,w
  1788  0488  00F8               	movwf	send_payload@data_len
  1789                           
  1790                           ;system_protocol.c: 407: spi_master_send(destination, p_payload++);
  1791  0489  0876               	movf	send_payload@p_payload,w
  1792  048A  00F7               	movwf	??_send_payload
  1793  048B  0877               	movf	??_send_payload,w
  1794  048C  00F0               	movwf	spi_master_send@data
  1795  048D  087B               	movf	send_payload@destination,w
  1796  048E  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1797  0493  3001               	movlw	1
  1798  0494  00F7               	movwf	??_send_payload
  1799  0495  0877               	movf	??_send_payload,w
  1800  0496  07F6               	addwf	send_payload@p_payload,f
  1801                           
  1802                           ;system_protocol.c: 408: index_pos++;
  1803  0497  3001               	movlw	1
  1804  0498  00F7               	movwf	??_send_payload
  1805  0499  0877               	movf	??_send_payload,w
  1806  049A  07FA               	addwf	send_payload@index_pos,f
  1807                           
  1808                           ;system_protocol.c: 409: for(i = 0; i < data_len; i++)
  1809  049B  01F9               	clrf	send_payload@i
  1810  049C                     l1543:	
  1811  049C  0878               	movf	send_payload@data_len,w
  1812  049D  0279               	subwf	send_payload@i,w
  1813  049E  1803               	btfsc	3,0
  1814  049F  2C7C               	goto	l1545
  1815                           
  1816                           ;system_protocol.c: 410: {
  1817                           ;system_protocol.c: 411: spi_master_send(destination, p_payload++);
  1818  04A0  0876               	movf	send_payload@p_payload,w
  1819  04A1  00F7               	movwf	??_send_payload
  1820  04A2  0877               	movf	??_send_payload,w
  1821  04A3  00F0               	movwf	spi_master_send@data
  1822  04A4  087B               	movf	send_payload@destination,w
  1823  04A5  120A  118A  2518  120A  118A  	fcall	_spi_master_send
  1824  04AA  3001               	movlw	1
  1825  04AB  00F7               	movwf	??_send_payload
  1826  04AC  0877               	movf	??_send_payload,w
  1827  04AD  07F6               	addwf	send_payload@p_payload,f
  1828                           
  1829                           ;system_protocol.c: 412: index_pos++;
  1830  04AE  3001               	movlw	1
  1831  04AF  00F7               	movwf	??_send_payload
  1832  04B0  0877               	movf	??_send_payload,w
  1833  04B1  07FA               	addwf	send_payload@index_pos,f
  1834  04B2  3001               	movlw	1
  1835  04B3  00F7               	movwf	??_send_payload
  1836  04B4  0877               	movf	??_send_payload,w
  1837  04B5  07F9               	addwf	send_payload@i,f
  1838  04B6  2C9C               	goto	l1543
  1839  04B7                     l1547:	
  1840  04B7  301E               	movlw	30
  1841  04B8  027A               	subwf	send_payload@index_pos,w
  1842  04B9  1803               	btfsc	3,0
  1843  04BA  0008               	return
  1844  04BB  2C82               	goto	l1525
  1845  04BC                     __end_of_send_payload:	
  1846                           ;system_protocol.c: 413: }
  1847                           ;system_protocol.c: 414: }
  1848                           ;system_protocol.c: 416: return index_pos;
  1849                           ;	Return value of _send_payload is never used
  1850                           
  1851                           
  1852                           	psect	text7
  1853  0518                     __ptext7:	
  1854 ;; *************** function _spi_master_send *****************
  1855 ;; Defined at:
  1856 ;;		line 165 in file "spi_master.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  destination     1    wreg     enum E1099
  1859 ;;  data            1    0[COMMON] unsigned char 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  destination     1    5[COMMON] enum E1099
  1862 ;;  timeout_coun    2    3[COMMON] unsigned int 
  1863 ;;  dummy           1    2[COMMON] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         1       0       0       0       0
  1874 ;;      Locals:         4       0       0       0       0
  1875 ;;      Temps:          1       0       0       0       0
  1876 ;;      Totals:         6       0       0       0       0
  1877 ;;Total ram usage:        6 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;;		_send_payload
  1884 ;;		_packet_send_master
  1885 ;;		_command
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function _spi_master_send
  1891  0518                     _spi_master_send:	
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  1895                           ;spi_master_send@destination stored from wreg
  1896  0518  00F5               	movwf	spi_master_send@destination
  1897                           
  1898                           ;spi_master.c: 167: uint8_t dummy;
  1899                           ;spi_master.c: 168: uint16_t timeout_counter = 1000;
  1900  0519  30E8               	movlw	232
  1901  051A  00F3               	movwf	spi_master_send@timeout_counter
  1902  051B  3003               	movlw	3
  1903  051C  00F4               	movwf	spi_master_send@timeout_counter+1
  1904                           
  1905                           ;spi_master.c: 171: dummy = SSPBUF;
  1906  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1907  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1908  051F  0813               	movf	19,w	;volatile
  1909  0520  00F1               	movwf	??_spi_master_send
  1910  0521  0871               	movf	??_spi_master_send,w
  1911  0522  00F2               	movwf	spi_master_send@dummy
  1912                           
  1913                           ;spi_master.c: 174: switch(destination)
  1914  0523  2D2D               	goto	l1383
  1915  0524                     l127:	
  1916                           ;spi_master.c: 177: while(PORTDbits.RD2 == 0){;}
  1917                           
  1918                           ;spi_master.c: 175: {
  1919                           ;spi_master.c: 176: case OBC2:
  1920                           
  1921  0524  1908               	btfsc	8,2	;volatile
  1922  0525  2D3F               	goto	l1387
  1923  0526  2D24               	goto	l127
  1924  0527                     l132:	
  1925                           ;spi_master.c: 180: while(PORTDbits.RD0 == 0){;}
  1926                           
  1927                           ;spi_master.c: 179: case COM:
  1928                           
  1929                           ;spi_master.c: 178: break;
  1930                           
  1931  0527  1808               	btfsc	8,0	;volatile
  1932  0528  2D3F               	goto	l1387
  1933  0529  2D27               	goto	l132
  1934  052A                     l136:	
  1935                           ;spi_master.c: 183: while(PORTDbits.RD1 == 0){;}
  1936                           
  1937                           ;spi_master.c: 182: case POW:
  1938                           
  1939                           ;spi_master.c: 181: break;
  1940                           
  1941  052A  1888               	btfsc	8,1	;volatile
  1942  052B  2D3F               	goto	l1387
  1943  052C  2D2A               	goto	l136
  1944  052D                     l1383:	
  1945                           ;spi_master.c: 185: }
  1946                           
  1947                           ;spi_master.c: 184: break;
  1948                           
  1949  052D  0875               	movf	spi_master_send@destination,w
  1950                           
  1951                           ; Switch size 1, requested type "space"
  1952                           ; Number of cases is 3, Range of values is 2 to 4
  1953                           ; switch strategies available:
  1954                           ; Name         Instructions Cycles
  1955                           ; simple_byte           10     6 (average)
  1956                           ; direct_byte           20    11 (fixed)
  1957                           ; jumptable            263     9 (fixed)
  1958                           ;	Chosen strategy is simple_byte
  1959  052E  3A02               	xorlw	2	; case 2
  1960  052F  1903               	skipnz
  1961  0530  2D24               	goto	l127
  1962  0531  3A01               	xorlw	1	; case 3
  1963  0532  1903               	skipnz
  1964  0533  2D27               	goto	l132
  1965  0534  3A07               	xorlw	7	; case 4
  1966  0535  1903               	skipnz
  1967  0536  2D2A               	goto	l136
  1968  0537  2D3F               	goto	l1387
  1969                           
  1970                           ;spi_master.c: 188: switch(destination)
  1971  0538  2D3F               	goto	l1387
  1972  0539                     l140:	
  1973                           ;spi_master.c: 189: {
  1974                           ;spi_master.c: 190: case OBC2:
  1975                           
  1976                           
  1977                           ;spi_master.c: 191: PORTCbits.RC2 = 0;
  1978  0539  1107               	bcf	7,2	;volatile
  1979                           
  1980                           ;spi_master.c: 192: break;
  1981  053A  2D4A               	goto	l1389
  1982  053B                     l142:	
  1983                           ;spi_master.c: 193: case COM:
  1984                           
  1985                           
  1986                           ;spi_master.c: 194: PORTCbits.RC0 = 0;
  1987  053B  1007               	bcf	7,0	;volatile
  1988                           
  1989                           ;spi_master.c: 195: break;
  1990  053C  2D4A               	goto	l1389
  1991  053D                     l143:	
  1992                           ;spi_master.c: 196: case POW:
  1993                           
  1994                           
  1995                           ;spi_master.c: 197: PORTCbits.RC1 = 0;
  1996  053D  1087               	bcf	7,1	;volatile
  1997                           
  1998                           ;spi_master.c: 199: }
  1999                           
  2000                           ;spi_master.c: 198: break;
  2001  053E  2D4A               	goto	l1389
  2002  053F                     l1387:	
  2003  053F  0875               	movf	spi_master_send@destination,w
  2004                           
  2005                           ; Switch size 1, requested type "space"
  2006                           ; Number of cases is 3, Range of values is 2 to 4
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte           10     6 (average)
  2010                           ; direct_byte           20    11 (fixed)
  2011                           ; jumptable            263     9 (fixed)
  2012                           ;	Chosen strategy is simple_byte
  2013  0540  3A02               	xorlw	2	; case 2
  2014  0541  1903               	skipnz
  2015  0542  2D39               	goto	l140
  2016  0543  3A01               	xorlw	1	; case 3
  2017  0544  1903               	skipnz
  2018  0545  2D3B               	goto	l142
  2019  0546  3A07               	xorlw	7	; case 4
  2020  0547  1903               	skipnz
  2021  0548  2D3D               	goto	l143
  2022  0549  2D4A               	goto	l1389
  2023  054A                     l1389:	
  2024                           
  2025                           ;spi_master.c: 202: SSPBUF = data;
  2026  054A  0870               	movf	spi_master_send@data,w
  2027  054B  0093               	movwf	19	;volatile
  2028  054C                     l1397:	
  2029                           ;spi_master.c: 205: while(SSPSTATbits.BF == 0)
  2030                           
  2031  054C  1683               	bsf	3,5	;RP0=1, select bank1
  2032  054D  1303               	bcf	3,6	;RP1=0, select bank1
  2033  054E  1814               	btfsc	20,0	;volatile
  2034  054F  2D67               	goto	l1401
  2035                           
  2036                           ;spi_master.c: 206: {
  2037                           ;spi_master.c: 208: if(timeout_counter == 0)
  2038  0550  0873               	movf	spi_master_send@timeout_counter,w
  2039  0551  0474               	iorwf	spi_master_send@timeout_counter+1,w
  2040  0552  1903               	btfsc	3,2
  2041  0553  0008               	return
  2042                           
  2043                           ;spi_master.c: 211: }
  2044                           ;spi_master.c: 214: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2045                           
  2046                           ;spi_master.c: 209: {
  2047                           ;spi_master.c: 210: return;
  2048  0554  2D55               	nop2	;2 cycle nop
  2049  0555  2D56               	nop2	;2 cycle nop
  2050  0556  0000               	nop
  2051                           
  2052                           ;spi_master.c: 215: timeout_counter--;
  2053  0557  3001               	movlw	1
  2054  0558  02F3               	subwf	spi_master_send@timeout_counter,f
  2055  0559  3000               	movlw	0
  2056  055A  1C03               	skipc
  2057  055B  03F4               	decf	spi_master_send@timeout_counter+1,f
  2058  055C  02F4               	subwf	spi_master_send@timeout_counter+1,f
  2059  055D  2D4C               	goto	l1397
  2060  055E                     l150:	
  2061                           ;spi_master.c: 220: {
  2062                           ;spi_master.c: 221: case OBC2:
  2063                           
  2064                           ;spi_master.c: 216: }
  2065                           ;spi_master.c: 219: switch(destination)
  2066                           
  2067                           
  2068                           ;spi_master.c: 222: PORTCbits.RC2 = 1;
  2069  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2070  055F  1507               	bsf	7,2	;volatile
  2071                           
  2072                           ;spi_master.c: 223: break;
  2073  0560  2D72               	goto	l1403
  2074  0561                     l152:	
  2075                           ;spi_master.c: 224: case COM:
  2076                           
  2077                           
  2078                           ;spi_master.c: 225: PORTCbits.RC0 = 1;
  2079  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0562  1407               	bsf	7,0	;volatile
  2081                           
  2082                           ;spi_master.c: 226: break;
  2083  0563  2D72               	goto	l1403
  2084  0564                     l153:	
  2085                           ;spi_master.c: 227: case POW:
  2086                           
  2087                           
  2088                           ;spi_master.c: 228: PORTCbits.RC1 = 1;
  2089  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0565  1487               	bsf	7,1	;volatile
  2091                           
  2092                           ;spi_master.c: 230: }
  2093                           
  2094                           ;spi_master.c: 229: break;
  2095  0566  2D72               	goto	l1403
  2096  0567                     l1401:	
  2097  0567  0875               	movf	spi_master_send@destination,w
  2098                           
  2099                           ; Switch size 1, requested type "space"
  2100                           ; Number of cases is 3, Range of values is 2 to 4
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte           10     6 (average)
  2104                           ; direct_byte           20    11 (fixed)
  2105                           ; jumptable            263     9 (fixed)
  2106                           ;	Chosen strategy is simple_byte
  2107  0568  3A02               	xorlw	2	; case 2
  2108  0569  1903               	skipnz
  2109  056A  2D5E               	goto	l150
  2110  056B  3A01               	xorlw	1	; case 3
  2111  056C  1903               	skipnz
  2112  056D  2D61               	goto	l152
  2113  056E  3A07               	xorlw	7	; case 4
  2114  056F  1903               	skipnz
  2115  0570  2D64               	goto	l153
  2116  0571  2D72               	goto	l1403
  2117  0572                     l1403:	
  2118                           
  2119                           ;spi_master.c: 233: dummy = SSPBUF;
  2120  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0573  0813               	movf	19,w	;volatile
  2122  0574  00F1               	movwf	??_spi_master_send
  2123  0575  0871               	movf	??_spi_master_send,w
  2124  0576  00F2               	movwf	spi_master_send@dummy
  2125  0577  0008               	return
  2126  0578                     __end_of_spi_master_send:	
  2127                           
  2128                           	psect	text8
  2129  06D4                     __ptext8:	
  2130 ;; *************** function _get_cw_data *****************
  2131 ;; Defined at:
  2132 ;;		line 94 in file "system_protocol.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  buf             2    0[BANK0 ] unsigned int 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;		None               void
  2139 ;; Registers used:
  2140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       2       0       0       0
  2148 ;;      Temps:          1       0       0       0       0
  2149 ;;      Totals:         1       2       0       0       0
  2150 ;;Total ram usage:        3 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		_get_adcon
  2155 ;;		_spi_master_receive
  2156 ;;		_spi_master_start
  2157 ;; This function is called by:
  2158 ;;		_command
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _get_cw_data
  2164  06D4                     _get_cw_data:	
  2165                           
  2166                           ;system_protocol.c: 96: uint16_t buf;
  2167                           ;system_protocol.c: 98: spi_master_start();
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2171  06D4  120A  118A  2261  120A  118A  	fcall	_spi_master_start
  2172                           
  2173                           ;system_protocol.c: 99: cw.power1[0] = spi_master_receive(POW);
  2174  06D9  3004               	movlw	4
  2175  06DA  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2176  06DF  00FD               	movwf	??_get_cw_data
  2177  06E0  087D               	movf	??_get_cw_data,w
  2178  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2179  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2180  06E3  00C1               	movwf	_cw
  2181                           
  2182                           ;system_protocol.c: 100: cw.power1[1] = spi_master_receive(POW);
  2183  06E4  3004               	movlw	4
  2184  06E5  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2185  06EA  00FD               	movwf	??_get_cw_data
  2186  06EB  087D               	movf	??_get_cw_data,w
  2187  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2188  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2189  06EE  00C2               	movwf	_cw+1
  2190                           
  2191                           ;system_protocol.c: 101: cw.power2[0] = spi_master_receive(POW);
  2192  06EF  3004               	movlw	4
  2193  06F0  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2194  06F5  00FD               	movwf	??_get_cw_data
  2195  06F6  087D               	movf	??_get_cw_data,w
  2196  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2197  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2198  06F9  00C3               	movwf	_cw+2
  2199                           
  2200                           ;system_protocol.c: 102: cw.power2[1] = spi_master_receive(POW);
  2201  06FA  3004               	movlw	4
  2202  06FB  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2203  0700  00FD               	movwf	??_get_cw_data
  2204  0701  087D               	movf	??_get_cw_data,w
  2205  0702  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0703  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0704  00C4               	movwf	_cw+3
  2208                           
  2209                           ;system_protocol.c: 103: cw.power3[0] = spi_master_receive(POW);
  2210  0705  3004               	movlw	4
  2211  0706  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2212  070B  00FD               	movwf	??_get_cw_data
  2213  070C  087D               	movf	??_get_cw_data,w
  2214  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2215  070E  1303               	bcf	3,6	;RP1=0, select bank0
  2216  070F  00C5               	movwf	_cw+4
  2217                           
  2218                           ;system_protocol.c: 104: cw.power3[1] = spi_master_receive(POW);
  2219  0710  3004               	movlw	4
  2220  0711  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2221  0716  00FD               	movwf	??_get_cw_data
  2222  0717  087D               	movf	??_get_cw_data,w
  2223  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2225  071A  00C6               	movwf	_cw+5
  2226                           
  2227                           ;system_protocol.c: 105: cw.power4[0] = spi_master_receive(POW);
  2228  071B  3004               	movlw	4
  2229  071C  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2230  0721  00FD               	movwf	??_get_cw_data
  2231  0722  087D               	movf	??_get_cw_data,w
  2232  0723  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0724  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0725  00C7               	movwf	_cw+6
  2235                           
  2236                           ;system_protocol.c: 106: cw.power4[1] = spi_master_receive(POW);
  2237  0726  3004               	movlw	4
  2238  0727  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2239  072C  00FD               	movwf	??_get_cw_data
  2240  072D  087D               	movf	??_get_cw_data,w
  2241  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2242  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0730  00C8               	movwf	_cw+7
  2244                           
  2245                           ;system_protocol.c: 107: cw.power5[0] = spi_master_receive(POW);
  2246  0731  3004               	movlw	4
  2247  0732  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2248  0737  00FD               	movwf	??_get_cw_data
  2249  0738  087D               	movf	??_get_cw_data,w
  2250  0739  1283               	bcf	3,5	;RP0=0, select bank0
  2251  073A  1303               	bcf	3,6	;RP1=0, select bank0
  2252  073B  00C9               	movwf	_cw+8
  2253                           
  2254                           ;system_protocol.c: 108: cw.power5[1] = spi_master_receive(POW);
  2255  073C  3004               	movlw	4
  2256  073D  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  2257  0742  00FD               	movwf	??_get_cw_data
  2258  0743  087D               	movf	??_get_cw_data,w
  2259  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0746  00CA               	movwf	_cw+9
  2262                           
  2263                           ;system_protocol.c: 109: buf = get_adcon();
  2264  0747  120A  118A  2280   	fcall	_get_adcon
  2265  074A  0877               	movf	?_get_adcon+1,w
  2266  074B  1283               	bcf	3,5	;RP0=0, select bank0
  2267  074C  1303               	bcf	3,6	;RP1=0, select bank0
  2268  074D  00CF               	movwf	get_cw_data@buf+1
  2269  074E  0876               	movf	?_get_adcon,w
  2270  074F  00CE               	movwf	get_cw_data@buf
  2271                           
  2272                           ;system_protocol.c: 110: cw.temp[0] = (uint8_t)(buf >> 8);
  2273  0750  084F               	movf	get_cw_data@buf+1,w
  2274  0751  00FD               	movwf	??_get_cw_data
  2275  0752  087D               	movf	??_get_cw_data,w
  2276  0753  00CB               	movwf	_cw+10
  2277                           
  2278                           ;system_protocol.c: 111: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  2279  0754  084E               	movf	get_cw_data@buf,w
  2280  0755  00FD               	movwf	??_get_cw_data
  2281  0756  087D               	movf	??_get_cw_data,w
  2282  0757  00CC               	movwf	_cw+11
  2283                           
  2284                           ;system_protocol.c: 112: cw.obc2 = 1;
  2285  0758  144D               	bsf	_cw+12,0
  2286                           
  2287                           ;system_protocol.c: 113: cw.powmcu = 1;
  2288  0759  14CD               	bsf	_cw+12,1
  2289  075A  0008               	return
  2290  075B                     __end_of_get_cw_data:	
  2291                           
  2292                           	psect	text9
  2293  0261                     __ptext9:	
  2294 ;; *************** function _spi_master_start *****************
  2295 ;; Defined at:
  2296 ;;		line 36 in file "spi_master.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;		None               void
  2303 ;; Registers used:
  2304 ;;		None
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0
  2313 ;;      Totals:         0       0       0       0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;;		_get_cw_data
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _spi_master_start
  2326  0261                     _spi_master_start:	
  2327                           
  2328                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _spi_master_start: []
  2332  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0262  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0263  1187               	bcf	7,3	;volatile
  2335                           
  2336                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  2337  0264  1287               	bcf	7,5	;volatile
  2338                           
  2339                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  2340  0265  1607               	bsf	7,4	;volatile
  2341                           
  2342                           ;spi_master.c: 44: TRISCbits.TRISC2 = 0;
  2343  0266  1107               	bcf	7,2	;volatile
  2344                           
  2345                           ;spi_master.c: 45: TRISCbits.TRISC0 = 0;
  2346  0267  1007               	bcf	7,0	;volatile
  2347                           
  2348                           ;spi_master.c: 46: TRISCbits.TRISC1 = 0;
  2349  0268  1087               	bcf	7,1	;volatile
  2350                           
  2351                           ;spi_master.c: 49: SSPCONbits.SSPEN = 0;
  2352  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2353  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2354  026B  1294               	bcf	20,5	;volatile
  2355                           
  2356                           ;spi_master.c: 52: SSPSTATbits.SMP = 0;
  2357  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2358  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2359  026E  1394               	bcf	20,7	;volatile
  2360                           
  2361                           ;spi_master.c: 53: SSPCONbits.CKP = 0;
  2362  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2364  0271  1214               	bcf	20,4	;volatile
  2365                           
  2366                           ;spi_master.c: 54: SSPSTATbits.CKE = 0;
  2367  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2368  0273  1303               	bcf	3,6	;RP1=0, select bank1
  2369  0274  1314               	bcf	20,6	;volatile
  2370                           
  2371                           ;spi_master.c: 57: SSPCONbits.SSPM3 = 0;
  2372  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0277  1194               	bcf	20,3	;volatile
  2375                           
  2376                           ;spi_master.c: 58: SSPCONbits.SSPM2 = 0;
  2377  0278  1114               	bcf	20,2	;volatile
  2378                           
  2379                           ;spi_master.c: 59: SSPCONbits.SSPM1 = 0;
  2380  0279  1094               	bcf	20,1	;volatile
  2381                           
  2382                           ;spi_master.c: 60: SSPCONbits.SSPM0 = 0;
  2383  027A  1014               	bcf	20,0	;volatile
  2384                           
  2385                           ;spi_master.c: 63: PORTCbits.RC2 = 1;
  2386  027B  1507               	bsf	7,2	;volatile
  2387                           
  2388                           ;spi_master.c: 64: PORTCbits.RC0 = 1;
  2389  027C  1407               	bsf	7,0	;volatile
  2390                           
  2391                           ;spi_master.c: 65: PORTCbits.RC1 = 1;
  2392  027D  1487               	bsf	7,1	;volatile
  2393                           
  2394                           ;spi_master.c: 68: SSPCONbits.SSPEN = 1;
  2395  027E  1694               	bsf	20,5	;volatile
  2396  027F  0008               	return
  2397  0280                     __end_of_spi_master_start:	
  2398                           
  2399                           	psect	text10
  2400  0280                     __ptext10:	
  2401 ;; *************** function _get_adcon *****************
  2402 ;; Defined at:
  2403 ;;		line 91 in file "AD_value.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  voltage_valu    3    0        unsigned int 
  2408 ;;  ad_value        2   11[COMMON] unsigned int 
  2409 ;;  my_adres        2    9[COMMON] struct .
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    6[COMMON] unsigned int 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         2       0       0       0       0
  2420 ;;      Locals:         4       0       0       0       0
  2421 ;;      Temps:          1       0       0       0       0
  2422 ;;      Totals:         7       0       0       0       0
  2423 ;;Total ram usage:        7 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    2
  2426 ;; This function calls:
  2427 ;;		_bit_shift
  2428 ;; This function is called by:
  2429 ;;		_get_cw_data
  2430 ;;		_get_pt
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _get_adcon
  2436  0280                     _get_adcon:	
  2437                           
  2438                           ;AD_value.c: 94: uint16_t ad_value = 0b0000000000;
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2442  0280  01FB               	clrf	get_adcon@ad_value
  2443  0281  01FC               	clrf	get_adcon@ad_value+1
  2444                           
  2445                           ;AD_value.c: 95: double voltage_value;
  2446                           ;AD_value.c: 96: adres_t my_adres;
  2447                           ;AD_value.c: 99: ADCON0 = 0b10000001;
  2448  0282  3081               	movlw	129
  2449  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0285  009F               	movwf	31	;volatile
  2452                           
  2453                           ;AD_value.c: 100: ADCON0bits.GO_DONE = 1;
  2454  0286  151F               	bsf	31,2	;volatile
  2455  0287                     l71:	
  2456                           ;AD_value.c: 103: while(ADCON0bits.GO_DONE){;}
  2457                           
  2458  0287  191F               	btfsc	31,2	;volatile
  2459  0288  2A87               	goto	l71
  2460                           
  2461                           ;AD_value.c: 106: my_adres.my_adres_h = ADRESH;
  2462  0289  081E               	movf	30,w	;volatile
  2463  028A  00F8               	movwf	??_get_adcon
  2464  028B  0878               	movf	??_get_adcon,w
  2465  028C  00F9               	movwf	get_adcon@my_adres
  2466                           
  2467                           ;AD_value.c: 107: my_adres.my_adres_l = ADRESL;
  2468  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2469  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2470  028F  081E               	movf	30,w	;volatile
  2471  0290  00F8               	movwf	??_get_adcon
  2472  0291  0878               	movf	??_get_adcon,w
  2473  0292  00FA               	movwf	get_adcon@my_adres+1
  2474                           
  2475                           ;AD_value.c: 108: bit_shift(&ad_value, &my_adres);
  2476  0293  3079               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  2477  0294  00F8               	movwf	??_get_adcon
  2478  0295  0878               	movf	??_get_adcon,w
  2479  0296  00F0               	movwf	bit_shift@p_adres
  2480  0297  307B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  2481  0298  120A  118A  239B   	fcall	_bit_shift
  2482                           
  2483                           ;AD_value.c: 110: return ad_value;
  2484  029B  087C               	movf	get_adcon@ad_value+1,w
  2485  029C  00F7               	movwf	?_get_adcon+1
  2486  029D  087B               	movf	get_adcon@ad_value,w
  2487  029E  00F6               	movwf	?_get_adcon
  2488  029F  0008               	return
  2489  02A0                     __end_of_get_adcon:	
  2490                           
  2491                           	psect	text11
  2492  039B                     __ptext11:	
  2493 ;; *************** function _bit_shift *****************
  2494 ;; Defined at:
  2495 ;;		line 71 in file "AD_value.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  p_ad_value      1    wreg     PTR unsigned int 
  2498 ;;		 -> get_adcon@ad_value(2), 
  2499 ;;  p_adres         1    0[COMMON] PTR struct .
  2500 ;;		 -> get_adcon@my_adres(2), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  p_ad_value      1    5[COMMON] PTR unsigned int 
  2503 ;;		 -> get_adcon@ad_value(2), 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;		None               void
  2506 ;; Registers used:
  2507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         1       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0
  2515 ;;      Temps:          4       0       0       0       0
  2516 ;;      Totals:         6       0       0       0       0
  2517 ;;Total ram usage:        6 bytes
  2518 ;; Hardware stack levels used:    2
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_get_adcon
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _bit_shift
  2528  039B                     _bit_shift:	
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  2532                           ;bit_shift@p_ad_value stored from wreg
  2533  039B  00F5               	movwf	bit_shift@p_ad_value
  2534                           
  2535                           ;AD_value.c: 73: const uint8_t bit_mask_for_l = 0b00000011;
  2536                           ;AD_value.c: 75: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  2537  039C  0870               	movf	bit_shift@p_adres,w
  2538  039D  0084               	movwf	4
  2539  039E  0800               	movf	0,w
  2540  039F  00F1               	movwf	??_bit_shift
  2541  03A0  01F2               	clrf	??_bit_shift+1
  2542  03A1  0875               	movf	bit_shift@p_ad_value,w
  2543  03A2  0084               	movwf	4
  2544  03A3  0871               	movf	??_bit_shift,w
  2545  03A4  0080               	movwf	0
  2546  03A5  0A84               	incf	4,f
  2547  03A6  0872               	movf	??_bit_shift+1,w
  2548  03A7  0080               	movwf	0
  2549                           
  2550                           ;AD_value.c: 76: *p_ad_value <<= 2;
  2551  03A8  0875               	movf	bit_shift@p_ad_value,w
  2552  03A9  0084               	movwf	4
  2553  03AA  3002               	movlw	2
  2554  03AB                     u665:	
  2555  03AB  1003               	clrc
  2556  03AC  0D80               	rlf	0,f
  2557  03AD  0A84               	incf	4,f
  2558  03AE  0D80               	rlf	0,f
  2559  03AF  0384               	decf	4,f
  2560  03B0  3EFF               	addlw	-1
  2561  03B1  1D03               	skipz
  2562  03B2  2BAB               	goto	u665
  2563                           
  2564                           ;AD_value.c: 77: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  2565  03B3  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  2566  03B4  0084               	movwf	4
  2567  03B5  120A  118A  2003  120A  118A  	fcall	stringdir
  2568  03BA  00F1               	movwf	??_bit_shift
  2569  03BB  0A70               	incf	bit_shift@p_adres,w
  2570  03BC  0084               	movwf	4
  2571  03BD  0800               	movf	0,w
  2572  03BE  00F2               	movwf	??_bit_shift+1
  2573  03BF  3006               	movlw	6
  2574  03C0                     u675:	
  2575  03C0  1003               	clrc
  2576  03C1  0CF2               	rrf	??_bit_shift+1,f
  2577  03C2  3EFF               	addlw	-1
  2578  03C3  1D03               	skipz
  2579  03C4  2BC0               	goto	u675
  2580  03C5  0872               	movf	??_bit_shift+1,w
  2581  03C6  0571               	andwf	??_bit_shift,w
  2582  03C7  00F3               	movwf	??_bit_shift+2
  2583  03C8  01F4               	clrf	??_bit_shift+3
  2584  03C9  0875               	movf	bit_shift@p_ad_value,w
  2585  03CA  0084               	movwf	4
  2586  03CB  0873               	movf	??_bit_shift+2,w
  2587  03CC  0480               	iorwf	0,f
  2588  03CD  0A84               	incf	4,f
  2589  03CE  0874               	movf	??_bit_shift+3,w
  2590  03CF  0480               	iorwf	0,f
  2591  03D0  0008               	return
  2592  03D1                     __end_of_bit_shift:	
  2593                           
  2594                           	psect	text12
  2595  0654                     __ptext12:	
  2596 ;; *************** function _cw_data_set *****************
  2597 ;; Defined at:
  2598 ;;		line 180 in file "system_protocol.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  p_cw_data       1    wreg     PTR struct .
  2601 ;;		 -> cw(13), 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  p_cw_data       1    5[COMMON] PTR struct .
  2604 ;;		 -> cw(13), 
  2605 ;;  i               1    0        unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0
  2617 ;;      Temps:          1       0       0       0       0
  2618 ;;      Totals:         2       0       0       0       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    1
  2622 ;; This function calls:
  2623 ;;		_uint8_data_set
  2624 ;; This function is called by:
  2625 ;;		_command
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _cw_data_set
  2631  0654                     _cw_data_set:	
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2635                           ;cw_data_set@p_cw_data stored from wreg
  2636  0654  00F5               	movwf	cw_data_set@p_cw_data
  2637                           
  2638                           ;system_protocol.c: 182: uint8_t i;
  2639                           ;system_protocol.c: 185: uint8_data_set(&(p_cw_data->power1), 2);
  2640  0655  0875               	movf	cw_data_set@p_cw_data,w
  2641  0656  00F0               	movwf	uint8_data_set@p_data
  2642  0657  3000               	movlw	0
  2643  0658  00F1               	movwf	uint8_data_set@p_data+1
  2644  0659  3002               	movlw	2
  2645  065A  00F4               	movwf	??_cw_data_set
  2646  065B  0874               	movf	??_cw_data_set,w
  2647  065C  00F2               	movwf	uint8_data_set@data_len
  2648  065D  120A  118A  22C1  120A  118A  	fcall	_uint8_data_set
  2649                           
  2650                           ;system_protocol.c: 186: uint8_data_set(&(p_cw_data->power2), 2);
  2651  0662  0875               	movf	cw_data_set@p_cw_data,w
  2652  0663  3E02               	addlw	2
  2653  0664  00F0               	movwf	uint8_data_set@p_data
  2654  0665  3000               	movlw	0
  2655  0666  00F1               	movwf	uint8_data_set@p_data+1
  2656  0667  3002               	movlw	2
  2657  0668  00F4               	movwf	??_cw_data_set
  2658  0669  0874               	movf	??_cw_data_set,w
  2659  066A  00F2               	movwf	uint8_data_set@data_len
  2660  066B  120A  118A  22C1  120A  118A  	fcall	_uint8_data_set
  2661                           
  2662                           ;system_protocol.c: 187: uint8_data_set(&(p_cw_data->power3), 2);
  2663  0670  0875               	movf	cw_data_set@p_cw_data,w
  2664  0671  3E04               	addlw	4
  2665  0672  00F0               	movwf	uint8_data_set@p_data
  2666  0673  3000               	movlw	0
  2667  0674  00F1               	movwf	uint8_data_set@p_data+1
  2668  0675  3002               	movlw	2
  2669  0676  00F4               	movwf	??_cw_data_set
  2670  0677  0874               	movf	??_cw_data_set,w
  2671  0678  00F2               	movwf	uint8_data_set@data_len
  2672  0679  120A  118A  22C1  120A  118A  	fcall	_uint8_data_set
  2673                           
  2674                           ;system_protocol.c: 188: uint8_data_set(&(p_cw_data->power4), 2);
  2675  067E  0875               	movf	cw_data_set@p_cw_data,w
  2676  067F  3E06               	addlw	6
  2677  0680  00F0               	movwf	uint8_data_set@p_data
  2678  0681  3000               	movlw	0
  2679  0682  00F1               	movwf	uint8_data_set@p_data+1
  2680  0683  3002               	movlw	2
  2681  0684  00F4               	movwf	??_cw_data_set
  2682  0685  0874               	movf	??_cw_data_set,w
  2683  0686  00F2               	movwf	uint8_data_set@data_len
  2684  0687  120A  118A  22C1  120A  118A  	fcall	_uint8_data_set
  2685                           
  2686                           ;system_protocol.c: 189: uint8_data_set(&(p_cw_data->power5), 2);
  2687  068C  0875               	movf	cw_data_set@p_cw_data,w
  2688  068D  3E08               	addlw	8
  2689  068E  00F0               	movwf	uint8_data_set@p_data
  2690  068F  3000               	movlw	0
  2691  0690  00F1               	movwf	uint8_data_set@p_data+1
  2692  0691  3002               	movlw	2
  2693  0692  00F4               	movwf	??_cw_data_set
  2694  0693  0874               	movf	??_cw_data_set,w
  2695  0694  00F2               	movwf	uint8_data_set@data_len
  2696  0695  120A  118A  22C1  120A  118A  	fcall	_uint8_data_set
  2697                           
  2698                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->temp), 2);
  2699  069A  0875               	movf	cw_data_set@p_cw_data,w
  2700  069B  3E0A               	addlw	10
  2701  069C  00F0               	movwf	uint8_data_set@p_data
  2702  069D  3000               	movlw	0
  2703  069E  00F1               	movwf	uint8_data_set@p_data+1
  2704  069F  3002               	movlw	2
  2705  06A0  00F4               	movwf	??_cw_data_set
  2706  06A1  0874               	movf	??_cw_data_set,w
  2707  06A2  00F2               	movwf	uint8_data_set@data_len
  2708  06A3  120A  118A  22C1  120A  118A  	fcall	_uint8_data_set
  2709                           
  2710                           ;system_protocol.c: 195: packet.payload[index_pos++] = 1;
  2711  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2712  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2713  06AA  0820               	movf	_index_pos,w
  2714  06AB  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2715  06AC  0084               	movwf	4
  2716  06AD  1383               	bcf	3,7	;select IRP bank0
  2717  06AE  0180               	clrf	0
  2718  06AF  0A80               	incf	0,f
  2719  06B0  3001               	movlw	1
  2720  06B1  00F4               	movwf	??_cw_data_set
  2721  06B2  0874               	movf	??_cw_data_set,w
  2722  06B3  07A0               	addwf	_index_pos,f
  2723                           
  2724                           ;system_protocol.c: 196: packet.payload[index_pos++] = cw.obc2;
  2725  06B4  0820               	movf	_index_pos,w
  2726  06B5  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2727  06B6  0084               	movwf	4
  2728  06B7  3000               	movlw	0
  2729  06B8  184D               	btfsc	_cw+12,0
  2730  06B9  3001               	movlw	1
  2731  06BA  0080               	movwf	0
  2732  06BB  3001               	movlw	1
  2733  06BC  00F4               	movwf	??_cw_data_set
  2734  06BD  0874               	movf	??_cw_data_set,w
  2735  06BE  07A0               	addwf	_index_pos,f
  2736                           
  2737                           ;system_protocol.c: 199: packet.payload[index_pos++] = 1;
  2738  06BF  0820               	movf	_index_pos,w
  2739  06C0  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2740  06C1  0084               	movwf	4
  2741  06C2  0180               	clrf	0
  2742  06C3  0A80               	incf	0,f
  2743  06C4  3001               	movlw	1
  2744  06C5  00F4               	movwf	??_cw_data_set
  2745  06C6  0874               	movf	??_cw_data_set,w
  2746  06C7  07A0               	addwf	_index_pos,f
  2747                           
  2748                           ;system_protocol.c: 200: packet.payload[index_pos++] = cw.powmcu;
  2749  06C8  0820               	movf	_index_pos,w
  2750  06C9  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2751  06CA  0084               	movwf	4
  2752  06CB  3000               	movlw	0
  2753  06CC  18CD               	btfsc	_cw+12,1
  2754  06CD  3001               	movlw	1
  2755  06CE  0080               	movwf	0
  2756  06CF  3001               	movlw	1
  2757  06D0  00F4               	movwf	??_cw_data_set
  2758  06D1  0874               	movf	??_cw_data_set,w
  2759  06D2  07A0               	addwf	_index_pos,f
  2760  06D3  0008               	return
  2761  06D4                     __end_of_cw_data_set:	
  2762                           
  2763                           	psect	text13
  2764  0212                     __ptext13:	
  2765 ;; *************** function _LED_data_set *****************
  2766 ;; Defined at:
  2767 ;;		line 60 in file "OBC1_app.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;		None               void
  2774 ;; Registers used:
  2775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2781 ;;      Params:         0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    4
  2788 ;; This function calls:
  2789 ;;		_sent_data_set
  2790 ;; This function is called by:
  2791 ;;		_command
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function _LED_data_set
  2797  0212                     _LED_data_set:	
  2798                           
  2799                           ;OBC1_app.c: 62: sent_data_set(0x01, 1, 1);
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _LED_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2803  0212  3001               	movlw	1
  2804  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2806  0215  00D4               	movwf	sent_data_set@p_data
  2807  0216  3000               	movlw	0
  2808  0217  00D5               	movwf	sent_data_set@p_data+1
  2809  0218  01D6               	clrf	sent_data_set@data_len
  2810  0219  0AD6               	incf	sent_data_set@data_len,f
  2811  021A  01D7               	clrf	sent_data_set@byte_of_data
  2812  021B  0AD7               	incf	sent_data_set@byte_of_data,f
  2813  021C  120A  118A  2578   	fcall	_sent_data_set
  2814  021F  0008               	return
  2815  0220                     __end_of_LED_data_set:	
  2816                           
  2817                           	psect	text14
  2818  0578                     __ptext14:	
  2819 ;; *************** function _sent_data_set *****************
  2820 ;; Defined at:
  2821 ;;		line 141 in file "system_protocol.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  p_data          2    6[BANK0 ] PTR void 
  2824 ;;		 -> RAM(512), 
  2825 ;;  data_len        1    8[BANK0 ] unsigned char 
  2826 ;;  byte_of_data    1    9[BANK0 ] unsigned char 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      unsigned char 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2838 ;;      Params:         0       4       0       0       0
  2839 ;;      Locals:         0       0       0       0       0
  2840 ;;      Temps:          0       5       0       0       0
  2841 ;;      Totals:         0       9       0       0       0
  2842 ;;Total ram usage:        9 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    3
  2845 ;; This function calls:
  2846 ;;		___wmul
  2847 ;;		_double_data_set
  2848 ;;		_uint16_data_set
  2849 ;;		_uint8_data_set
  2850 ;; This function is called by:
  2851 ;;		_LED_data_set
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _sent_data_set
  2857  0578                     _sent_data_set:	
  2858                           
  2859                           ;system_protocol.c: 144: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2863  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2865  057A  0857               	movf	sent_data_set@byte_of_data,w
  2866  057B  3E01               	addlw	1
  2867  057C  00F0               	movwf	___wmul@multiplier
  2868  057D  3000               	movlw	0
  2869  057E  1803               	skipnc
  2870  057F  3001               	movlw	1
  2871  0580  00F1               	movwf	___wmul@multiplier+1
  2872  0581  0856               	movf	sent_data_set@data_len,w
  2873  0582  00D8               	movwf	??_sent_data_set
  2874  0583  01D9               	clrf	??_sent_data_set+1
  2875  0584  0858               	movf	??_sent_data_set,w
  2876  0585  00F2               	movwf	___wmul@multiplicand
  2877  0586  0859               	movf	??_sent_data_set+1,w
  2878  0587  00F3               	movwf	___wmul@multiplicand+1
  2879  0588  120A  118A  22A0  120A  118A  	fcall	___wmul
  2880  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2881  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2882  058F  0820               	movf	_index_pos,w
  2883  0590  0770               	addwf	?___wmul,w
  2884  0591  00DA               	movwf	??_sent_data_set+2
  2885  0592  0871               	movf	?___wmul+1,w
  2886  0593  1803               	skipnc
  2887  0594  0A71               	incf	?___wmul+1,w
  2888  0595  00DB               	movwf	??_sent_data_set+3
  2889  0596  09DA               	comf	??_sent_data_set+2,f
  2890  0597  09DB               	comf	??_sent_data_set+3,f
  2891  0598  0ADA               	incf	??_sent_data_set+2,f
  2892  0599  1903               	skipnz
  2893  059A  0ADB               	incf	??_sent_data_set+3,f
  2894  059B  301E               	movlw	30
  2895  059C  075A               	addwf	??_sent_data_set+2,w
  2896  059D  085B               	movf	??_sent_data_set+3,w
  2897  059E  1803               	skipnc
  2898  059F  0A5B               	incf	??_sent_data_set+3,w
  2899  05A0  3E00               	addlw	0
  2900  05A1  00DC               	movwf	??_sent_data_set+4
  2901  05A2  1BDC               	btfsc	??_sent_data_set+4,7
  2902  05A3  0008               	return
  2903  05A4  2DCD               	goto	l1591
  2904  05A5                     l1583:	
  2905                           ;system_protocol.c: 151: {
  2906                           ;system_protocol.c: 152: case 1:
  2907                           
  2908                           ;system_protocol.c: 147: }
  2909                           ;system_protocol.c: 150: switch(byte_of_data)
  2910                           
  2911                           ;system_protocol.c: 145: {
  2912                           ;system_protocol.c: 146: return 0xff;
  2913                           ;	Return value of _sent_data_set is never used
  2914                           
  2915                           
  2916                           ;system_protocol.c: 153: uint8_data_set((uint8_t *)p_data, data_len);
  2917  05A5  0854               	movf	sent_data_set@p_data,w
  2918  05A6  00F0               	movwf	uint8_data_set@p_data
  2919  05A7  0855               	movf	sent_data_set@p_data+1,w
  2920  05A8  00F1               	movwf	uint8_data_set@p_data+1
  2921  05A9  0856               	movf	sent_data_set@data_len,w
  2922  05AA  00D8               	movwf	??_sent_data_set
  2923  05AB  0858               	movf	??_sent_data_set,w
  2924  05AC  00F2               	movwf	uint8_data_set@data_len
  2925  05AD  120A  118A  22C1   	fcall	_uint8_data_set
  2926                           
  2927                           ;system_protocol.c: 154: break;
  2928  05B0  0008               	return
  2929  05B1                     l1585:	
  2930                           ;system_protocol.c: 155: case 2:
  2931                           
  2932                           
  2933                           ;system_protocol.c: 156: uint16_data_set((uint16_t *)p_data, data_len);
  2934  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2935  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2936  05B3  0854               	movf	sent_data_set@p_data,w
  2937  05B4  00F6               	movwf	uint16_data_set@p_data
  2938  05B5  0855               	movf	sent_data_set@p_data+1,w
  2939  05B6  00F7               	movwf	uint16_data_set@p_data+1
  2940  05B7  0856               	movf	sent_data_set@data_len,w
  2941  05B8  00D8               	movwf	??_sent_data_set
  2942  05B9  0858               	movf	??_sent_data_set,w
  2943  05BA  00F8               	movwf	uint16_data_set@data_len
  2944  05BB  120A  118A  2408   	fcall	_uint16_data_set
  2945                           
  2946                           ;system_protocol.c: 157: break;
  2947  05BE  0008               	return
  2948  05BF                     l1587:	
  2949                           ;system_protocol.c: 158: case 4:
  2950                           
  2951                           
  2952                           ;system_protocol.c: 159: double_data_set((double *)p_data, data_len);
  2953  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2954  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2955  05C1  0854               	movf	sent_data_set@p_data,w
  2956  05C2  00FA               	movwf	double_data_set@p_data
  2957  05C3  0855               	movf	sent_data_set@p_data+1,w
  2958  05C4  00FB               	movwf	double_data_set@p_data+1
  2959  05C5  0856               	movf	sent_data_set@data_len,w
  2960  05C6  00D8               	movwf	??_sent_data_set
  2961  05C7  0858               	movf	??_sent_data_set,w
  2962  05C8  00FC               	movwf	double_data_set@data_len
  2963  05C9  120A  118A  23D1   	fcall	_double_data_set
  2964                           
  2965                           ;system_protocol.c: 163: }
  2966                           
  2967                           ;system_protocol.c: 162: return 0xff;
  2968                           ;	Return value of _sent_data_set is never used
  2969                           
  2970                           ;system_protocol.c: 161: default:
  2971                           
  2972                           ;system_protocol.c: 160: break;
  2973  05CC  0008               	return
  2974  05CD                     l1591:	
  2975  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2976  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2977  05CF  0857               	movf	sent_data_set@byte_of_data,w
  2978                           
  2979                           ; Switch size 1, requested type "space"
  2980                           ; Number of cases is 3, Range of values is 1 to 4
  2981                           ; switch strategies available:
  2982                           ; Name         Instructions Cycles
  2983                           ; simple_byte           10     6 (average)
  2984                           ; direct_byte           23    11 (fixed)
  2985                           ; jumptable            263     9 (fixed)
  2986                           ;	Chosen strategy is simple_byte
  2987  05D0  3A01               	xorlw	1	; case 1
  2988  05D1  1903               	skipnz
  2989  05D2  2DA5               	goto	l1583
  2990  05D3  3A03               	xorlw	3	; case 2
  2991  05D4  1903               	skipnz
  2992  05D5  2DB1               	goto	l1585
  2993  05D6  3A06               	xorlw	6	; case 4
  2994  05D7  1903               	skipnz
  2995  05D8  2DBF               	goto	l1587
  2996  05D9  2DDA               	goto	l243
  2997  05DA                     l243:	
  2998                           ;system_protocol.c: 166: return (uint8_t)(30 - index_pos);
  2999                           ;	Return value of _sent_data_set is never used
  3000                           
  3001  05DA  0008               	return
  3002  05DB                     __end_of_sent_data_set:	
  3003                           
  3004                           	psect	text15
  3005  02C1                     __ptext15:	
  3006 ;; *************** function _uint8_data_set *****************
  3007 ;; Defined at:
  3008 ;;		line 260 in file "system_protocol.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  p_data          2    0[COMMON] PTR unsigned char 
  3011 ;;		 -> RAM(512), cw(13), 
  3012 ;;  data_len        1    2[COMMON] unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;		None               void
  3017 ;; Registers used:
  3018 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         3       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0
  3026 ;;      Temps:          1       0       0       0       0
  3027 ;;      Totals:         4       0       0       0       0
  3028 ;;Total ram usage:        4 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_sent_data_set
  3034 ;;		_cw_data_set
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _uint8_data_set
  3040  02C1                     _uint8_data_set:	
  3041  02C1                     l1467:	
  3042                           ;system_protocol.c: 262: while(data_len)
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  3046                           
  3047  02C1  0872               	movf	uint8_data_set@data_len,w
  3048  02C2  1903               	btfsc	3,2
  3049  02C3  0008               	return
  3050                           
  3051                           ;system_protocol.c: 263: {
  3052                           ;system_protocol.c: 264: packet.payload[index_pos++] = 1;
  3053  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3054  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3055  02C6  0820               	movf	_index_pos,w
  3056  02C7  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3057  02C8  0084               	movwf	4
  3058  02C9  1383               	bcf	3,7	;select IRP bank0
  3059  02CA  0180               	clrf	0
  3060  02CB  0A80               	incf	0,f
  3061  02CC  3001               	movlw	1
  3062  02CD  00F3               	movwf	??_uint8_data_set
  3063  02CE  0873               	movf	??_uint8_data_set,w
  3064  02CF  07A0               	addwf	_index_pos,f
  3065                           
  3066                           ;system_protocol.c: 265: packet.payload[index_pos++] = *p_data++;
  3067  02D0  0870               	movf	uint8_data_set@p_data,w
  3068  02D1  0084               	movwf	4
  3069  02D2  1783               	bsf	3,7
  3070  02D3  1C71               	btfss	uint8_data_set@p_data+1,0
  3071  02D4  1383               	bcf	3,7
  3072  02D5  0800               	movf	0,w
  3073  02D6  00F3               	movwf	??_uint8_data_set
  3074  02D7  0820               	movf	_index_pos,w
  3075  02D8  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3076  02D9  0084               	movwf	4
  3077  02DA  0873               	movf	??_uint8_data_set,w
  3078  02DB  1383               	bcf	3,7	;select IRP bank0
  3079  02DC  0080               	movwf	0
  3080  02DD  3001               	movlw	1
  3081  02DE  07F0               	addwf	uint8_data_set@p_data,f
  3082  02DF  1803               	skipnc
  3083  02E0  0AF1               	incf	uint8_data_set@p_data+1,f
  3084  02E1  3000               	movlw	0
  3085  02E2  07F1               	addwf	uint8_data_set@p_data+1,f
  3086  02E3  3001               	movlw	1
  3087  02E4  00F3               	movwf	??_uint8_data_set
  3088  02E5  0873               	movf	??_uint8_data_set,w
  3089  02E6  07A0               	addwf	_index_pos,f
  3090                           
  3091                           ;system_protocol.c: 266: data_len--;
  3092  02E7  3001               	movlw	1
  3093  02E8  02F2               	subwf	uint8_data_set@data_len,f
  3094  02E9  2AC1               	goto	l1467
  3095  02EA                     __end_of_uint8_data_set:	
  3096                           
  3097                           	psect	text16
  3098  0408                     __ptext16:	
  3099 ;; *************** function _uint16_data_set *****************
  3100 ;; Defined at:
  3101 ;;		line 282 in file "system_protocol.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  p_data          2    6[COMMON] PTR unsigned int 
  3104 ;;		 -> RAM(512), 
  3105 ;;  data_len        1    8[COMMON] unsigned char 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  buf             3   10[COMMON] unsigned char [3]
  3108 ;;  i               1   13[COMMON] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;		None               void
  3111 ;; Registers used:
  3112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         3       0       0       0       0
  3119 ;;      Locals:         4       0       0       0       0
  3120 ;;      Temps:          1       0       0       0       0
  3121 ;;      Totals:         8       0       0       0       0
  3122 ;;Total ram usage:        8 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    2
  3125 ;; This function calls:
  3126 ;;		_uint16_to_byte_array
  3127 ;; This function is called by:
  3128 ;;		_sent_data_set
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _uint16_data_set
  3134  0408                     _uint16_data_set:	
  3135  0408                     l267:	
  3136                           ;system_protocol.c: 284: uint8_t buf[3];
  3137                           ;system_protocol.c: 285: uint8_t i;
  3138                           ;system_protocol.c: 287: while(data_len)
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3142                           
  3143  0408  0878               	movf	uint16_data_set@data_len,w
  3144  0409  1903               	btfsc	3,2
  3145  040A  0008               	return
  3146                           
  3147                           ;system_protocol.c: 288: {
  3148                           ;system_protocol.c: 289: uint16_to_byte_array(p_data++, buf);
  3149  040B  0876               	movf	uint16_data_set@p_data,w
  3150  040C  00F0               	movwf	uint16_to_byte_array@p_data
  3151  040D  0877               	movf	uint16_data_set@p_data+1,w
  3152  040E  00F1               	movwf	uint16_to_byte_array@p_data+1
  3153  040F  307A               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  3154  0410  00F9               	movwf	??_uint16_data_set
  3155  0411  0879               	movf	??_uint16_data_set,w
  3156  0412  00F2               	movwf	uint16_to_byte_array@p_data_array
  3157  0413  120A  118A  22EA  120A  118A  	fcall	_uint16_to_byte_array
  3158  0418  3002               	movlw	2
  3159  0419  07F6               	addwf	uint16_data_set@p_data,f
  3160  041A  1803               	skipnc
  3161  041B  0AF7               	incf	uint16_data_set@p_data+1,f
  3162  041C  3000               	movlw	0
  3163  041D  07F7               	addwf	uint16_data_set@p_data+1,f
  3164                           
  3165                           ;system_protocol.c: 291: for(i = 0; i < 3; i++)
  3166  041E  01FD               	clrf	uint16_data_set@i
  3167  041F  3003               	movlw	3
  3168  0420  027D               	subwf	uint16_data_set@i,w
  3169  0421  1803               	btfsc	3,0
  3170  0422  2C3C               	goto	l1489
  3171  0423                     l1481:	
  3172                           
  3173                           ;system_protocol.c: 292: {
  3174                           ;system_protocol.c: 293: packet.payload[index_pos++] = buf[i];
  3175  0423  087D               	movf	uint16_data_set@i,w
  3176  0424  3E7A               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  3177  0425  0084               	movwf	4
  3178  0426  0800               	movf	0,w
  3179  0427  00F9               	movwf	??_uint16_data_set
  3180  0428  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0429  1303               	bcf	3,6	;RP1=0, select bank0
  3182  042A  0820               	movf	_index_pos,w
  3183  042B  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3184  042C  0084               	movwf	4
  3185  042D  0879               	movf	??_uint16_data_set,w
  3186  042E  1383               	bcf	3,7	;select IRP bank0
  3187  042F  0080               	movwf	0
  3188  0430  3001               	movlw	1
  3189  0431  00F9               	movwf	??_uint16_data_set
  3190  0432  0879               	movf	??_uint16_data_set,w
  3191  0433  07A0               	addwf	_index_pos,f
  3192  0434  3001               	movlw	1
  3193  0435  00F9               	movwf	??_uint16_data_set
  3194  0436  0879               	movf	??_uint16_data_set,w
  3195  0437  07FD               	addwf	uint16_data_set@i,f
  3196  0438  3003               	movlw	3
  3197  0439  027D               	subwf	uint16_data_set@i,w
  3198  043A  1C03               	skipc
  3199  043B  2C23               	goto	l1481
  3200  043C                     l1489:	
  3201                           
  3202                           ;system_protocol.c: 294: }
  3203                           ;system_protocol.c: 295: data_len--;
  3204  043C  3001               	movlw	1
  3205  043D  02F8               	subwf	uint16_data_set@data_len,f
  3206  043E  2C08               	goto	l267
  3207  043F                     __end_of_uint16_data_set:	
  3208                           
  3209                           	psect	text17
  3210  02EA                     __ptext17:	
  3211 ;; *************** function _uint16_to_byte_array *****************
  3212 ;; Defined at:
  3213 ;;		line 340 in file "system_protocol.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  p_data          2    0[COMMON] PTR unsigned int 
  3216 ;;		 -> RAM(512), 
  3217 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3218 ;;		 -> uint16_data_set@buf(3), 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         3       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          3       0       0       0       0
  3233 ;;      Totals:         6       0       0       0       0
  3234 ;;Total ram usage:        6 bytes
  3235 ;; Hardware stack levels used:    2
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_uint16_data_set
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _uint16_to_byte_array
  3245  02EA                     _uint16_to_byte_array:	
  3246                           
  3247                           ;system_protocol.c: 342: const uint16_t bit_mask = 0b0000000011111111;
  3248                           ;system_protocol.c: 345: p_data_array[0] = 2;
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  3252  02EA  3002               	movlw	2
  3253  02EB  00F3               	movwf	??_uint16_to_byte_array
  3254  02EC  0872               	movf	uint16_to_byte_array@p_data_array,w
  3255  02ED  0084               	movwf	4
  3256  02EE  0873               	movf	??_uint16_to_byte_array,w
  3257  02EF  0080               	movwf	0
  3258                           
  3259                           ;system_protocol.c: 346: p_data_array[1] = (uint8_t)(*p_data >> 8);
  3260  02F0  0870               	movf	uint16_to_byte_array@p_data,w
  3261  02F1  0084               	movwf	4
  3262  02F2  1783               	bsf	3,7
  3263  02F3  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  3264  02F4  1383               	bcf	3,7
  3265  02F5  0800               	movf	0,w
  3266  02F6  00F3               	movwf	??_uint16_to_byte_array
  3267  02F7  0A84               	incf	4,f
  3268  02F8  0800               	movf	0,w
  3269  02F9  00F4               	movwf	??_uint16_to_byte_array+1
  3270  02FA  0874               	movf	??_uint16_to_byte_array+1,w
  3271  02FB  00F5               	movwf	??_uint16_to_byte_array+2
  3272  02FC  0A72               	incf	uint16_to_byte_array@p_data_array,w
  3273  02FD  0084               	movwf	4
  3274  02FE  0875               	movf	??_uint16_to_byte_array+2,w
  3275  02FF  0080               	movwf	0
  3276                           
  3277                           ;system_protocol.c: 347: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  3278  0300  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  3279  0301  0084               	movwf	4
  3280  0302  120A  118A  2003   	fcall	stringdir
  3281  0305  00F3               	movwf	??_uint16_to_byte_array
  3282  0306  0870               	movf	uint16_to_byte_array@p_data,w
  3283  0307  0084               	movwf	4
  3284  0308  1783               	bsf	3,7
  3285  0309  1C71               	btfss	uint16_to_byte_array@p_data+1,0
  3286  030A  1383               	bcf	3,7
  3287  030B  0800               	movf	0,w
  3288  030C  0573               	andwf	??_uint16_to_byte_array,w
  3289  030D  00F4               	movwf	??_uint16_to_byte_array+1
  3290  030E  0872               	movf	uint16_to_byte_array@p_data_array,w
  3291  030F  3E02               	addlw	2
  3292  0310  0084               	movwf	4
  3293  0311  0874               	movf	??_uint16_to_byte_array+1,w
  3294  0312  0080               	movwf	0
  3295  0313  0008               	return
  3296  0314                     __end_of_uint16_to_byte_array:	
  3297                           
  3298                           	psect	text18
  3299  03D1                     __ptext18:	
  3300 ;; *************** function _double_data_set *****************
  3301 ;; Defined at:
  3302 ;;		line 311 in file "system_protocol.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  p_data          2   10[COMMON] PTR 
  3305 ;;		 -> RAM(512), 
  3306 ;;  data_len        1   12[COMMON] unsigned char 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  buf             5    0[BANK0 ] unsigned char [5]
  3309 ;;  i               1    5[BANK0 ] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;		None               void
  3312 ;; Registers used:
  3313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         3       0       0       0       0
  3320 ;;      Locals:         0       6       0       0       0
  3321 ;;      Temps:          1       0       0       0       0
  3322 ;;      Totals:         4       6       0       0       0
  3323 ;;Total ram usage:       10 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    1
  3326 ;; This function calls:
  3327 ;;		_double_to_byte_array
  3328 ;; This function is called by:
  3329 ;;		_sent_data_set
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _double_data_set
  3335  03D1                     _double_data_set:	
  3336  03D1                     l275:	
  3337                           ;system_protocol.c: 313: uint8_t buf[5];
  3338                           ;system_protocol.c: 314: uint8_t i;
  3339                           ;system_protocol.c: 316: while(data_len)
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3343                           
  3344  03D1  087C               	movf	double_data_set@data_len,w
  3345  03D2  1903               	btfsc	3,2
  3346  03D3  0008               	return
  3347                           
  3348                           ;system_protocol.c: 317: {
  3349                           ;system_protocol.c: 318: double_to_byte_array(p_data++, buf);
  3350  03D4  087A               	movf	double_data_set@p_data,w
  3351  03D5  00F0               	movwf	double_to_byte_array@p_data
  3352  03D6  087B               	movf	double_data_set@p_data+1,w
  3353  03D7  00F1               	movwf	double_to_byte_array@p_data+1
  3354  03D8  304E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  3355  03D9  00FD               	movwf	??_double_data_set
  3356  03DA  087D               	movf	??_double_data_set,w
  3357  03DB  00F2               	movwf	double_to_byte_array@p_data_array
  3358  03DC  120A  118A  2314  120A  118A  	fcall	_double_to_byte_array
  3359  03E1  3003               	movlw	3
  3360  03E2  07FA               	addwf	double_data_set@p_data,f
  3361  03E3  1803               	skipnc
  3362  03E4  0AFB               	incf	double_data_set@p_data+1,f
  3363  03E5  3000               	movlw	0
  3364  03E6  07FB               	addwf	double_data_set@p_data+1,f
  3365                           
  3366                           ;system_protocol.c: 320: for(i = 0; i < 5; i++)
  3367  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  3368  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  3369  03E9  01D3               	clrf	double_data_set@i
  3370  03EA  3005               	movlw	5
  3371  03EB  0253               	subwf	double_data_set@i,w
  3372  03EC  1803               	btfsc	3,0
  3373  03ED  2C05               	goto	l1511
  3374  03EE                     l1503:	
  3375                           
  3376                           ;system_protocol.c: 321: {
  3377                           ;system_protocol.c: 322: packet.payload[index_pos++] = buf[i];
  3378  03EE  0853               	movf	double_data_set@i,w
  3379  03EF  3E4E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  3380  03F0  0084               	movwf	4
  3381  03F1  1383               	bcf	3,7	;select IRP bank0
  3382  03F2  0800               	movf	0,w
  3383  03F3  00FD               	movwf	??_double_data_set
  3384  03F4  0820               	movf	_index_pos,w
  3385  03F5  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3386  03F6  0084               	movwf	4
  3387  03F7  087D               	movf	??_double_data_set,w
  3388  03F8  0080               	movwf	0
  3389  03F9  3001               	movlw	1
  3390  03FA  00FD               	movwf	??_double_data_set
  3391  03FB  087D               	movf	??_double_data_set,w
  3392  03FC  07A0               	addwf	_index_pos,f
  3393  03FD  3001               	movlw	1
  3394  03FE  00FD               	movwf	??_double_data_set
  3395  03FF  087D               	movf	??_double_data_set,w
  3396  0400  07D3               	addwf	double_data_set@i,f
  3397  0401  3005               	movlw	5
  3398  0402  0253               	subwf	double_data_set@i,w
  3399  0403  1C03               	skipc
  3400  0404  2BEE               	goto	l1503
  3401  0405                     l1511:	
  3402                           
  3403                           ;system_protocol.c: 323: }
  3404                           ;system_protocol.c: 324: data_len--;
  3405  0405  3001               	movlw	1
  3406  0406  02FC               	subwf	double_data_set@data_len,f
  3407  0407  2BD1               	goto	l275
  3408  0408                     __end_of_double_data_set:	
  3409                           
  3410                           	psect	text19
  3411  0314                     __ptext19:	
  3412 ;; *************** function _double_to_byte_array *****************
  3413 ;; Defined at:
  3414 ;;		line 362 in file "system_protocol.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  p_data          2    0[COMMON] PTR 
  3417 ;;		 -> RAM(512), 
  3418 ;;  p_data_array    1    2[COMMON] PTR unsigned char 
  3419 ;;		 -> double_data_set@buf(5), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  converter       4    5[COMMON] struct .
  3422 ;;  i               1    9[COMMON] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         3       0       0       0       0
  3433 ;;      Locals:         5       0       0       0       0
  3434 ;;      Temps:          2       0       0       0       0
  3435 ;;      Totals:        10       0       0       0       0
  3436 ;;Total ram usage:       10 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_double_data_set
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _double_to_byte_array
  3447  0314                     _double_to_byte_array:	
  3448                           
  3449                           ;system_protocol.c: 364: uint8_t i;
  3450                           ;system_protocol.c: 365: union
  3451                           ;system_protocol.c: 366: {
  3452                           ;system_protocol.c: 367: double data;
  3453                           ;system_protocol.c: 368: uint8_t array[4];
  3454                           ;system_protocol.c: 369: } converter;
  3455                           ;system_protocol.c: 372: converter.data = *p_data;
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  3459  0314  0870               	movf	double_to_byte_array@p_data,w
  3460  0315  0084               	movwf	4
  3461  0316  1783               	bsf	3,7
  3462  0317  1C71               	btfss	double_to_byte_array@p_data+1,0
  3463  0318  1383               	bcf	3,7
  3464  0319  0800               	movf	0,w
  3465  031A  00F5               	movwf	double_to_byte_array@converter
  3466  031B  0A84               	incf	4,f
  3467  031C  0800               	movf	0,w
  3468  031D  00F6               	movwf	double_to_byte_array@converter+1
  3469  031E  0A84               	incf	4,f
  3470  031F  0800               	movf	0,w
  3471  0320  00F7               	movwf	double_to_byte_array@converter+2
  3472                           
  3473                           ;system_protocol.c: 375: p_data_array[0] = 4;
  3474  0321  3004               	movlw	4
  3475  0322  00F3               	movwf	??_double_to_byte_array
  3476  0323  0872               	movf	double_to_byte_array@p_data_array,w
  3477  0324  0084               	movwf	4
  3478  0325  0873               	movf	??_double_to_byte_array,w
  3479  0326  1383               	bcf	3,7	;select IRP bank0
  3480  0327  0080               	movwf	0
  3481                           
  3482                           ;system_protocol.c: 378: for(i = 0; i < 4; i++)
  3483  0328  01F9               	clrf	double_to_byte_array@i
  3484  0329                     L1:	
  3485  0329  3004               	movlw	4
  3486  032A  0279               	subwf	double_to_byte_array@i,w
  3487  032B  1803               	btfsc	3,0
  3488  032C  0008               	return
  3489                           
  3490                           ;system_protocol.c: 379: {
  3491                           ;system_protocol.c: 380: p_data_array[i + 1] = converter.array[i];
  3492  032D  0879               	movf	double_to_byte_array@i,w
  3493  032E  3E75               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  3494  032F  0084               	movwf	4
  3495  0330  0800               	movf	0,w
  3496  0331  00F3               	movwf	??_double_to_byte_array
  3497  0332  0879               	movf	double_to_byte_array@i,w
  3498  0333  3E01               	addlw	1
  3499  0334  0772               	addwf	double_to_byte_array@p_data_array,w
  3500  0335  00F4               	movwf	??_double_to_byte_array+1
  3501  0336  0874               	movf	??_double_to_byte_array+1,w
  3502  0337  0084               	movwf	4
  3503  0338  0873               	movf	??_double_to_byte_array,w
  3504  0339  0080               	movwf	0
  3505  033A  3001               	movlw	1
  3506  033B  00F3               	movwf	??_double_to_byte_array
  3507  033C  0873               	movf	??_double_to_byte_array,w
  3508  033D  07F9               	addwf	double_to_byte_array@i,f
  3509  033E  2B29               	goto	L1
  3510  033F                     __end_of_double_to_byte_array:	
  3511                           
  3512                           	psect	text20
  3513  02A0                     __ptext20:	
  3514 ;; *************** function ___wmul *****************
  3515 ;; Defined at:
  3516 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  multiplier      2    0[COMMON] unsigned int 
  3519 ;;  multiplicand    2    2[COMMON] unsigned int 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  product         2    4[COMMON] unsigned int 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2    0[COMMON] unsigned int 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3531 ;;      Params:         4       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0
  3534 ;;      Totals:         6       0       0       0       0
  3535 ;;Total ram usage:        6 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_sent_data_set
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function ___wmul
  3546  02A0                     ___wmul:	
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3550  02A0  01F4               	clrf	___wmul@product
  3551  02A1  01F5               	clrf	___wmul@product+1
  3552  02A2                     l1551:	
  3553  02A2  1C70               	btfss	___wmul@multiplier,0
  3554  02A3  2AAA               	goto	l467
  3555  02A4  0872               	movf	___wmul@multiplicand,w
  3556  02A5  07F4               	addwf	___wmul@product,f
  3557  02A6  1803               	skipnc
  3558  02A7  0AF5               	incf	___wmul@product+1,f
  3559  02A8  0873               	movf	___wmul@multiplicand+1,w
  3560  02A9  07F5               	addwf	___wmul@product+1,f
  3561  02AA                     l467:	
  3562  02AA  3001               	movlw	1
  3563  02AB                     u795:	
  3564  02AB  1003               	clrc
  3565  02AC  0DF2               	rlf	___wmul@multiplicand,f
  3566  02AD  0DF3               	rlf	___wmul@multiplicand+1,f
  3567  02AE  3EFF               	addlw	-1
  3568  02AF  1D03               	skipz
  3569  02B0  2AAB               	goto	u795
  3570  02B1  3001               	movlw	1
  3571  02B2                     u805:	
  3572  02B2  1003               	clrc
  3573  02B3  0CF1               	rrf	___wmul@multiplier+1,f
  3574  02B4  0CF0               	rrf	___wmul@multiplier,f
  3575  02B5  3EFF               	addlw	-1
  3576  02B6  1D03               	skipz
  3577  02B7  2AB2               	goto	u805
  3578  02B8  0870               	movf	___wmul@multiplier,w
  3579  02B9  0471               	iorwf	___wmul@multiplier+1,w
  3580  02BA  1D03               	btfss	3,2
  3581  02BB  2AA2               	goto	l1551
  3582  02BC  0875               	movf	___wmul@product+1,w
  3583  02BD  00F1               	movwf	?___wmul+1
  3584  02BE  0874               	movf	___wmul@product,w
  3585  02BF  00F0               	movwf	?___wmul
  3586  02C0  0008               	return
  3587  02C1                     __end_of___wmul:	
  3588                           
  3589                           	psect	text21
  3590  01DD                     __ptext21:	
  3591 ;; *************** function _I2Ctemp_data_set *****************
  3592 ;; Defined at:
  3593 ;;		line 66 in file "OBC1_app.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;		None               void
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3607 ;;      Params:         0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    4
  3614 ;; This function calls:
  3615 ;;		_receive_data_master
  3616 ;; This function is called by:
  3617 ;;		_command
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _I2Ctemp_data_set
  3623  01DD                     _I2Ctemp_data_set:	
  3624                           
  3625                           ;OBC1_app.c: 68: receive_data_master(OBC2);
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _I2Ctemp_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3629  01DD  3002               	movlw	2
  3630  01DE  120A  118A  21FA   	fcall	_receive_data_master
  3631  01E1  0008               	return
  3632  01E2                     __end_of_I2Ctemp_data_set:	
  3633                           
  3634                           	psect	text22
  3635  01FA                     __ptext22:	
  3636 ;; *************** function _receive_data_master *****************
  3637 ;; Defined at:
  3638 ;;		line 238 in file "system_protocol.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  destination     1    wreg     enum E1099
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  destination     1    2[BANK0 ] enum E1099
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3652 ;;      Params:         0       0       0       0       0
  3653 ;;      Locals:         0       1       0       0       0
  3654 ;;      Temps:          1       0       0       0       0
  3655 ;;      Totals:         1       1       0       0       0
  3656 ;;Total ram usage:        2 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    3
  3659 ;; This function calls:
  3660 ;;		_packet_receive_master
  3661 ;; This function is called by:
  3662 ;;		_I2Ctemp_data_set
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _receive_data_master
  3668  01FA                     _receive_data_master:	
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _receive_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3672                           ;receive_data_master@destination stored from wreg
  3673  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3674  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  3675  01FC  00D0               	movwf	receive_data_master@destination
  3676                           
  3677                           ;system_protocol.c: 240: packet_receive_master(destination, &packet);
  3678  01FD  3021               	movlw	(low (_packet| 0))& (0+255)
  3679  01FE  00FD               	movwf	??_receive_data_master
  3680  01FF  087D               	movf	??_receive_data_master,w
  3681  0200  00FB               	movwf	packet_receive_master@p_packet
  3682  0201  0850               	movf	receive_data_master@destination,w
  3683  0202  120A  118A  233F   	fcall	_packet_receive_master
  3684  0205  0008               	return
  3685  0206                     __end_of_receive_data_master:	
  3686                           
  3687                           	psect	text23
  3688  033F                     __ptext23:	
  3689 ;; *************** function _packet_receive_master *****************
  3690 ;; Defined at:
  3691 ;;		line 492 in file "system_protocol.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  destination     1    wreg     enum E1099
  3694 ;;  p_packet        1   11[COMMON] PTR struct .
  3695 ;;		 -> packet(32), 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  destination     1    1[BANK0 ] enum E1099
  3698 ;;  use_obc         1    0[BANK0 ] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;		None               void
  3701 ;; Registers used:
  3702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         1       0       0       0       0
  3709 ;;      Locals:         0       2       0       0       0
  3710 ;;      Temps:          1       0       0       0       0
  3711 ;;      Totals:         2       2       0       0       0
  3712 ;;Total ram usage:        4 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    2
  3715 ;; This function calls:
  3716 ;;		_receive_payload
  3717 ;;		_spi_master_receive
  3718 ;; This function is called by:
  3719 ;;		_receive_data_master
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _packet_receive_master
  3725  033F                     _packet_receive_master:	
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _packet_receive_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3729                           ;packet_receive_master@destination stored from wreg
  3730  033F  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0340  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0341  00CF               	movwf	packet_receive_master@destination
  3733                           
  3734                           ;system_protocol.c: 494: uint8_t use_obc = 0x00;
  3735  0342  01CE               	clrf	packet_receive_master@use_obc
  3736                           
  3737                           ;system_protocol.c: 497: use_obc = spi_master_receive(destination);
  3738  0343  084F               	movf	packet_receive_master@destination,w
  3739  0344  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  3740  0349  00FC               	movwf	??_packet_receive_master
  3741  034A  087C               	movf	??_packet_receive_master,w
  3742  034B  1283               	bcf	3,5	;RP0=0, select bank0
  3743  034C  1303               	bcf	3,6	;RP1=0, select bank0
  3744  034D  00CE               	movwf	packet_receive_master@use_obc
  3745                           
  3746                           ;system_protocol.c: 500: packet.data_type = spi_master_receive(destination);
  3747  034E  084F               	movf	packet_receive_master@destination,w
  3748  034F  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  3749  0354  00FC               	movwf	??_packet_receive_master
  3750  0355  087C               	movf	??_packet_receive_master,w
  3751  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0358  00A1               	movwf	_packet
  3754                           
  3755                           ;system_protocol.c: 503: receive_payload(destination);
  3756  0359  084F               	movf	packet_receive_master@destination,w
  3757  035A  120A  118A  243F  120A  118A  	fcall	_receive_payload
  3758                           
  3759                           ;system_protocol.c: 506: packet.data_end_command = spi_master_receive(destination);
  3760  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0361  084F               	movf	packet_receive_master@destination,w
  3763  0362  120A  118A  24BC   	fcall	_spi_master_receive
  3764  0365  00FC               	movwf	??_packet_receive_master
  3765  0366  087C               	movf	??_packet_receive_master,w
  3766  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0368  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0369  00C0               	movwf	_packet+31
  3769  036A  0008               	return
  3770  036B                     __end_of_packet_receive_master:	
  3771                           
  3772                           	psect	text24
  3773  043F                     __ptext24:	
  3774 ;; *************** function _receive_payload *****************
  3775 ;; Defined at:
  3776 ;;		line 432 in file "system_protocol.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  destination     1    wreg     enum E1099
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  destination     1   10[COMMON] enum E1099
  3781 ;;  rec_index_po    1    9[COMMON] unsigned char 
  3782 ;;  p_payload       1    8[COMMON] PTR unsigned char 
  3783 ;;		 -> packet.payload(30), packet(32), 
  3784 ;;  i               1    7[COMMON] unsigned char 
  3785 ;;  data_len        1    6[COMMON] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;		None               void
  3788 ;; Registers used:
  3789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       0       0       0       0
  3796 ;;      Locals:         5       0       0       0       0
  3797 ;;      Temps:          1       0       0       0       0
  3798 ;;      Totals:         6       0       0       0       0
  3799 ;;Total ram usage:        6 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    1
  3802 ;; This function calls:
  3803 ;;		_spi_master_receive
  3804 ;; This function is called by:
  3805 ;;		_packet_receive_master
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _receive_payload
  3811  043F                     _receive_payload:	
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in _receive_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3815                           ;receive_payload@destination stored from wreg
  3816  043F  00FA               	movwf	receive_payload@destination
  3817                           
  3818                           ;system_protocol.c: 434: uint8_t i;
  3819                           ;system_protocol.c: 435: uint8_t data_len;
  3820                           ;system_protocol.c: 436: uint8_t rec_index_pos = 0;
  3821  0440  01F9               	clrf	receive_payload@rec_index_pos
  3822                           
  3823                           ;system_protocol.c: 437: uint8_t *p_payload = packet.payload;
  3824  0441  3022               	movlw	(low ((_packet| 0+1)))& (0+255)
  3825  0442  00F5               	movwf	??_receive_payload
  3826  0443  0875               	movf	??_receive_payload,w
  3827  0444  00F8               	movwf	receive_payload@p_payload
  3828  0445                     l1445:	
  3829                           ;system_protocol.c: 440: while(index_pos != 0x00 || rec_index_pos < 30)
  3830                           
  3831  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0447  0820               	movf	_index_pos,w
  3834  0448  1903               	btfsc	3,2
  3835  0449  2C75               	goto	l1447
  3836  044A                     l1429:	
  3837                           
  3838                           ;system_protocol.c: 441: {
  3839                           ;system_protocol.c: 442: data_len = spi_master_receive(destination);
  3840  044A  087A               	movf	receive_payload@destination,w
  3841  044B  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  3842  0450  00F5               	movwf	??_receive_payload
  3843  0451  0875               	movf	??_receive_payload,w
  3844  0452  00F6               	movwf	receive_payload@data_len
  3845                           
  3846                           ;system_protocol.c: 443: rec_index_pos++;
  3847  0453  3001               	movlw	1
  3848  0454  00F5               	movwf	??_receive_payload
  3849  0455  0875               	movf	??_receive_payload,w
  3850  0456  07F9               	addwf	receive_payload@rec_index_pos,f
  3851                           
  3852                           ;system_protocol.c: 444: for(i = 0; i < data_len; i++)
  3853  0457  01F7               	clrf	receive_payload@i
  3854  0458                     l1443:	
  3855  0458  0876               	movf	receive_payload@data_len,w
  3856  0459  0277               	subwf	receive_payload@i,w
  3857  045A  1803               	btfsc	3,0
  3858  045B  2C45               	goto	l1445
  3859                           
  3860                           ;system_protocol.c: 445: {
  3861                           ;system_protocol.c: 446: *p_payload = spi_master_receive(destination);
  3862  045C  087A               	movf	receive_payload@destination,w
  3863  045D  120A  118A  24BC  120A  118A  	fcall	_spi_master_receive
  3864  0462  00F5               	movwf	??_receive_payload
  3865  0463  0878               	movf	receive_payload@p_payload,w
  3866  0464  0084               	movwf	4
  3867  0465  0875               	movf	??_receive_payload,w
  3868  0466  1383               	bcf	3,7	;select IRP bank0
  3869  0467  0080               	movwf	0
  3870                           
  3871                           ;system_protocol.c: 447: p_payload++;
  3872  0468  3001               	movlw	1
  3873  0469  00F5               	movwf	??_receive_payload
  3874  046A  0875               	movf	??_receive_payload,w
  3875  046B  07F8               	addwf	receive_payload@p_payload,f
  3876                           
  3877                           ;system_protocol.c: 448: rec_index_pos++;
  3878  046C  3001               	movlw	1
  3879  046D  00F5               	movwf	??_receive_payload
  3880  046E  0875               	movf	??_receive_payload,w
  3881  046F  07F9               	addwf	receive_payload@rec_index_pos,f
  3882  0470  3001               	movlw	1
  3883  0471  00F5               	movwf	??_receive_payload
  3884  0472  0875               	movf	??_receive_payload,w
  3885  0473  07F7               	addwf	receive_payload@i,f
  3886  0474  2C58               	goto	l1443
  3887  0475                     l1447:	
  3888  0475  301E               	movlw	30
  3889  0476  0279               	subwf	receive_payload@rec_index_pos,w
  3890  0477  1803               	btfsc	3,0
  3891  0478  0008               	return
  3892  0479  2C4A               	goto	l1429
  3893  047A                     __end_of_receive_payload:	
  3894                           
  3895                           	psect	text25
  3896  04BC                     __ptext25:	
  3897 ;; *************** function _spi_master_receive *****************
  3898 ;; Defined at:
  3899 ;;		line 82 in file "spi_master.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  destination     1    wreg     enum E1099
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  destination     1    4[COMMON] enum E1099
  3904 ;;  timeout_coun    2    2[COMMON] unsigned int 
  3905 ;;  dummy           1    1[COMMON] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      unsigned char 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         4       0       0       0       0
  3917 ;;      Temps:          1       0       0       0       0
  3918 ;;      Totals:         5       0       0       0       0
  3919 ;;Total ram usage:        5 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;;		_get_cw_data
  3926 ;;		_receive_payload
  3927 ;;		_packet_receive_master
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _spi_master_receive
  3933  04BC                     _spi_master_receive:	
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  3937                           ;spi_master_receive@destination stored from wreg
  3938  04BC  00F4               	movwf	spi_master_receive@destination
  3939                           
  3940                           ;spi_master.c: 84: uint8_t dummy;
  3941                           ;spi_master.c: 85: uint16_t timeout_counter = 1000;
  3942  04BD  30E8               	movlw	232
  3943  04BE  00F2               	movwf	spi_master_receive@timeout_counter
  3944  04BF  3003               	movlw	3
  3945  04C0  00F3               	movwf	spi_master_receive@timeout_counter+1
  3946                           
  3947                           ;spi_master.c: 88: dummy = SSPBUF;
  3948  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  3949  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  3950  04C3  0813               	movf	19,w	;volatile
  3951  04C4  00F0               	movwf	??_spi_master_receive
  3952  04C5  0870               	movf	??_spi_master_receive,w
  3953  04C6  00F1               	movwf	spi_master_receive@dummy
  3954                           
  3955                           ;spi_master.c: 91: switch(destination)
  3956  04C7  2CD1               	goto	l1353
  3957  04C8                     l96:	
  3958                           ;spi_master.c: 94: while(PORTDbits.RD2 == 0){;}
  3959                           
  3960                           ;spi_master.c: 92: {
  3961                           ;spi_master.c: 93: case OBC2:
  3962                           
  3963  04C8  1908               	btfsc	8,2	;volatile
  3964  04C9  2CE3               	goto	l1357
  3965  04CA  2CC8               	goto	l96
  3966  04CB                     l101:	
  3967                           ;spi_master.c: 97: while(PORTDbits.RD0 == 0){;}
  3968                           
  3969                           ;spi_master.c: 96: case COM:
  3970                           
  3971                           ;spi_master.c: 95: break;
  3972                           
  3973  04CB  1808               	btfsc	8,0	;volatile
  3974  04CC  2CE3               	goto	l1357
  3975  04CD  2CCB               	goto	l101
  3976  04CE                     l105:	
  3977                           ;spi_master.c: 100: while(PORTDbits.RD1 == 0){;}
  3978                           
  3979                           ;spi_master.c: 99: case POW:
  3980                           
  3981                           ;spi_master.c: 98: break;
  3982                           
  3983  04CE  1888               	btfsc	8,1	;volatile
  3984  04CF  2CE3               	goto	l1357
  3985  04D0  2CCE               	goto	l105
  3986  04D1                     l1353:	
  3987                           ;spi_master.c: 102: }
  3988                           
  3989                           ;spi_master.c: 101: break;
  3990                           
  3991  04D1  0874               	movf	spi_master_receive@destination,w
  3992                           
  3993                           ; Switch size 1, requested type "space"
  3994                           ; Number of cases is 3, Range of values is 2 to 4
  3995                           ; switch strategies available:
  3996                           ; Name         Instructions Cycles
  3997                           ; simple_byte           10     6 (average)
  3998                           ; direct_byte           20    11 (fixed)
  3999                           ; jumptable            263     9 (fixed)
  4000                           ;	Chosen strategy is simple_byte
  4001  04D2  3A02               	xorlw	2	; case 2
  4002  04D3  1903               	skipnz
  4003  04D4  2CC8               	goto	l96
  4004  04D5  3A01               	xorlw	1	; case 3
  4005  04D6  1903               	skipnz
  4006  04D7  2CCB               	goto	l101
  4007  04D8  3A07               	xorlw	7	; case 4
  4008  04D9  1903               	skipnz
  4009  04DA  2CCE               	goto	l105
  4010  04DB  2CE3               	goto	l1357
  4011                           
  4012                           ;spi_master.c: 105: switch(destination)
  4013  04DC  2CE3               	goto	l1357
  4014  04DD                     l109:	
  4015                           ;spi_master.c: 106: {
  4016                           ;spi_master.c: 107: case OBC2:
  4017                           
  4018                           
  4019                           ;spi_master.c: 108: PORTCbits.RC2 = 0;
  4020  04DD  1107               	bcf	7,2	;volatile
  4021                           
  4022                           ;spi_master.c: 109: break;
  4023  04DE  2CEE               	goto	l1359
  4024  04DF                     l111:	
  4025                           ;spi_master.c: 110: case COM:
  4026                           
  4027                           
  4028                           ;spi_master.c: 111: PORTCbits.RC0 = 0;
  4029  04DF  1007               	bcf	7,0	;volatile
  4030                           
  4031                           ;spi_master.c: 112: break;
  4032  04E0  2CEE               	goto	l1359
  4033  04E1                     l112:	
  4034                           ;spi_master.c: 113: case POW:
  4035                           
  4036                           
  4037                           ;spi_master.c: 114: PORTCbits.RC1 = 0;
  4038  04E1  1087               	bcf	7,1	;volatile
  4039                           
  4040                           ;spi_master.c: 116: }
  4041                           
  4042                           ;spi_master.c: 115: break;
  4043  04E2  2CEE               	goto	l1359
  4044  04E3                     l1357:	
  4045  04E3  0874               	movf	spi_master_receive@destination,w
  4046                           
  4047                           ; Switch size 1, requested type "space"
  4048                           ; Number of cases is 3, Range of values is 2 to 4
  4049                           ; switch strategies available:
  4050                           ; Name         Instructions Cycles
  4051                           ; simple_byte           10     6 (average)
  4052                           ; direct_byte           20    11 (fixed)
  4053                           ; jumptable            263     9 (fixed)
  4054                           ;	Chosen strategy is simple_byte
  4055  04E4  3A02               	xorlw	2	; case 2
  4056  04E5  1903               	skipnz
  4057  04E6  2CDD               	goto	l109
  4058  04E7  3A01               	xorlw	1	; case 3
  4059  04E8  1903               	skipnz
  4060  04E9  2CDF               	goto	l111
  4061  04EA  3A07               	xorlw	7	; case 4
  4062  04EB  1903               	skipnz
  4063  04EC  2CE1               	goto	l112
  4064  04ED  2CEE               	goto	l1359
  4065  04EE                     l1359:	
  4066                           
  4067                           ;spi_master.c: 120: SSPBUF = 0x00;
  4068  04EE  0193               	clrf	19	;volatile
  4069  04EF                     l1367:	
  4070                           ;spi_master.c: 123: while(SSPSTATbits.BF == 0)
  4071                           
  4072  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  4073  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  4074  04F1  1814               	btfsc	20,0	;volatile
  4075  04F2  2D0A               	goto	l1371
  4076                           
  4077                           ;spi_master.c: 124: {
  4078                           ;spi_master.c: 126: if(timeout_counter == 0)
  4079  04F3  0872               	movf	spi_master_receive@timeout_counter,w
  4080  04F4  0473               	iorwf	spi_master_receive@timeout_counter+1,w
  4081  04F5  1903               	btfsc	3,2
  4082  04F6  0008               	return
  4083                           
  4084                           ;spi_master.c: 129: }
  4085                           ;spi_master.c: 132: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4086                           
  4087                           ;spi_master.c: 127: {
  4088                           ;spi_master.c: 128: return;
  4089  04F7  2CF8               	nop2	;2 cycle nop
  4090  04F8  2CF9               	nop2	;2 cycle nop
  4091  04F9  0000               	nop
  4092                           
  4093                           ;spi_master.c: 133: timeout_counter--;
  4094  04FA  3001               	movlw	1
  4095  04FB  02F2               	subwf	spi_master_receive@timeout_counter,f
  4096  04FC  3000               	movlw	0
  4097  04FD  1C03               	skipc
  4098  04FE  03F3               	decf	spi_master_receive@timeout_counter+1,f
  4099  04FF  02F3               	subwf	spi_master_receive@timeout_counter+1,f
  4100  0500  2CEF               	goto	l1367
  4101  0501                     l119:	
  4102                           ;spi_master.c: 138: {
  4103                           ;spi_master.c: 139: case OBC2:
  4104                           
  4105                           ;spi_master.c: 134: }
  4106                           ;spi_master.c: 137: switch(destination)
  4107                           
  4108                           
  4109                           ;spi_master.c: 140: PORTCbits.RC2 = 1;
  4110  0501  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0502  1507               	bsf	7,2	;volatile
  4112                           
  4113                           ;spi_master.c: 141: break;
  4114  0503  2D15               	goto	l1373
  4115  0504                     l121:	
  4116                           ;spi_master.c: 142: case COM:
  4117                           
  4118                           
  4119                           ;spi_master.c: 143: PORTCbits.RC0 = 1;
  4120  0504  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0505  1407               	bsf	7,0	;volatile
  4122                           
  4123                           ;spi_master.c: 144: break;
  4124  0506  2D15               	goto	l1373
  4125  0507                     l122:	
  4126                           ;spi_master.c: 145: case POW:
  4127                           
  4128                           
  4129                           ;spi_master.c: 146: PORTCbits.RC1 = 1;
  4130  0507  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0508  1487               	bsf	7,1	;volatile
  4132                           
  4133                           ;spi_master.c: 148: }
  4134                           
  4135                           ;spi_master.c: 147: break;
  4136  0509  2D15               	goto	l1373
  4137  050A                     l1371:	
  4138  050A  0874               	movf	spi_master_receive@destination,w
  4139                           
  4140                           ; Switch size 1, requested type "space"
  4141                           ; Number of cases is 3, Range of values is 2 to 4
  4142                           ; switch strategies available:
  4143                           ; Name         Instructions Cycles
  4144                           ; simple_byte           10     6 (average)
  4145                           ; direct_byte           20    11 (fixed)
  4146                           ; jumptable            263     9 (fixed)
  4147                           ;	Chosen strategy is simple_byte
  4148  050B  3A02               	xorlw	2	; case 2
  4149  050C  1903               	skipnz
  4150  050D  2D01               	goto	l119
  4151  050E  3A01               	xorlw	1	; case 3
  4152  050F  1903               	skipnz
  4153  0510  2D04               	goto	l121
  4154  0511  3A07               	xorlw	7	; case 4
  4155  0512  1903               	skipnz
  4156  0513  2D07               	goto	l122
  4157  0514  2D15               	goto	l1373
  4158  0515                     l1373:	
  4159                           
  4160                           ;spi_master.c: 150: return SSPBUF;
  4161  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0516  0813               	movf	19,w	;volatile
  4163  0517  0008               	return
  4164  0518                     __end_of_spi_master_receive:	
  4165                           
  4166                           	psect	text26
  4167  01EF                     __ptext26:	
  4168 ;; *************** function _ad_con_init *****************
  4169 ;; Defined at:
  4170 ;;		line 49 in file "AD_value.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;		None               void
  4177 ;; Registers used:
  4178 ;;		wreg
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0
  4187 ;;      Totals:         0       0       0       0       0
  4188 ;;Total ram usage:        0 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _ad_con_init
  4199  01EF                     _ad_con_init:	
  4200                           
  4201                           ;AD_value.c: 52: PORTAbits.RA0 = 0;
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _ad_con_init: [wreg]
  4205  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  4206  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  4207  01F1  1005               	bcf	5,0	;volatile
  4208                           
  4209                           ;AD_value.c: 53: PORTAbits.RA3 = 0;
  4210  01F2  1185               	bcf	5,3	;volatile
  4211                           
  4212                           ;AD_value.c: 54: TRISAbits.TRISA0 = 1;
  4213  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  4214  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  4215  01F5  1405               	bsf	5,0	;volatile
  4216                           
  4217                           ;AD_value.c: 55: TRISAbits.TRISA3 = 1;
  4218  01F6  1585               	bsf	5,3	;volatile
  4219                           
  4220                           ;AD_value.c: 56: ADCON1 = 0b00000001;
  4221  01F7  3001               	movlw	1
  4222  01F8  009F               	movwf	31	;volatile
  4223  01F9  0008               	return
  4224  01FA                     __end_of_ad_con_init:	
  4225                           
  4226                           	psect	text27
  4227  0244                     __ptext27:	
  4228 ;; *************** function _MCLR_reset *****************
  4229 ;; Defined at:
  4230 ;;		line 60 in file "MCLR_reset.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  resetted_mcu    1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  resetted_mcu    1    2[COMMON] unsigned char 
  4235 ;;  nin             2    3[COMMON] PTR unsigned char 
  4236 ;;		 -> RAM(512), 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;		None               void
  4239 ;; Registers used:
  4240 ;;		wreg, fsr0l, fsr0h
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         0       0       0       0       0
  4247 ;;      Locals:         3       0       0       0       0
  4248 ;;      Temps:          2       0       0       0       0
  4249 ;;      Totals:         5       0       0       0       0
  4250 ;;Total ram usage:        5 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function _MCLR_reset
  4261  0244                     _MCLR_reset:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in _MCLR_reset: [wregfsr0]
  4265                           ;MCLR_reset@resetted_mcu stored from wreg
  4266  0244  00F2               	movwf	MCLR_reset@resetted_mcu
  4267                           
  4268                           ;MCLR_reset.c: 62: uint8_t *nin;
  4269                           ;MCLR_reset.c: 63: nin = 0x09;
  4270  0245  3009               	movlw	9
  4271  0246  00F3               	movwf	MCLR_reset@nin
  4272  0247  3000               	movlw	0
  4273  0248  00F4               	movwf	MCLR_reset@nin+1
  4274                           
  4275                           ;MCLR_reset.c: 66: *nin = resetted_mcu;
  4276  0249  0873               	movf	MCLR_reset@nin,w
  4277  024A  0084               	movwf	4
  4278  024B  1383               	bcf	3,7
  4279  024C  1874               	btfsc	MCLR_reset@nin+1,0
  4280  024D  1783               	bsf	3,7
  4281  024E  0872               	movf	MCLR_reset@resetted_mcu,w
  4282  024F  0080               	movwf	0
  4283                           
  4284                           ;MCLR_reset.c: 67: _delay((unsigned long)((10)*(20000000/4000.0)));
  4285  0250  3041               	movlw	65
  4286  0251  00F1               	movwf	??_MCLR_reset+1
  4287  0252  30EE               	movlw	238
  4288  0253  00F0               	movwf	??_MCLR_reset
  4289  0254                     u937:	
  4290  0254  0BF0               	decfsz	??_MCLR_reset,f
  4291  0255  2A54               	goto	u937
  4292  0256  0BF1               	decfsz	??_MCLR_reset+1,f
  4293  0257  2A54               	goto	u937
  4294  0258  0000               	nop
  4295                           
  4296                           ;MCLR_reset.c: 68: *nin = 0x03;
  4297  0259  0873               	movf	MCLR_reset@nin,w
  4298  025A  0084               	movwf	4
  4299  025B  1383               	bcf	3,7
  4300  025C  1874               	btfsc	MCLR_reset@nin+1,0
  4301  025D  1783               	bsf	3,7
  4302  025E  3003               	movlw	3
  4303  025F  0080               	movwf	0
  4304  0260  0008               	return
  4305  0261                     __end_of_MCLR_reset:	
  4306                           
  4307                           	psect	text28
  4308  0220                     __ptext28:	
  4309 ;; *************** function _MCLR_init *****************
  4310 ;; Defined at:
  4311 ;;		line 35 in file "MCLR_reset.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  nin             2    0[COMMON] PTR unsigned char 
  4316 ;;		 -> RAM(512), 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;		None               void
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       0       0       0       0
  4327 ;;      Locals:         2       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0
  4329 ;;      Totals:         2       0       0       0       0
  4330 ;;Total ram usage:        2 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _MCLR_init
  4341  0220                     _MCLR_init:	
  4342                           
  4343                           ;MCLR_reset.c: 37: uint8_t *nin;
  4344                           ;MCLR_reset.c: 38: nin = 0x09;
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _MCLR_init: [wregfsr0]
  4348  0220  3009               	movlw	9
  4349  0221  00F0               	movwf	MCLR_init@nin
  4350  0222  3000               	movlw	0
  4351  0223  00F1               	movwf	MCLR_init@nin+1
  4352                           
  4353                           ;MCLR_reset.c: 41: TRISEbits.TRISE1 = 0;
  4354  0224  1683               	bsf	3,5	;RP0=1, select bank1
  4355  0225  1303               	bcf	3,6	;RP1=0, select bank1
  4356  0226  1089               	bcf	9,1	;volatile
  4357                           
  4358                           ;MCLR_reset.c: 42: TRISEbits.TRISE0 = 0;
  4359  0227  1009               	bcf	9,0	;volatile
  4360                           
  4361                           ;MCLR_reset.c: 45: *nin = 0x03;
  4362  0228  0870               	movf	MCLR_init@nin,w
  4363  0229  0084               	movwf	4
  4364  022A  1383               	bcf	3,7
  4365  022B  1871               	btfsc	MCLR_init@nin+1,0
  4366  022C  1783               	bsf	3,7
  4367  022D  3003               	movlw	3
  4368  022E  0080               	movwf	0
  4369  022F  0008               	return
  4370  0230                     __end_of_MCLR_init:	
  4371  007E                     btemp	set	126	;btemp
  4372  007E                     wtemp	set	126
  4373  007E                     wtemp0	set	126
  4374  0080                     wtemp1	set	128
  4375  0082                     wtemp2	set	130
  4376  0084                     wtemp3	set	132
  4377  0086                     wtemp4	set	134
  4378  0088                     wtemp5	set	136
  4379  007F                     wtemp6	set	127
  4380  007E                     ttemp	set	126
  4381  007E                     ttemp0	set	126
  4382  0081                     ttemp1	set	129
  4383  0084                     ttemp2	set	132
  4384  0087                     ttemp3	set	135
  4385  007F                     ttemp4	set	127
  4386  007E                     ltemp	set	126
  4387  007E                     ltemp0	set	126
  4388  0082                     ltemp1	set	130
  4389  0086                     ltemp2	set	134
  4390  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    packet_receive_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    receive_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet.payload(BANK0[30]), packet(BANK0[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint16_data_set@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    MCLR_reset@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    MCLR_init@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(COMMON[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(COMMON[2]), 


Critical Paths under _main in COMMON

    _command->_get_cw_data
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set
    _sent_data_set->_double_data_set
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _I2Ctemp_data_set->_receive_data_master
    _receive_data_master->_packet_receive_master
    _packet_receive_master->_receive_payload
    _receive_payload->_spi_master_receive

Critical Paths under _main in BANK0

    _main->_command
    _send_data_master->_packet_send_master
    _LED_data_set->_sent_data_set
    _sent_data_set->_double_data_set
    _I2Ctemp_data_set->_receive_data_master
    _receive_data_master->_packet_receive_master

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8160
                                             19 BANK0      4     4      0
                          _MCLR_init
                         _MCLR_reset
                        _ad_con_init
                            _command
                 _spi_master_receive
                    _spi_master_send
                   _spi_master_start
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command                                              4     4      0    7214
                                             15 BANK0      4     4      0
                   _I2Ctemp_data_set
                       _LED_data_set
                        _cw_data_set
                        _get_cw_data
                   _send_data_master
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _send_data_master                                     4     2      2    2250
                                              1 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (3) _packet_send_master                                   3     2      1    1866
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (4) _send_payload                                         6     5      1     962
                                              6 COMMON     6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (1) _spi_master_send                                      6     5      1     697
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _get_cw_data                                          3     3      0     426
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           10     8      2     290
                                              6 COMMON     7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (5) _bit_shift                                            6     5      1     190
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _cw_data_set                                          3     3      0     947
                                              4 COMMON     2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _LED_data_set                                         0     0      0    2385
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (3) _sent_data_set                                        9     5      4    2385
                                              6 BANK0      9     5      4
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) _uint16_data_set                                      8     5      3     487
                                              6 COMMON     8     5      3
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (6) _uint16_to_byte_array                                 6     3      3     216
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (4) _double_data_set                                     10     7      3     555
                                             10 COMMON     4     1      3
                                              0 BANK0      6     6      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (5) _double_to_byte_array                                10     7      3     286
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2Ctemp_data_set                                     0     0      0     487
                _receive_data_master
 ---------------------------------------------------------------------------------
 (3) _receive_data_master                                  2     2      0     487
                                             13 COMMON     1     1      0
                                              2 BANK0      1     1      0
              _packet_receive_master
 ---------------------------------------------------------------------------------
 (4) _packet_receive_master                                4     3      1     465
                                             11 COMMON     2     1      1
                                              0 BANK0      2     2      0
                    _receive_payload
                 _spi_master_receive
 ---------------------------------------------------------------------------------
 (5) _receive_payload                                      6     6      0     231
                                              5 COMMON     6     6      0
                 _spi_master_receive
 ---------------------------------------------------------------------------------
 (1) _spi_master_receive                                   5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCLR_reset                                           5     5      0      67
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _MCLR_init                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCLR_init
   _MCLR_reset
   _ad_con_init
   _command
     _I2Ctemp_data_set
       _receive_data_master
         _packet_receive_master
           _receive_payload
             _spi_master_receive
           _spi_master_receive
     _LED_data_set
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     _cw_data_set
       _uint8_data_set
     _get_cw_data
       _get_adcon
         _bit_shift
       _spi_master_receive
       _spi_master_start
     _send_data_master
       _packet_send_master
         _send_payload
           _spi_master_send
         _spi_master_send
     _spi_master_send
   _spi_master_receive
   _spi_master_send
   _spi_master_start
   _sysprot_init
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      53       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      53      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 06 20:04:40 2016

                                   pc 0002                           __CFG_CP$OFF 0000  
                         _SSPSTATbits 0094                                    l30 0629  
                                  l33 063B                                    l71 0287  
                                  l96 04C8                ??_uint16_to_byte_array 0073  
                                  _cw 0041                                    fsr 0004  
                 ___wmul@multiplicand 0072                  __size_of_ad_con_init 000B  
                                 l101 04CB                                   l111 04DF  
                                 l112 04E1                                   l121 0504  
                                 l105 04CE                                   l122 0507  
                                 l140 0539                                   l132 0527  
                                 l109 04DD                                   l150 055E  
                                 l142 053B                                   l119 0501  
                                 l143 053D                                   l127 0524  
                                 l152 0561                                   l136 052A  
                                 l153 0564                                   l243 05DA  
                                 l275 03D1                                   l267 0408  
                                 l375 0783                                   l377 07F4  
                                 l467 02AA                      ?_receive_payload 0070  
                        __CFG_CPD$OFF 0000                                   u805 02B2  
                                 u665 03AB                                   u675 03C0  
                                 u907 064C                                   u917 078A  
                                 u927 079A                                   u937 0254  
                                 u795 02AB                                   u897 0604  
                uint8_data_set@p_data 0070                                   fsr0 0004  
                                 indf 0000           send_data_master@destination 0052  
              ??_double_to_byte_array 0073                          __CFG_FOSC$HS 0000  
                         ?_MCLR_reset 0070                           command@data 0060  
                        __CFG_LVP$OFF 0000                                  l1401 0567  
                                l1403 0572                                  l1511 0405  
                                l1503 03EE                                  l1353 04D1  
                                l1371 050A                                  l1443 0458  
                                l1373 0515                                  l1357 04E3  
                                l1429 044A                                  l1445 0445  
                                l1525 0482                                  l1367 04EF  
                                l1359 04EE                                  l1447 0475  
                                l1551 02A2                                  l1383 052D  
                                l1543 049C                                  l1481 0423  
                                l1545 047C                                  l1467 02C1  
                                l1387 053F                                  l1547 04B7  
                                l1397 054C                                  l1389 054A  
                                l1733 05FB                                  l1583 05A5  
                                l1591 05CD                                  l1489 043C  
                                l1585 05B1                                  l1681 075F  
                                l1587 05BF                                  l1693 07BF  
                                l1697 07E7                                  _RCIF 0065  
                                _TXIF 0064                          __CFG_WRT$OFF 0000  
                                _main 05DB                      ??_uint8_data_set 0073  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                                ltemp 007E                  __end_of_sysprot_init 01E7  
                                start 0000                                  ttemp 007E  
                                wtemp 007E                    __size_of_MCLR_init 0010  
       spi_master_receive@destination 0074                   _receive_data_master 01FA  
                   ??_double_data_set 007D                                 ?_main 0070  
                       __CFG_WDTE$OFF 0000                uint8_data_set@data_len 0072  
                               _RCREG 001A                                 _RCSTA 0018  
                               _SPBRG 0099                                 _TXREG 0019  
                               _TXSTA 0098                         __CFG_PWRTE$ON 0000  
                     __end_of_command 07F5                  ?_receive_data_master 0070  
    double_to_byte_array@p_data_array 0072              __end_of_send_data_master 0244  
                       ?_LED_data_set 0070                      ?_uint16_data_set 0076  
                               pclath 000A                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                    bit_shift@p_adres 0070           __size_of_spi_master_receive 005C  
                     __initialization 07F5                   __size_of_MCLR_reset 001D  
               uint16_data_set@p_data 0076                          __end_of_main 0654  
        packet_receive_master@use_obc 004E                                ??_main 0061  
                      get_cw_data@buf 004E      uint16_to_byte_array@p_data_array 0072  
      __size_of_packet_receive_master 002C         __end_of_packet_receive_master 036B  
               ??_receive_data_master 007D                     __end_of_MCLR_init 0230  
                              _ADCON0 001F                                _ADCON1 009F  
                      ??_LED_data_set 007E                                _ADRESH 001E  
                              _ADRESL 009E        spi_master_send@timeout_counter 0073  
                              _SSPBUF 0013            __end_of_packet_send_master 039B  
                __size_of_get_cw_data 0087                  __size_of_cw_data_set 0080  
                              ___wmul 02A0              __end_of_I2Ctemp_data_set 01E2  
               double_data_set@p_data 007A                                _packet 0021  
                           ??_command 005D             __size_of_spi_master_start 001F  
                    receive_payload@i 0077                 __size_of_sysprot_init 0005  
             __end_of__initialization 07FC                 send_payload@index_pos 007A  
               send_payload@p_payload 0076                        __pcstackCOMMON 0070  
       packet_receive_master@p_packet 007B                 __end_of_sent_data_set 05DB  
                 spi_master_send@data 0070                    __size_of_bit_shift 0036  
                        _sysprot_init 01E2                          ??_MCLR_reset 0070  
                  __size_of_get_adcon 0020                          MCLR_init@nin 0070  
                          __pbssBANK0 0020            uint16_to_byte_array@p_data 0070  
            __size_of_spi_master_send 0060     spi_master_receive@timeout_counter 0072  
                     _double_data_set 03D1                            __pmaintext 05DB  
        receive_payload@rec_index_pos 0079                               ?___wmul 0070  
                  __end_of_MCLR_reset 0261                         ??_ad_con_init 0070  
                __end_of_LED_data_set 0220                         ?_send_payload 0076  
       __size_of_uint16_to_byte_array 002A                    __size_of_uart_init 000C  
      receive_data_master@destination 0050         __size_of_double_to_byte_array 002B  
            __size_of_receive_payload 003B               bit_shift@bit_mask_for_l 000B  
                          __stringtab 0003                     ?_send_data_master 004F  
                  ??_send_data_master 0051                    uint16_data_set@buf 007A  
                   __end_of_bit_shift 03D1                     __end_of_get_adcon 02A0  
                     __size_of___wmul 0021               spi_master_receive@dummy 0071  
                      ??_send_payload 0077                               __ptext1 0206  
                             __ptext2 01E2                               __ptext3 075B  
                             __ptext4 0230                               __ptext5 036B  
                             __ptext6 047A                               __ptext7 0518  
                             __ptext8 06D4                               __ptext9 0261  
                             _command 075B                   __end_of_ad_con_init 01FA  
                cw_data_set@p_cw_data 0075                      _spi_master_start 0261  
                             clrloop0 01E8                  end_of_initialization 07FC  
             __end_of_double_data_set 0408                             _MCLR_init 0220  
          __end_of_spi_master_receive 0518             sent_data_set@byte_of_data 0057  
                   __end_of_uart_init 0212              __size_of_uint16_data_set 0037  
                   ??_spi_master_send 0071                      double_data_set@i 0053  
             __size_of_uint8_data_set 0029                     ?_I2Ctemp_data_set 0070  
                           _PORTAbits 0005           __end_of_receive_data_master 0206  
                  _packet_send_master 036B                             _PORTCbits 0007  
                           _PORTDbits 0008                    ??_I2Ctemp_data_set 007E  
               double_to_byte_array@i 0079                             _TRISAbits 0085  
                           _TRISCbits 0087                             _TRISDbits 0088  
                           _TRISEbits 0089                   ?_packet_send_master 007C  
               _packet_receive_master 033F                            ?_MCLR_init 0070  
                       ??_get_cw_data 007D                     ??_receive_payload 0075  
                       ??_cw_data_set 0074                 __size_of_LED_data_set 000E  
             uint16_data_set@data_len 0078                 sent_data_set@data_len 0056  
                ??_packet_send_master 007D                           _ad_con_init 01EF  
                      __end_of___wmul 02C1                         send_payload@i 0079  
          spi_master_send@destination 0075                  spi_master_send@dummy 0072  
                 start_initialization 07F5                          _LED_data_set 0212  
                    ?_double_data_set 007A                  __end_of_send_payload 04BC  
     __end_ofbit_shift@bit_mask_for_l 000C                      uint16_data_set@i 007D  
                            ??___wmul 0074                  send_payload@data_len 0078  
                 __end_of_get_cw_data 075B                   __end_of_cw_data_set 06D4  
                   ??_uint16_data_set 0079         double_to_byte_array@converter 0075  
              ?_packet_receive_master 007B                             ___latbits 0002  
                       __pcstackBANK0 004E                   sent_data_set@p_data 0054  
              __size_of_sent_data_set 0063                           ??_MCLR_init 0070  
        __end_of_uint16_to_byte_array 0314                         MCLR_reset@nin 0073  
        __end_of_double_to_byte_array 033F                             _bit_shift 039B  
            __end_of_spi_master_start 0280                        _uint8_data_set 02C1  
           __size_of_send_data_master 0014                             _get_adcon 0280  
          double_to_byte_array@p_data 0070                             __pstrings 0003  
                            ?_command 0070             send_data_master@data_type 004F  
                           _index_pos 0020                       _spi_master_send 0518  
                      ___wmul@product 0074                             clear_ram0 01E7  
                         _get_cw_data 06D4                           _cw_data_set 0654  
              __end_of_uint8_data_set 02EA                            ?_bit_shift 0070  
                           _uart_init 0206                         _sent_data_set 0578  
                          ?_get_adcon 0076                    _spi_master_receive 04BC  
                          _ADCON0bits 001F                           __stringbase 0008  
                   ___wmul@multiplier 0070                   ?_spi_master_receive 0070  
                     _receive_payload 043F                 __size_of_send_payload 0042  
           __size_of_I2Ctemp_data_set 0005              receive_payload@p_payload 0078  
                ??_spi_master_receive 0070                       ?_uint8_data_set 0070  
                          ?_uart_init 0070                        ?_sent_data_set 0054  
                        ?_ad_con_init 0070            receive_payload@destination 007A  
                  __end_of__stringtab 0009                          _send_payload 047A  
                _uint16_to_byte_array 02EA                      __size_of_command 009A  
                       ?_sysprot_init 0070               double_data_set@data_len 007C  
             __end_of_spi_master_send 0578                              __ptext10 0280  
                            __ptext11 039B                              __ptext20 02A0  
                            __ptext12 0654                              __ptext21 01DD  
                            __ptext13 0212                              __ptext22 01FA  
                            __ptext14 0578                              __ptext23 033F  
                            __ptext15 02C1                              __ptext24 043F  
                            __ptext16 0408                              __ptext25 04BC  
                            __ptext17 02EA                              __ptext26 01EF  
                            __ptext18 03D1                              __ptext27 0244  
                            __ptext19 0314                              __ptext28 0220  
        __size_of_receive_data_master 000C                  _double_to_byte_array 0314  
__end_ofuint16_to_byte_array@bit_mask 000B          uint16_to_byte_array@bit_mask 0009  
                       __size_of_main 0079                MCLR_reset@resetted_mcu 0072  
                      main@COM_status 0064                       _uint16_data_set 0408  
          packet_send_master@p_packet 007C           __size_of_packet_send_master 0030  
             receive_payload@data_len 0076                           ??_bit_shift 0071  
    packet_receive_master@destination 004F                      _send_data_master 0230  
                         ??_get_adcon 0078                 ?_uint16_to_byte_array 0070  
             ??_packet_receive_master 007C               __end_of_receive_payload 047A  
                      ??_sysprot_init 0070                            _MCLR_reset 0244  
                  double_data_set@buf 004E                 ?_double_to_byte_array 0070  
                   get_adcon@ad_value 007B                             stringcode 0003  
            __size_of_double_data_set 0037                       ??_sent_data_set 0058  
                         ??_uart_init 0070               send_payload@destination 007B  
                   ?_spi_master_start 0070                    ??_spi_master_start 0070  
                   get_adcon@my_adres 0079                              stringdir 0003  
                            stringtab 0003                      ?_spi_master_send 0070  
                    _I2Ctemp_data_set 01DD               __end_of_uint16_data_set 043F  
    send_data_master@data_end_command 0050                            _SSPCONbits 0014  
                        ?_get_cw_data 0070                          ?_cw_data_set 0070  
       packet_send_master@destination 004E                   bit_shift@p_ad_value 0075  
