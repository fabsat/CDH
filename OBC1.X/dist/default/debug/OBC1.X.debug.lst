

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Mar 15 15:29:25 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  010F                     	;# 
   344  018C                     	;# 
   345  018D                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000D                     	;# 
   360  000E                     	;# 
   361  000E                     	;# 
   362  000F                     	;# 
   363  0010                     	;# 
   364  0011                     	;# 
   365  0012                     	;# 
   366  0013                     	;# 
   367  0014                     	;# 
   368  0015                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0017                     	;# 
   372  0018                     	;# 
   373  0019                     	;# 
   374  001A                     	;# 
   375  001B                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  001D                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  0081                     	;# 
   382  0085                     	;# 
   383  0086                     	;# 
   384  0087                     	;# 
   385  0088                     	;# 
   386  0089                     	;# 
   387  008C                     	;# 
   388  008D                     	;# 
   389  008E                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0093                     	;# 
   393  0094                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  010F                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0088                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  000E                     	;# 
   482  000F                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0013                     	;# 
   487  0014                     	;# 
   488  0015                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0017                     	;# 
   492  0018                     	;# 
   493  0019                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001D                     	;# 
   499  001E                     	;# 
   500  001F                     	;# 
   501  0081                     	;# 
   502  0085                     	;# 
   503  0086                     	;# 
   504  0087                     	;# 
   505  0088                     	;# 
   506  0089                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  0000                     	;# 
   527  0001                     	;# 
   528  0002                     	;# 
   529  0003                     	;# 
   530  0004                     	;# 
   531  0005                     	;# 
   532  0006                     	;# 
   533  0007                     	;# 
   534  0008                     	;# 
   535  0009                     	;# 
   536  000A                     	;# 
   537  000B                     	;# 
   538  000C                     	;# 
   539  000D                     	;# 
   540  000E                     	;# 
   541  000E                     	;# 
   542  000F                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0013                     	;# 
   547  0014                     	;# 
   548  0015                     	;# 
   549  0015                     	;# 
   550  0016                     	;# 
   551  0017                     	;# 
   552  0018                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001B                     	;# 
   556  001B                     	;# 
   557  001C                     	;# 
   558  001D                     	;# 
   559  001E                     	;# 
   560  001F                     	;# 
   561  0081                     	;# 
   562  0085                     	;# 
   563  0086                     	;# 
   564  0087                     	;# 
   565  0088                     	;# 
   566  0089                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  0091                     	;# 
   571  0092                     	;# 
   572  0093                     	;# 
   573  0094                     	;# 
   574  0098                     	;# 
   575  0099                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  010D                     	;# 
   582  010E                     	;# 
   583  010F                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586                           
   587                           	psect	strings
   588  0800                     __pstrings:	
   589  0800                     stringtab:	
   590  0800                     __stringtab:	
   591  0800                     stringcode:	
   592                           ;	String table - string pointers are 1 byte each
   593                           
   594  0800                     stringdir:	
   595  0800  3008               	movlw	high stringdir
   596  0801  008A               	movwf	10
   597  0802  0804               	movf	4,w
   598  0803  0A84               	incf	4,f
   599  0804  0782               	addwf	2,f
   600  0805                     __stringbase:	
   601  0805  3400               	retlw	0
   602  0806                     __end_of__stringtab:	
   603  0806                     uint16_to_byte_array@bit_mask:	
   604  0806  34FF               	retlw	255
   605  0807  3400               	retlw	0
   606  0808                     __end_ofuint16_to_byte_array@bit_mask:	
   607  0808                     bit_shift@bit_mask_for_l:	
   608  0808  3403               	retlw	3
   609  0809                     __end_ofbit_shift@bit_mask_for_l:	
   610  001F                     _ADCON0	set	31
   611  001F                     _ADCON0bits	set	31
   612  001E                     _ADRESH	set	30
   613  000B                     _INTCONbits	set	11
   614  000C                     _PIR1bits	set	12
   615  0005                     _PORTAbits	set	5
   616  0007                     _PORTCbits	set	7
   617  0008                     _PORTDbits	set	8
   618  001A                     _RCREG	set	26
   619  0018                     _RCSTA	set	24
   620  0013                     _SSPBUF	set	19
   621  0014                     _SSPCONbits	set	20
   622  0019                     _TXREG	set	25
   623  0065                     _RCIF	set	101
   624  0064                     _TXIF	set	100
   625  009F                     _ADCON1	set	159
   626  009E                     _ADRESL	set	158
   627  008C                     _PIE1bits	set	140
   628  0099                     _SPBRG	set	153
   629  0094                     _SSPSTATbits	set	148
   630  0085                     _TRISAbits	set	133
   631  0087                     _TRISCbits	set	135
   632  0088                     _TRISDbits	set	136
   633  0089                     _TRISEbits	set	137
   634  0098                     _TXSTA	set	152
   635                           
   636                           ; #config settings
   637  0000                     
   638                           	psect	cinit
   639  07E9                     start_initialization:	
   640  07E9                     __initialization:	
   641                           
   642                           ; Clear objects allocated to COMMON
   643  07E9  01FA               	clrf	__pbssCOMMON& (0+127)
   644  07EA  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   645  07EB  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   646  07EC  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   647                           
   648                           ; Clear objects allocated to BANK0
   649  07ED  1383               	bcf	3,7	;select IRP bank0
   650  07EE  3057               	movlw	low __pbssBANK0
   651  07EF  0084               	movwf	4
   652  07F0  3065               	movlw	low (__pbssBANK0+14)
   653  07F1  120A  158A  26E7  120A  118A  	fcall	clear_ram0
   654                           
   655                           ; Clear objects allocated to BANK1
   656  07F6  30A0               	movlw	low __pbssBANK1
   657  07F7  0084               	movwf	4
   658  07F8  30C0               	movlw	low (__pbssBANK1+32)
   659  07F9  120A  158A  26E7   	fcall	clear_ram0
   660  07FC                     end_of_initialization:	
   661                           ;End of C runtime variable initialization code
   662                           
   663  07FC                     __end_of__initialization:	
   664  07FC  0183               	clrf	3
   665  07FD  120A  118A  2DAE   	ljmp	_main	;jump to C main() function
   666                           
   667                           	psect	bssCOMMON
   668  007A                     __pbssCOMMON:	
   669  007A                     _uart_interrupt:	
   670  007A                     	ds	2
   671  007C                     _I2CTEMP_data:	
   672  007C                     	ds	2
   673                           
   674                           	psect	bssBANK0
   675  0057                     __pbssBANK0:	
   676  0057                     _index_pos:	
   677  0057                     	ds	1
   678  0058                     _cw:	
   679  0058                     	ds	13
   680                           
   681                           	psect	bssBANK1
   682  00A0                     __pbssBANK1:	
   683  00A0                     _packet:	
   684  00A0                     	ds	32
   685                           
   686                           	psect	clrtext
   687  0EE7                     clear_ram0:	
   688                           ;	Called with FSR containing the base address, and
   689                           ;	W with the last address+1
   690                           
   691  0EE7  0064               	clrwdt	;clear the watchdog before getting into this loop
   692  0EE8                     clrloop0:	
   693  0EE8  0180               	clrf	0	;clear RAM location pointed to by FSR
   694  0EE9  0A84               	incf	4,f	;increment pointer
   695  0EEA  0604               	xorwf	4,w	;XOR with final address
   696  0EEB  1903               	btfsc	3,2	;have we reached the end yet?
   697  0EEC  3400               	retlw	0	;all done for this memory range, return
   698  0EED  0604               	xorwf	4,w	;XOR again to restore value
   699  0EEE  2EE8               	goto	clrloop0	;do the next byte
   700                           
   701                           	psect	cstackCOMMON
   702  0071                     __pcstackCOMMON:	
   703  0071                     ?_MCLR_init:	
   704  0071                     ?_sysprot_init:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0071                     ?_ad_con_init:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0071                     ?_spi_master_start:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0071                     ?_uart_init:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0071                     ?_command:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0071                     ??_getch:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0071                     ?_LED_data_set:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0071                     ?_I2Ctemp_data_set:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0071                     ?_get_uart:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0071                     ?_putch:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0071                     ?_get_cw_data:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0071                     ?_cw_data_set:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0071                     ?_getch:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0071                     ?_spi_master_receive:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0071                     ?_main:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0071                     getch@count:	
   750                           ; 2 bytes @ 0x0
   751                           
   752                           
   753                           ; 2 bytes @ 0x0
   754  0071                     	ds	2
   755  0073                     ??_get_uart:	
   756                           
   757                           ; 0 bytes @ 0x2
   758  0073                     	ds	7
   759                           
   760                           	psect	cstackBANK0
   761  0020                     __pcstackBANK0:	
   762  0020                     ??_MCLR_init:	
   763  0020                     ??_sysprot_init:	
   764                           ; 0 bytes @ 0x0
   765                           
   766  0020                     ??_ad_con_init:	
   767                           ; 0 bytes @ 0x0
   768                           
   769  0020                     ??_spi_master_start:	
   770                           ; 0 bytes @ 0x0
   771                           
   772  0020                     ??_uart_init:	
   773                           ; 0 bytes @ 0x0
   774                           
   775  0020                     ?_uint8_data_set:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0020                     ?_uint16_to_byte_array:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0020                     ?_double_to_byte_array:	
   782                           ; 0 bytes @ 0x0
   783                           
   784  0020                     ??_I2Ctemp_data_set:	
   785                           ; 0 bytes @ 0x0
   786                           
   787  0020                     ?_bit_shift:	
   788                           ; 0 bytes @ 0x0
   789                           
   790  0020                     ??_spi_master_receive:	
   791                           ; 0 bytes @ 0x0
   792                           
   793  0020                     ?_spi_master_send:	
   794                           ; 0 bytes @ 0x0
   795                           
   796  0020                     ??_putch:	
   797                           ; 0 bytes @ 0x0
   798                           
   799  0020                     ?___ftge:	
   800                           ; 0 bytes @ 0x0
   801                           
   802  0020                     ?___wmul:	
   803                           ; 1 bit 
   804                           
   805  0020                     ?___ftpack:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0020                     bit_shift@p_adres:	
   809                           ; 3 bytes @ 0x0
   810                           
   811  0020                     spi_master_send@data:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     putch@byte:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     MCLR_init@nin:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     uint8_data_set@p_data:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0020                     uint16_to_byte_array@p_data:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0020                     double_to_byte_array@p_data:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0020                     ___wmul@multiplier:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0020                     ___ftpack@arg:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0020                     ___ftge@ff1:	
   836                           ; 3 bytes @ 0x0
   837                           
   838                           
   839                           ; 3 bytes @ 0x0
   840  0020                     	ds	1
   841  0021                     ??_bit_shift:	
   842  0021                     ??_spi_master_send:	
   843                           ; 0 bytes @ 0x1
   844                           
   845  0021                     spi_master_receive@dummy:	
   846                           ; 0 bytes @ 0x1
   847                           
   848                           
   849                           ; 1 bytes @ 0x1
   850  0021                     	ds	1
   851  0022                     spi_master_send@dummy:	
   852  0022                     uint8_data_set@data_len:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0022                     uint16_to_byte_array@p_data_array:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0022                     double_to_byte_array@p_data_array:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0022                     spi_master_receive@timeout_counter:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0022                     ___wmul@multiplicand:	
   865                           ; 2 bytes @ 0x2
   866                           
   867                           
   868                           ; 2 bytes @ 0x2
   869  0022                     	ds	1
   870  0023                     ??_uint8_data_set:	
   871  0023                     ??_uint16_to_byte_array:	
   872                           ; 0 bytes @ 0x3
   873                           
   874  0023                     ??_double_to_byte_array:	
   875                           ; 0 bytes @ 0x3
   876                           
   877  0023                     ___ftpack@exp:	
   878                           ; 0 bytes @ 0x3
   879                           
   880  0023                     spi_master_send@timeout_counter:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0023                     ___ftge@ff2:	
   884                           ; 2 bytes @ 0x3
   885                           
   886                           
   887                           ; 3 bytes @ 0x3
   888  0023                     	ds	1
   889  0024                     ??_cw_data_set:	
   890  0024                     ??___wmul:	
   891                           ; 0 bytes @ 0x4
   892                           
   893  0024                     spi_master_receive@destination:	
   894                           ; 0 bytes @ 0x4
   895                           
   896  0024                     ___ftpack@sign:	
   897                           ; 1 bytes @ 0x4
   898                           
   899  0024                     ___wmul@product:	
   900                           ; 1 bytes @ 0x4
   901                           
   902                           
   903                           ; 2 bytes @ 0x4
   904  0024                     	ds	1
   905  0025                     ??___ftpack:	
   906  0025                     bit_shift@p_ad_value:	
   907                           ; 0 bytes @ 0x5
   908                           
   909  0025                     spi_master_send@destination:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0025                     cw_data_set@p_cw_data:	
   913                           ; 1 bytes @ 0x5
   914                           
   915  0025                     double_to_byte_array@converter:	
   916                           ; 1 bytes @ 0x5
   917                           
   918                           
   919                           ; 4 bytes @ 0x5
   920  0025                     	ds	1
   921  0026                     ?_uint16_data_set:	
   922  0026                     ??___ftge:	
   923                           ; 0 bytes @ 0x6
   924                           
   925  0026                     ?_send_payload:	
   926                           ; 0 bytes @ 0x6
   927                           
   928  0026                     ?_get_adcon:	
   929                           ; 1 bytes @ 0x6
   930                           
   931  0026                     send_payload@p_payload:	
   932                           ; 2 bytes @ 0x6
   933                           
   934  0026                     uint16_data_set@p_data:	
   935                           ; 1 bytes @ 0x6
   936                           
   937                           
   938                           ; 2 bytes @ 0x6
   939  0026                     	ds	1
   940  0027                     ??_send_payload:	
   941                           
   942                           ; 0 bytes @ 0x7
   943  0027                     	ds	1
   944  0028                     ??_get_adcon:	
   945  0028                     ?___altoft:	
   946                           ; 0 bytes @ 0x8
   947                           
   948  0028                     uint16_data_set@data_len:	
   949                           ; 3 bytes @ 0x8
   950                           
   951  0028                     send_payload@data_len:	
   952                           ; 1 bytes @ 0x8
   953                           
   954  0028                     ___altoft@c:	
   955                           ; 1 bytes @ 0x8
   956                           
   957                           
   958                           ; 4 bytes @ 0x8
   959  0028                     	ds	1
   960  0029                     ??_uint16_data_set:	
   961  0029                     double_to_byte_array@i:	
   962                           ; 0 bytes @ 0x9
   963                           
   964  0029                     send_payload@i:	
   965                           ; 1 bytes @ 0x9
   966                           
   967  0029                     get_adcon@my_adres:	
   968                           ; 1 bytes @ 0x9
   969                           
   970                           
   971                           ; 2 bytes @ 0x9
   972  0029                     	ds	1
   973  002A                     ?_double_data_set:	
   974  002A                     send_payload@index_pos:	
   975                           ; 0 bytes @ 0xA
   976                           
   977  002A                     double_data_set@p_data:	
   978                           ; 1 bytes @ 0xA
   979                           
   980  002A                     uint16_data_set@buf:	
   981                           ; 2 bytes @ 0xA
   982                           
   983                           
   984                           ; 3 bytes @ 0xA
   985  002A                     	ds	1
   986  002B                     send_payload@destination:	
   987  002B                     get_adcon@ad_value:	
   988                           ; 1 bytes @ 0xB
   989                           
   990                           
   991                           ; 2 bytes @ 0xB
   992  002B                     	ds	1
   993  002C                     ?_packet_send_master:	
   994  002C                     ??___altoft:	
   995                           ; 0 bytes @ 0xC
   996                           
   997  002C                     double_data_set@data_len:	
   998                           ; 0 bytes @ 0xC
   999                           
  1000  002C                     packet_send_master@p_packet:	
  1001                           ; 1 bytes @ 0xC
  1002                           
  1003                           
  1004                           ; 1 bytes @ 0xC
  1005  002C                     	ds	1
  1006  002D                     ??_double_data_set:	
  1007  002D                     ??_packet_send_master:	
  1008                           ; 0 bytes @ 0xD
  1009                           
  1010  002D                     ??_get_cw_data:	
  1011                           ; 0 bytes @ 0xD
  1012                           
  1013  002D                     uint16_data_set@i:	
  1014                           ; 0 bytes @ 0xD
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0xD
  1018  002D                     	ds	1
  1019  002E                     packet_send_master@destination:	
  1020  002E                     ___altoft@exp:	
  1021                           ; 1 bytes @ 0xE
  1022                           
  1023  002E                     get_cw_data@buf:	
  1024                           ; 1 bytes @ 0xE
  1025                           
  1026  002E                     double_data_set@buf:	
  1027                           ; 2 bytes @ 0xE
  1028                           
  1029                           
  1030                           ; 5 bytes @ 0xE
  1031  002E                     	ds	1
  1032  002F                     ?_send_data_master:	
  1033  002F                     send_data_master@data_type:	
  1034                           ; 0 bytes @ 0xF
  1035                           
  1036  002F                     ___altoft@sign:	
  1037                           ; 1 bytes @ 0xF
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0xF
  1041  002F                     	ds	1
  1042  0030                     ?___ftdiv:	
  1043  0030                     send_data_master@data_end_command:	
  1044                           ; 3 bytes @ 0x10
  1045                           
  1046  0030                     ___ftdiv@f2:	
  1047                           ; 1 bytes @ 0x10
  1048                           
  1049                           
  1050                           ; 3 bytes @ 0x10
  1051  0030                     	ds	1
  1052  0031                     ??_send_data_master:	
  1053                           
  1054                           ; 0 bytes @ 0x11
  1055  0031                     	ds	1
  1056  0032                     send_data_master@destination:	
  1057                           
  1058                           ; 1 bytes @ 0x12
  1059  0032                     	ds	1
  1060  0033                     double_data_set@i:	
  1061  0033                     ___ftdiv@f1:	
  1062                           ; 1 bytes @ 0x13
  1063                           
  1064                           
  1065                           ; 3 bytes @ 0x13
  1066  0033                     	ds	1
  1067  0034                     ?_sent_data_set:	
  1068  0034                     sent_data_set@p_data:	
  1069                           ; 1 bytes @ 0x14
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x14
  1073  0034                     	ds	2
  1074  0036                     ??___ftdiv:	
  1075  0036                     sent_data_set@data_len:	
  1076                           ; 0 bytes @ 0x16
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x16
  1080  0036                     	ds	1
  1081  0037                     sent_data_set@byte_of_data:	
  1082                           
  1083                           ; 1 bytes @ 0x17
  1084  0037                     	ds	1
  1085  0038                     ??_sent_data_set:	
  1086                           
  1087                           ; 0 bytes @ 0x18
  1088  0038                     	ds	2
  1089  003A                     ___ftdiv@cntr:	
  1090                           
  1091                           ; 1 bytes @ 0x1A
  1092  003A                     	ds	1
  1093  003B                     ___ftdiv@f3:	
  1094                           
  1095                           ; 3 bytes @ 0x1B
  1096  003B                     	ds	2
  1097  003D                     ??_LED_data_set:	
  1098                           
  1099                           ; 0 bytes @ 0x1D
  1100  003D                     	ds	1
  1101  003E                     ___ftdiv@exp:	
  1102                           
  1103                           ; 1 bytes @ 0x1E
  1104  003E                     	ds	1
  1105  003F                     ___ftdiv@sign:	
  1106                           
  1107                           ; 1 bytes @ 0x1F
  1108  003F                     	ds	1
  1109  0040                     ??_command:	
  1110                           
  1111                           ; 0 bytes @ 0x20
  1112  0040                     	ds	4
  1113  0044                     command@data:	
  1114                           
  1115                           ; 1 bytes @ 0x24
  1116  0044                     	ds	1
  1117  0045                     command@temp:	
  1118                           
  1119                           ; 3 bytes @ 0x25
  1120  0045                     	ds	3
  1121  0048                     command@t:	
  1122                           
  1123                           ; 4 bytes @ 0x28
  1124  0048                     	ds	4
  1125  004C                     ??_main:	
  1126                           
  1127                           ; 0 bytes @ 0x2C
  1128  004C                     	ds	4
  1129  0050                     main@temp:	
  1130                           
  1131                           ; 3 bytes @ 0x30
  1132  0050                     	ds	3
  1133  0053                     main@t:	
  1134                           
  1135                           ; 4 bytes @ 0x33
  1136  0053                     	ds	4
  1137                           
  1138                           	psect	maintext
  1139  05AE                     __pmaintext:	
  1140 ;;
  1141 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1142 ;;
  1143 ;; *************** function _main *****************
  1144 ;; Defined at:
  1145 ;;		line 29 in file "OBC1_main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  t               4   51[BANK0 ] long 
  1150 ;;  temp            3   48[BANK0 ] long 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2   34[None  ] int 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : B00/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       7       0       0       0
  1162 ;;      Temps:          0       4       0       0       0
  1163 ;;      Totals:         0      11       0       0       0
  1164 ;;Total ram usage:       11 bytes
  1165 ;; Hardware stack levels required when called:    7
  1166 ;; This function calls:
  1167 ;;		_MCLR_init
  1168 ;;		___altoft
  1169 ;;		___ftdiv
  1170 ;;		_ad_con_init
  1171 ;;		_command
  1172 ;;		_spi_master_start
  1173 ;;		_sysprot_init
  1174 ;;		_uart_init
  1175 ;; This function is called by:
  1176 ;;		Startup code after reset
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _main
  1182  05AE                     _main:	
  1183                           
  1184                           ;OBC1_main.c: 33: TRISDbits.TRISD7 = 0;
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1188  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  1189  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  1190  05B0  1388               	bcf	8,7	;volatile
  1191                           
  1192                           ;OBC1_main.c: 34: PORTDbits.RD7 = 0;
  1193  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1194  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1195  05B3  1388               	bcf	8,7	;volatile
  1196                           
  1197                           ;OBC1_main.c: 35: TRISDbits.TRISD6 = 0;
  1198  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1199  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1200  05B6  1308               	bcf	8,6	;volatile
  1201                           
  1202                           ;OBC1_main.c: 36: PORTDbits.RD6 = 0;
  1203  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1204  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1205  05B9  1308               	bcf	8,6	;volatile
  1206                           
  1207                           ;OBC1_main.c: 39: TRISDbits.TRISD2 = 0;
  1208  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1209  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1210  05BC  1108               	bcf	8,2	;volatile
  1211                           
  1212                           ;OBC1_main.c: 40: PORTDbits.RD2 = 1;
  1213  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1214  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1215  05BF  1508               	bsf	8,2	;volatile
  1216                           
  1217                           ;OBC1_main.c: 43: MCLR_init();
  1218  05C0  120A  158A  2714  120A  118A  	fcall	_MCLR_init
  1219                           
  1220                           ;OBC1_main.c: 44: sysprot_init();
  1221  05C5  120A  158A  26DA  120A  118A  	fcall	_sysprot_init
  1222                           
  1223                           ;OBC1_main.c: 45: ad_con_init();
  1224  05CA  120A  158A  26EF  120A  118A  	fcall	_ad_con_init
  1225                           
  1226                           ;OBC1_main.c: 46: spi_master_start();
  1227  05CF  120A  158A  2744  120A  118A  	fcall	_spi_master_start
  1228                           
  1229                           ;OBC1_main.c: 47: uart_init();
  1230  05D4  120A  158A  26FA  120A  118A  	fcall	_uart_init
  1231                           
  1232                           ;OBC1_main.c: 48: uart_interrupt = 0;
  1233  05D9  01FA               	clrf	_uart_interrupt
  1234  05DA  01FB               	clrf	_uart_interrupt+1
  1235                           
  1236                           ;OBC1_main.c: 49: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1237  05DB  301A               	movlw	26
  1238  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1239  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1240  05DE  00CE               	movwf	??_main+2
  1241  05DF  305E               	movlw	94
  1242  05E0  00CD               	movwf	??_main+1
  1243  05E1  3086               	movlw	134
  1244  05E2  00CC               	movwf	??_main
  1245  05E3                     u1577:	
  1246  05E3  0BCC               	decfsz	??_main,f
  1247  05E4  2DE3               	goto	u1577
  1248  05E5  0BCD               	decfsz	??_main+1,f
  1249  05E6  2DE3               	goto	u1577
  1250  05E7  0BCE               	decfsz	??_main+2,f
  1251  05E8  2DE3               	goto	u1577
  1252  05E9  0000               	nop
  1253  05EA                     l2117:	
  1254                           ;OBC1_main.c: 53: while(1)
  1255                           
  1256                           
  1257                           ;OBC1_main.c: 54: {
  1258                           ;OBC1_main.c: 55: PORTDbits.RD7 = 1;
  1259  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1260  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1261  05EC  1788               	bsf	8,7	;volatile
  1262                           
  1263                           ;OBC1_main.c: 56: _delay((unsigned long)((100)*(20000000/4000.0)));
  1264  05ED  3003               	movlw	3
  1265  05EE  00CE               	movwf	??_main+2
  1266  05EF  308A               	movlw	138
  1267  05F0  00CD               	movwf	??_main+1
  1268  05F1  3056               	movlw	86
  1269  05F2  00CC               	movwf	??_main
  1270  05F3                     u1587:	
  1271  05F3  0BCC               	decfsz	??_main,f
  1272  05F4  2DF3               	goto	u1587
  1273  05F5  0BCD               	decfsz	??_main+1,f
  1274  05F6  2DF3               	goto	u1587
  1275  05F7  0BCE               	decfsz	??_main+2,f
  1276  05F8  2DF3               	goto	u1587
  1277  05F9  2DFA               	nop2
  1278                           
  1279                           ;OBC1_main.c: 66: command(0x02);
  1280  05FA  3002               	movlw	2
  1281  05FB  120A  118A  2677  120A  118A  	fcall	_command
  1282                           
  1283                           ;OBC1_main.c: 68: long t;
  1284                           ;OBC1_main.c: 69: double temp = 0.0;
  1285  0600  3000               	movlw	0
  1286  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0603  00D0               	movwf	main@temp
  1289  0604  3000               	movlw	0
  1290  0605  00D1               	movwf	main@temp+1
  1291  0606  3000               	movlw	0
  1292  0607  00D2               	movwf	main@temp+2
  1293                           
  1294                           ;OBC1_main.c: 70: t = (cw.temp[0] << 8) | cw.temp[1];
  1295  0608  0863               	movf	_cw+11,w
  1296  0609  00CC               	movwf	??_main
  1297  060A  01CD               	clrf	??_main+1
  1298  060B  0862               	movf	_cw+10,w
  1299  060C  00CE               	movwf	??_main+2
  1300  060D  01CF               	clrf	??_main+3
  1301  060E  084E               	movf	??_main+2,w
  1302  060F  00CF               	movwf	??_main+3
  1303  0610  01CE               	clrf	??_main+2
  1304  0611  084C               	movf	??_main,w
  1305  0612  044E               	iorwf	??_main+2,w
  1306  0613  00D3               	movwf	main@t
  1307  0614  084D               	movf	??_main+1,w
  1308  0615  044F               	iorwf	??_main+3,w
  1309  0616  00D4               	movwf	main@t+1
  1310  0617  01D5               	clrf	main@t+2
  1311  0618  1BD4               	btfsc	main@t+1,7
  1312  0619  03D5               	decf	main@t+2,f
  1313  061A  0855               	movf	main@t+2,w
  1314  061B  00D6               	movwf	main@t+3
  1315                           
  1316                           ;OBC1_main.c: 71: if (t < 0) t = t - 65536;
  1317  061C  1FD6               	btfss	main@t+3,7
  1318  061D  2E40               	goto	l2131
  1319  061E  3000               	movlw	0
  1320  061F  00CC               	movwf	??_main
  1321  0620  3000               	movlw	0
  1322  0621  00CD               	movwf	??_main+1
  1323  0622  30FF               	movlw	255
  1324  0623  00CE               	movwf	??_main+2
  1325  0624  30FF               	movlw	255
  1326  0625  00CF               	movwf	??_main+3
  1327  0626  0853               	movf	main@t,w
  1328  0627  07CC               	addwf	??_main,f
  1329  0628  0854               	movf	main@t+1,w
  1330  0629  1803               	skipnc
  1331  062A  0F54               	incfsz	main@t+1,w
  1332  062B  2E2D               	goto	u1500
  1333  062C  2E2E               	goto	u1501
  1334  062D                     u1500:	
  1335  062D  07CD               	addwf	??_main+1,f
  1336  062E                     u1501:	
  1337  062E  0855               	movf	main@t+2,w
  1338  062F  1803               	skipnc
  1339  0630  0F55               	incfsz	main@t+2,w
  1340  0631  2E33               	goto	u1502
  1341  0632  2E34               	goto	u1503
  1342  0633                     u1502:	
  1343  0633  07CE               	addwf	??_main+2,f
  1344  0634                     u1503:	
  1345  0634  0856               	movf	main@t+3,w
  1346  0635  1803               	skipnc
  1347  0636  0A56               	incf	main@t+3,w
  1348  0637  07CF               	addwf	??_main+3,f
  1349  0638  084F               	movf	??_main+3,w
  1350  0639  00D6               	movwf	main@t+3
  1351  063A  084E               	movf	??_main+2,w
  1352  063B  00D5               	movwf	main@t+2
  1353  063C  084D               	movf	??_main+1,w
  1354  063D  00D4               	movwf	main@t+1
  1355  063E  084C               	movf	??_main,w
  1356  063F  00D3               	movwf	main@t
  1357  0640                     l2131:	
  1358                           
  1359                           ;OBC1_main.c: 72: temp = (double)t / 128.0;
  1360  0640  3000               	movlw	0
  1361  0641  00B0               	movwf	___ftdiv@f2
  1362  0642  3000               	movlw	0
  1363  0643  00B1               	movwf	___ftdiv@f2+1
  1364  0644  3043               	movlw	67
  1365  0645  00B2               	movwf	___ftdiv@f2+2
  1366  0646  0856               	movf	main@t+3,w
  1367  0647  00AB               	movwf	___altoft@c+3
  1368  0648  0855               	movf	main@t+2,w
  1369  0649  00AA               	movwf	___altoft@c+2
  1370  064A  0854               	movf	main@t+1,w
  1371  064B  00A9               	movwf	___altoft@c+1
  1372  064C  0853               	movf	main@t,w
  1373  064D  00A8               	movwf	___altoft@c
  1374  064E  120A  118A  2145  120A  118A  	fcall	___altoft
  1375  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0655  0828               	movf	?___altoft,w
  1378  0656  00B3               	movwf	___ftdiv@f1
  1379  0657  0829               	movf	?___altoft+1,w
  1380  0658  00B4               	movwf	___ftdiv@f1+1
  1381  0659  082A               	movf	?___altoft+2,w
  1382  065A  00B5               	movwf	___ftdiv@f1+2
  1383  065B  120A  118A  24F6  120A  118A  	fcall	___ftdiv
  1384  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0662  0830               	movf	?___ftdiv,w
  1387  0663  00D0               	movwf	main@temp
  1388  0664  0831               	movf	?___ftdiv+1,w
  1389  0665  00D1               	movwf	main@temp+1
  1390  0666  0832               	movf	?___ftdiv+2,w
  1391  0667  00D2               	movwf	main@temp+2
  1392                           
  1393                           ;OBC1_main.c: 74: PORTDbits.RD7 = 0;
  1394  0668  1388               	bcf	8,7	;volatile
  1395                           
  1396                           ;OBC1_main.c: 75: _delay((unsigned long)((100)*(20000000/4000.0)));
  1397  0669  3003               	movlw	3
  1398  066A  00CE               	movwf	??_main+2
  1399  066B  308A               	movlw	138
  1400  066C  00CD               	movwf	??_main+1
  1401  066D  3056               	movlw	86
  1402  066E  00CC               	movwf	??_main
  1403  066F                     u1597:	
  1404  066F  0BCC               	decfsz	??_main,f
  1405  0670  2E6F               	goto	u1597
  1406  0671  0BCD               	decfsz	??_main+1,f
  1407  0672  2E6F               	goto	u1597
  1408  0673  0BCE               	decfsz	??_main+2,f
  1409  0674  2E6F               	goto	u1597
  1410  0675  2E76               	nop2
  1411  0676  2DEA               	goto	l2117
  1412  0677                     __end_of_main:	
  1413                           ;OBC1_main.c: 76: }
  1414                           ;OBC1_main.c: 78: return 0;
  1415                           ;	Return value of _main is never used
  1416                           
  1417                           
  1418                           	psect	text1
  1419  0EFA                     __ptext1:	
  1420 ;; *************** function _uart_init *****************
  1421 ;; Defined at:
  1422 ;;		line 34 in file "uart_serial.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;		None               void
  1429 ;; Registers used:
  1430 ;;		wreg
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    2
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _uart_init
  1452  0EFA                     _uart_init:	
  1453                           
  1454                           ;uart_serial.c: 36: TRISCbits.TRISC7 = 1;
  1455                           
  1456                           ;incstack = 0
  1457                           ; Regs used in _uart_init: [wreg]
  1458  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0EFC  1787               	bsf	7,7	;volatile
  1461                           
  1462                           ;uart_serial.c: 37: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1463  0EFD  3081               	movlw	129
  1464  0EFE  0099               	movwf	25	;volatile
  1465                           
  1466                           ;uart_serial.c: 38: TXSTA = (0x00 | 0x04 | 0x20);
  1467  0EFF  3024               	movlw	36
  1468  0F00  0098               	movwf	24	;volatile
  1469                           
  1470                           ;uart_serial.c: 39: RCSTA = (0x00 | 0x90);
  1471  0F01  3090               	movlw	144
  1472  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0F04  0098               	movwf	24	;volatile
  1475  0F05  0008               	return
  1476  0F06                     __end_of_uart_init:	
  1477                           
  1478                           	psect	text2
  1479  0EDA                     __ptext2:	
  1480 ;; *************** function _sysprot_init *****************
  1481 ;; Defined at:
  1482 ;;		line 85 in file "system_protocol.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;		None               void
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    2
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _sysprot_init
  1512  0EDA                     _sysprot_init:	
  1513                           
  1514                           ;system_protocol.c: 87: TRISDbits.TRISD0 = 1;
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _sysprot_init: []
  1518  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0EDC  1408               	bsf	8,0	;volatile
  1521                           
  1522                           ;system_protocol.c: 88: TRISDbits.TRISD1 = 1;
  1523  0EDD  1488               	bsf	8,1	;volatile
  1524  0EDE  0008               	return
  1525  0EDF                     __end_of_sysprot_init:	
  1526                           
  1527                           	psect	text3
  1528  0677                     __ptext3:	
  1529 ;; *************** function _command *****************
  1530 ;; Defined at:
  1531 ;;		line 52 in file "OBC1_app.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  data            1    wreg     unsigned char 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  data            1   36[BANK0 ] unsigned char 
  1536 ;;  t               4   40[BANK0 ] long 
  1537 ;;  temp            3   37[BANK0 ] long 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;		None               void
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       8       0       0       0
  1549 ;;      Temps:          0       4       0       0       0
  1550 ;;      Totals:         0      12       0       0       0
  1551 ;;Total ram usage:       12 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    6
  1554 ;; This function calls:
  1555 ;;		_I2Ctemp_data_set
  1556 ;;		_LED_data_set
  1557 ;;		___altoft
  1558 ;;		___ftdiv
  1559 ;;		___ftge
  1560 ;;		_cw_data_set
  1561 ;;		_get_cw_data
  1562 ;;		_putch
  1563 ;;		_send_data_master
  1564 ;;		_sent_data_set
  1565 ;;		_spi_master_send
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _command
  1573  0677                     _command:	
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1577                           ;command@data stored from wreg
  1578  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0679  00C4               	movwf	command@data
  1581                           
  1582                           ;OBC1_app.c: 54: switch(data)
  1583  067A  2FDB               	goto	l2053
  1584  067B                     l1999:	
  1585                           ;OBC1_app.c: 55: {
  1586                           ;OBC1_app.c: 56: case (0x03):
  1587                           
  1588                           
  1589                           ;OBC1_app.c: 57: get_cw_data();
  1590  067B  120A  118A  23E3  120A  118A  	fcall	_get_cw_data
  1591                           
  1592                           ;OBC1_app.c: 58: cw_data_set(&cw);
  1593  0680  3058               	movlw	(low (_cw| 0))& (0+255)
  1594  0681  120A  118A  246A  120A  118A  	fcall	_cw_data_set
  1595                           
  1596                           ;OBC1_app.c: 59: spi_master_send(COM, 0x11);
  1597  0686  3011               	movlw	17
  1598  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0689  00C0               	movwf	??_command
  1601  068A  0840               	movf	??_command,w
  1602  068B  00A0               	movwf	spi_master_send@data
  1603  068C  3003               	movlw	3
  1604  068D  120A  118A  2263  120A  118A  	fcall	_spi_master_send
  1605                           
  1606                           ;OBC1_app.c: 60: send_data_master(COM, 0x01, DATA_END);
  1607  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0694  01AF               	clrf	send_data_master@data_type
  1610  0695  0AAF               	incf	send_data_master@data_type,f
  1611  0696  3010               	movlw	16
  1612  0697  00C0               	movwf	??_command
  1613  0698  0840               	movf	??_command,w
  1614  0699  00B0               	movwf	send_data_master@data_end_command
  1615  069A  3003               	movlw	3
  1616  069B  120A  158A  2728   	fcall	_send_data_master
  1617                           
  1618                           ;OBC1_app.c: 61: break;
  1619  069E  0008               	return
  1620  069F                     l398:	
  1621                           ;OBC1_app.c: 63: case (0x01):
  1622                           
  1623                           
  1624                           ;OBC1_app.c: 64: PORTDbits.RD6 = 1;
  1625  069F  1708               	bsf	8,6	;volatile
  1626                           
  1627                           ;OBC1_app.c: 65: _delay((unsigned long)((100)*(20000000/4000.0)));
  1628  06A0  3003               	movlw	3
  1629  06A1  00C2               	movwf	??_command+2
  1630  06A2  308A               	movlw	138
  1631  06A3  00C1               	movwf	??_command+1
  1632  06A4  3056               	movlw	86
  1633  06A5  00C0               	movwf	??_command
  1634  06A6                     u1607:	
  1635  06A6  0BC0               	decfsz	??_command,f
  1636  06A7  2EA6               	goto	u1607
  1637  06A8  0BC1               	decfsz	??_command+1,f
  1638  06A9  2EA6               	goto	u1607
  1639  06AA  0BC2               	decfsz	??_command+2,f
  1640  06AB  2EA6               	goto	u1607
  1641  06AC  2EAD               	nop2
  1642                           
  1643                           ;OBC1_app.c: 66: PORTDbits.RD6 = 0;
  1644  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1645  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1646  06AF  1308               	bcf	8,6	;volatile
  1647                           
  1648                           ;OBC1_app.c: 67: _delay((unsigned long)((100)*(20000000/4000.0)));
  1649  06B0  3003               	movlw	3
  1650  06B1  00C2               	movwf	??_command+2
  1651  06B2  308A               	movlw	138
  1652  06B3  00C1               	movwf	??_command+1
  1653  06B4  3056               	movlw	86
  1654  06B5  00C0               	movwf	??_command
  1655  06B6                     u1617:	
  1656  06B6  0BC0               	decfsz	??_command,f
  1657  06B7  2EB6               	goto	u1617
  1658  06B8  0BC1               	decfsz	??_command+1,f
  1659  06B9  2EB6               	goto	u1617
  1660  06BA  0BC2               	decfsz	??_command+2,f
  1661  06BB  2EB6               	goto	u1617
  1662  06BC  2EBD               	nop2
  1663                           
  1664                           ;OBC1_app.c: 68: LED_data_set();
  1665  06BD  120A  158A  2706  120A  118A  	fcall	_LED_data_set
  1666                           
  1667                           ;OBC1_app.c: 69: spi_master_send(COM, 0x11);
  1668  06C2  3011               	movlw	17
  1669  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1670  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1671  06C5  00C0               	movwf	??_command
  1672  06C6  0840               	movf	??_command,w
  1673  06C7  00A0               	movwf	spi_master_send@data
  1674  06C8  3003               	movlw	3
  1675  06C9  120A  118A  2263  120A  118A  	fcall	_spi_master_send
  1676                           
  1677                           ;OBC1_app.c: 70: send_data_master(COM, (0x01), DATA_END);
  1678  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1679  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1680  06D0  01AF               	clrf	send_data_master@data_type
  1681  06D1  0AAF               	incf	send_data_master@data_type,f
  1682  06D2  3010               	movlw	16
  1683  06D3  00C0               	movwf	??_command
  1684  06D4  0840               	movf	??_command,w
  1685  06D5  00B0               	movwf	send_data_master@data_end_command
  1686  06D6  3003               	movlw	3
  1687  06D7  120A  158A  2728   	fcall	_send_data_master
  1688                           
  1689                           ;OBC1_app.c: 71: break;
  1690  06DA  0008               	return
  1691  06DB                     l2011:	
  1692                           ;OBC1_app.c: 73: case (0x02):
  1693                           
  1694                           
  1695                           ;OBC1_app.c: 74: putch(0x01);
  1696  06DB  3001               	movlw	1
  1697  06DC  120A  158A  26DF  120A  118A  	fcall	_putch
  1698                           
  1699                           ;OBC1_app.c: 75: PIE1bits.RCIE = 1;
  1700  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  1701  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  1702  06E3  168C               	bsf	12,5	;volatile
  1703                           
  1704                           ;OBC1_app.c: 76: INTCONbits.GIE = 1;
  1705  06E4  178B               	bsf	11,7	;volatile
  1706                           
  1707                           ;OBC1_app.c: 77: INTCONbits.PEIE = 1;
  1708  06E5  170B               	bsf	11,6	;volatile
  1709  06E6                     l2023:	
  1710                           ;OBC1_app.c: 79: while(uart_interrupt!=2){
  1711                           
  1712  06E6  3002               	movlw	2
  1713  06E7  067A               	xorwf	_uart_interrupt,w
  1714  06E8  047B               	iorwf	_uart_interrupt+1,w
  1715  06E9  1903               	btfsc	3,2
  1716  06EA  2F08               	goto	l402
  1717                           
  1718                           ;OBC1_app.c: 80: PORTDbits.RD6 = 1;
  1719  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1720  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1721  06ED  1708               	bsf	8,6	;volatile
  1722                           
  1723                           ;OBC1_app.c: 81: _delay((unsigned long)((10)*(20000000/4000.0)));
  1724  06EE  3041               	movlw	65
  1725  06EF  00C1               	movwf	??_command+1
  1726  06F0  30EE               	movlw	238
  1727  06F1  00C0               	movwf	??_command
  1728  06F2                     u1627:	
  1729  06F2  0BC0               	decfsz	??_command,f
  1730  06F3  2EF2               	goto	u1627
  1731  06F4  0BC1               	decfsz	??_command+1,f
  1732  06F5  2EF2               	goto	u1627
  1733  06F6  0000               	nop
  1734                           
  1735                           ;OBC1_app.c: 82: PORTDbits.RD6 = 0;
  1736  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1737  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1738  06F9  1308               	bcf	8,6	;volatile
  1739                           
  1740                           ;OBC1_app.c: 83: _delay((unsigned long)((90)*(20000000/4000.0)));
  1741  06FA  3003               	movlw	3
  1742  06FB  00C2               	movwf	??_command+2
  1743  06FC  3049               	movlw	73
  1744  06FD  00C1               	movwf	??_command+1
  1745  06FE  3067               	movlw	103
  1746  06FF  00C0               	movwf	??_command
  1747  0700                     u1637:	
  1748  0700  0BC0               	decfsz	??_command,f
  1749  0701  2F00               	goto	u1637
  1750  0702  0BC1               	decfsz	??_command+1,f
  1751  0703  2F00               	goto	u1637
  1752  0704  0BC2               	decfsz	??_command+2,f
  1753  0705  2F00               	goto	u1637
  1754  0706  0000               	nop
  1755  0707  2EE6               	goto	l2023
  1756  0708                     l402:	
  1757                           
  1758                           ;OBC1_app.c: 84: }
  1759                           ;OBC1_app.c: 86: PIR1bits.RCIF = 0;
  1760  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1762  070A  128C               	bcf	12,5	;volatile
  1763                           
  1764                           ;OBC1_app.c: 87: INTCONbits.PEIE = 0;
  1765  070B  130B               	bcf	11,6	;volatile
  1766                           
  1767                           ;OBC1_app.c: 88: INTCONbits.GIE = 0;
  1768  070C  138B               	bcf	11,7	;volatile
  1769                           
  1770                           ;OBC1_app.c: 90: PORTDbits.RD7 = 1;
  1771  070D  1788               	bsf	8,7	;volatile
  1772                           
  1773                           ;OBC1_app.c: 91: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1774  070E  301A               	movlw	26
  1775  070F  00C2               	movwf	??_command+2
  1776  0710  305E               	movlw	94
  1777  0711  00C1               	movwf	??_command+1
  1778  0712  3086               	movlw	134
  1779  0713  00C0               	movwf	??_command
  1780  0714                     u1647:	
  1781  0714  0BC0               	decfsz	??_command,f
  1782  0715  2F14               	goto	u1647
  1783  0716  0BC1               	decfsz	??_command+1,f
  1784  0717  2F14               	goto	u1647
  1785  0718  0BC2               	decfsz	??_command+2,f
  1786  0719  2F14               	goto	u1647
  1787  071A  0000               	nop
  1788                           
  1789                           ;OBC1_app.c: 92: PORTDbits.RD7 = 0;
  1790  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1791  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1792  071D  1388               	bcf	8,7	;volatile
  1793                           
  1794                           ;OBC1_app.c: 93: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1795  071E  301A               	movlw	26
  1796  071F  00C2               	movwf	??_command+2
  1797  0720  305E               	movlw	94
  1798  0721  00C1               	movwf	??_command+1
  1799  0722  3086               	movlw	134
  1800  0723  00C0               	movwf	??_command
  1801  0724                     u1657:	
  1802  0724  0BC0               	decfsz	??_command,f
  1803  0725  2F24               	goto	u1657
  1804  0726  0BC1               	decfsz	??_command+1,f
  1805  0727  2F24               	goto	u1657
  1806  0728  0BC2               	decfsz	??_command+2,f
  1807  0729  2F24               	goto	u1657
  1808  072A  0000               	nop
  1809                           
  1810                           ;OBC1_app.c: 95: sent_data_set(I2CTEMP_data, 2, 1);
  1811  072B  307C               	movlw	(low (_I2CTEMP_data| 0))& (0+255)
  1812  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1813  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1814  072E  00B4               	movwf	sent_data_set@p_data
  1815  072F  3000               	movlw	0
  1816  0730  00B5               	movwf	sent_data_set@p_data+1
  1817  0731  3002               	movlw	2
  1818  0732  00C0               	movwf	??_command
  1819  0733  0840               	movf	??_command,w
  1820  0734  00B6               	movwf	sent_data_set@data_len
  1821  0735  01B7               	clrf	sent_data_set@byte_of_data
  1822  0736  0AB7               	incf	sent_data_set@byte_of_data,f
  1823  0737  120A  118A  2312  120A  118A  	fcall	_sent_data_set
  1824                           
  1825                           ;OBC1_app.c: 97: long t;
  1826                           ;OBC1_app.c: 98: double temp = 0.0;
  1827  073C  3000               	movlw	0
  1828  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1829  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1830  073F  00C5               	movwf	command@temp
  1831  0740  3000               	movlw	0
  1832  0741  00C6               	movwf	command@temp+1
  1833  0742  3000               	movlw	0
  1834  0743  00C7               	movwf	command@temp+2
  1835                           
  1836                           ;OBC1_app.c: 99: t = (I2CTEMP_data[0] << 8) | I2CTEMP_data[1];
  1837  0744  087D               	movf	_I2CTEMP_data+1,w
  1838  0745  00C0               	movwf	??_command
  1839  0746  01C1               	clrf	??_command+1
  1840  0747  087C               	movf	_I2CTEMP_data,w
  1841  0748  00C2               	movwf	??_command+2
  1842  0749  01C3               	clrf	??_command+3
  1843  074A  0842               	movf	??_command+2,w
  1844  074B  00C3               	movwf	??_command+3
  1845  074C  01C2               	clrf	??_command+2
  1846  074D  0840               	movf	??_command,w
  1847  074E  0442               	iorwf	??_command+2,w
  1848  074F  00C8               	movwf	command@t
  1849  0750  0841               	movf	??_command+1,w
  1850  0751  0443               	iorwf	??_command+3,w
  1851  0752  00C9               	movwf	command@t+1
  1852  0753  01CA               	clrf	command@t+2
  1853  0754  1BC9               	btfsc	command@t+1,7
  1854  0755  03CA               	decf	command@t+2,f
  1855  0756  084A               	movf	command@t+2,w
  1856  0757  00CB               	movwf	command@t+3
  1857                           
  1858                           ;OBC1_app.c: 100: if (t < 0) t = t - 65536;
  1859  0758  1FCB               	btfss	command@t+3,7
  1860  0759  2F7C               	goto	l2039
  1861  075A  3000               	movlw	0
  1862  075B  00C0               	movwf	??_command
  1863  075C  3000               	movlw	0
  1864  075D  00C1               	movwf	??_command+1
  1865  075E  30FF               	movlw	255
  1866  075F  00C2               	movwf	??_command+2
  1867  0760  30FF               	movlw	255
  1868  0761  00C3               	movwf	??_command+3
  1869  0762  0848               	movf	command@t,w
  1870  0763  07C0               	addwf	??_command,f
  1871  0764  0849               	movf	command@t+1,w
  1872  0765  1803               	skipnc
  1873  0766  0F49               	incfsz	command@t+1,w
  1874  0767  2F69               	goto	u1440
  1875  0768  2F6A               	goto	u1441
  1876  0769                     u1440:	
  1877  0769  07C1               	addwf	??_command+1,f
  1878  076A                     u1441:	
  1879  076A  084A               	movf	command@t+2,w
  1880  076B  1803               	skipnc
  1881  076C  0F4A               	incfsz	command@t+2,w
  1882  076D  2F6F               	goto	u1442
  1883  076E  2F70               	goto	u1443
  1884  076F                     u1442:	
  1885  076F  07C2               	addwf	??_command+2,f
  1886  0770                     u1443:	
  1887  0770  084B               	movf	command@t+3,w
  1888  0771  1803               	skipnc
  1889  0772  0A4B               	incf	command@t+3,w
  1890  0773  07C3               	addwf	??_command+3,f
  1891  0774  0843               	movf	??_command+3,w
  1892  0775  00CB               	movwf	command@t+3
  1893  0776  0842               	movf	??_command+2,w
  1894  0777  00CA               	movwf	command@t+2
  1895  0778  0841               	movf	??_command+1,w
  1896  0779  00C9               	movwf	command@t+1
  1897  077A  0840               	movf	??_command,w
  1898  077B  00C8               	movwf	command@t
  1899  077C                     l2039:	
  1900                           
  1901                           ;OBC1_app.c: 101: temp = (double)t / 128.0;
  1902  077C  3000               	movlw	0
  1903  077D  00B0               	movwf	___ftdiv@f2
  1904  077E  3000               	movlw	0
  1905  077F  00B1               	movwf	___ftdiv@f2+1
  1906  0780  3043               	movlw	67
  1907  0781  00B2               	movwf	___ftdiv@f2+2
  1908  0782  084B               	movf	command@t+3,w
  1909  0783  00AB               	movwf	___altoft@c+3
  1910  0784  084A               	movf	command@t+2,w
  1911  0785  00AA               	movwf	___altoft@c+2
  1912  0786  0849               	movf	command@t+1,w
  1913  0787  00A9               	movwf	___altoft@c+1
  1914  0788  0848               	movf	command@t,w
  1915  0789  00A8               	movwf	___altoft@c
  1916  078A  120A  118A  2145  120A  118A  	fcall	___altoft
  1917  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0791  0828               	movf	?___altoft,w
  1920  0792  00B3               	movwf	___ftdiv@f1
  1921  0793  0829               	movf	?___altoft+1,w
  1922  0794  00B4               	movwf	___ftdiv@f1+1
  1923  0795  082A               	movf	?___altoft+2,w
  1924  0796  00B5               	movwf	___ftdiv@f1+2
  1925  0797  120A  118A  24F6  120A  118A  	fcall	___ftdiv
  1926  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1927  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1928  079E  0830               	movf	?___ftdiv,w
  1929  079F  00C5               	movwf	command@temp
  1930  07A0  0831               	movf	?___ftdiv+1,w
  1931  07A1  00C6               	movwf	command@temp+1
  1932  07A2  0832               	movf	?___ftdiv+2,w
  1933  07A3  00C7               	movwf	command@temp+2
  1934                           
  1935                           ;OBC1_app.c: 105: if(temp >= 10.0){
  1936  07A4  0845               	movf	command@temp,w
  1937  07A5  00A0               	movwf	___ftge@ff1
  1938  07A6  0846               	movf	command@temp+1,w
  1939  07A7  00A1               	movwf	___ftge@ff1+1
  1940  07A8  0847               	movf	command@temp+2,w
  1941  07A9  00A2               	movwf	___ftge@ff1+2
  1942  07AA  3000               	movlw	0
  1943  07AB  00A3               	movwf	___ftge@ff2
  1944  07AC  3020               	movlw	32
  1945  07AD  00A4               	movwf	___ftge@ff2+1
  1946  07AE  3041               	movlw	65
  1947  07AF  00A5               	movwf	___ftge@ff2+2
  1948  07B0  120A  118A  22B3  120A  118A  	fcall	___ftge
  1949  07B5  1C03               	btfss	3,0
  1950  07B6  2FD7               	goto	l2049
  1951                           
  1952                           ;OBC1_app.c: 106: PORTDbits.RD6 = 1;
  1953  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1954  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1955  07B9  1708               	bsf	8,6	;volatile
  1956                           
  1957                           ;OBC1_app.c: 107: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1958  07BA  301A               	movlw	26
  1959  07BB  00C2               	movwf	??_command+2
  1960  07BC  305E               	movlw	94
  1961  07BD  00C1               	movwf	??_command+1
  1962  07BE  3086               	movlw	134
  1963  07BF  00C0               	movwf	??_command
  1964  07C0                     u1667:	
  1965  07C0  0BC0               	decfsz	??_command,f
  1966  07C1  2FC0               	goto	u1667
  1967  07C2  0BC1               	decfsz	??_command+1,f
  1968  07C3  2FC0               	goto	u1667
  1969  07C4  0BC2               	decfsz	??_command+2,f
  1970  07C5  2FC0               	goto	u1667
  1971  07C6  0000               	nop
  1972                           
  1973                           ;OBC1_app.c: 108: PORTDbits.RD6 = 0;
  1974  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1975  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1976  07C9  1308               	bcf	8,6	;volatile
  1977                           
  1978                           ;OBC1_app.c: 109: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1979  07CA  301A               	movlw	26
  1980  07CB  00C2               	movwf	??_command+2
  1981  07CC  305E               	movlw	94
  1982  07CD  00C1               	movwf	??_command+1
  1983  07CE  3086               	movlw	134
  1984  07CF  00C0               	movwf	??_command
  1985  07D0                     u1677:	
  1986  07D0  0BC0               	decfsz	??_command,f
  1987  07D1  2FD0               	goto	u1677
  1988  07D2  0BC1               	decfsz	??_command+1,f
  1989  07D3  2FD0               	goto	u1677
  1990  07D4  0BC2               	decfsz	??_command+2,f
  1991  07D5  2FD0               	goto	u1677
  1992  07D6  0000               	nop
  1993  07D7                     l2049:	
  1994                           
  1995                           ;OBC1_app.c: 110: }
  1996                           ;OBC1_app.c: 112: I2Ctemp_data_set();
  1997  07D7  120A  118A  2017   	fcall	_I2Ctemp_data_set
  1998                           
  1999                           ;OBC1_app.c: 115: }
  2000                           
  2001                           ;OBC1_app.c: 114: break;
  2002  07DA  0008               	return
  2003  07DB                     l2053:	
  2004  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2005  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2006  07DD  0844               	movf	command@data,w
  2007                           
  2008                           ; Switch size 1, requested type "space"
  2009                           ; Number of cases is 3, Range of values is 1 to 3
  2010                           ; switch strategies available:
  2011                           ; Name         Instructions Cycles
  2012                           ; simple_byte           10     6 (average)
  2013                           ; direct_byte           20    11 (fixed)
  2014                           ; jumptable            263     9 (fixed)
  2015                           ;	Chosen strategy is simple_byte
  2016  07DE  3A01               	xorlw	1	; case 1
  2017  07DF  1903               	skipnz
  2018  07E0  2E9F               	goto	l398
  2019  07E1  3A03               	xorlw	3	; case 2
  2020  07E2  1903               	skipnz
  2021  07E3  2EDB               	goto	l2011
  2022  07E4  3A01               	xorlw	1	; case 3
  2023  07E5  1903               	skipnz
  2024  07E6  2E7B               	goto	l1999
  2025  07E7  2FE8               	goto	l405
  2026  07E8                     l405:	
  2027  07E8  0008               	return
  2028  07E9                     __end_of_command:	
  2029                           
  2030                           	psect	text4
  2031  0F28                     __ptext4:	
  2032 ;; *************** function _send_data_master *****************
  2033 ;; Defined at:
  2034 ;;		line 217 in file "system_protocol.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  destination     1    wreg     enum E1099
  2037 ;;  data_type       1   15[BANK0 ] enum E1104
  2038 ;;  data_end_com    1   16[BANK0 ] enum E1108
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  destination     1   18[BANK0 ] enum E1099
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       2       0       0       0
  2051 ;;      Locals:         0       1       0       0       0
  2052 ;;      Temps:          0       1       0       0       0
  2053 ;;      Totals:         0       4       0       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    5
  2057 ;; This function calls:
  2058 ;;		_packet_send_master
  2059 ;; This function is called by:
  2060 ;;		_command
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _send_data_master
  2066  0F28                     _send_data_master:	
  2067                           
  2068                           ;incstack = 0
  2069                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2070                           ;send_data_master@destination stored from wreg
  2071  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0F2A  00B2               	movwf	send_data_master@destination
  2074                           
  2075                           ;system_protocol.c: 219: packet.data_type = (uint8_t)data_type;
  2076  0F2B  082F               	movf	send_data_master@data_type,w
  2077  0F2C  00B1               	movwf	??_send_data_master
  2078  0F2D  0831               	movf	??_send_data_master,w
  2079  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0F30  00A0               	movwf	_packet^(0+128)
  2082                           
  2083                           ;system_protocol.c: 220: packet.data_end_command = (uint8_t)data_end_command;
  2084  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0F33  0830               	movf	send_data_master@data_end_command,w
  2087  0F34  00B1               	movwf	??_send_data_master
  2088  0F35  0831               	movf	??_send_data_master,w
  2089  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0F38  00BF               	movwf	(_packet^(0+128)+31)
  2092                           
  2093                           ;system_protocol.c: 221: packet_send_master(destination, &packet);
  2094  0F39  30A0               	movlw	(low (_packet| 0))& (0+255)
  2095  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0F3C  00B1               	movwf	??_send_data_master
  2098  0F3D  0831               	movf	??_send_data_master,w
  2099  0F3E  00AC               	movwf	packet_send_master@p_packet
  2100  0F3F  0832               	movf	send_data_master@destination,w
  2101  0F40  120A  118A  2066   	fcall	_packet_send_master
  2102  0F43  0008               	return
  2103  0F44                     __end_of_send_data_master:	
  2104                           
  2105                           	psect	text5
  2106  0066                     __ptext5:	
  2107 ;; *************** function _packet_send_master *****************
  2108 ;; Defined at:
  2109 ;;		line 462 in file "system_protocol.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  destination     1    wreg     enum E1099
  2112 ;;  p_packet        1   12[BANK0 ] PTR struct .
  2113 ;;		 -> packet(32), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  destination     1   14[BANK0 ] enum E1099
  2116 ;; Return value:  Size  Location     Type
  2117 ;;		None               void
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         0       1       0       0       0
  2126 ;;      Locals:         0       1       0       0       0
  2127 ;;      Temps:          0       1       0       0       0
  2128 ;;      Totals:         0       3       0       0       0
  2129 ;;Total ram usage:        3 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    4
  2132 ;; This function calls:
  2133 ;;		_send_payload
  2134 ;;		_spi_master_send
  2135 ;; This function is called by:
  2136 ;;		_send_data_master
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _packet_send_master
  2142  0066                     _packet_send_master:	
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2146                           ;packet_send_master@destination stored from wreg
  2147  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0067  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0068  00AE               	movwf	packet_send_master@destination
  2150                           
  2151                           ;system_protocol.c: 465: spi_master_send(destination, 0x01);
  2152  0069  01A0               	clrf	spi_master_send@data
  2153  006A  0AA0               	incf	spi_master_send@data,f
  2154  006B  082E               	movf	packet_send_master@destination,w
  2155  006C  120A  118A  2263  120A  118A  	fcall	_spi_master_send
  2156                           
  2157                           ;system_protocol.c: 468: spi_master_send(destination, &p_packet->data_type);
  2158  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0073  082C               	movf	packet_send_master@p_packet,w
  2161  0074  00AD               	movwf	??_packet_send_master
  2162  0075  082D               	movf	??_packet_send_master,w
  2163  0076  00A0               	movwf	spi_master_send@data
  2164  0077  082E               	movf	packet_send_master@destination,w
  2165  0078  120A  118A  2263  120A  118A  	fcall	_spi_master_send
  2166                           
  2167                           ;system_protocol.c: 471: send_payload(destination, &p_packet->payload);
  2168  007D  1283               	bcf	3,5	;RP0=0, select bank0
  2169  007E  1303               	bcf	3,6	;RP1=0, select bank0
  2170  007F  082C               	movf	packet_send_master@p_packet,w
  2171  0080  3E01               	addlw	1
  2172  0081  00AD               	movwf	??_packet_send_master
  2173  0082  082D               	movf	??_packet_send_master,w
  2174  0083  00A6               	movwf	send_payload@p_payload
  2175  0084  082E               	movf	packet_send_master@destination,w
  2176  0085  120A  118A  21CF  120A  118A  	fcall	_send_payload
  2177                           
  2178                           ;system_protocol.c: 474: spi_master_send(destination, &p_packet->data_end_command);
  2179  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2180  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2181  008C  082C               	movf	packet_send_master@p_packet,w
  2182  008D  3E1F               	addlw	31
  2183  008E  00AD               	movwf	??_packet_send_master
  2184  008F  082D               	movf	??_packet_send_master,w
  2185  0090  00A0               	movwf	spi_master_send@data
  2186  0091  082E               	movf	packet_send_master@destination,w
  2187  0092  120A  118A  2263   	fcall	_spi_master_send
  2188  0095  0008               	return
  2189  0096                     __end_of_packet_send_master:	
  2190                           
  2191                           	psect	text6
  2192  01CF                     __ptext6:	
  2193 ;; *************** function _send_payload *****************
  2194 ;; Defined at:
  2195 ;;		line 394 in file "system_protocol.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  destination     1    wreg     enum E1099
  2198 ;;  p_payload       1    6[BANK0 ] PTR unsigned char 
  2199 ;;		 -> packet(32), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  destination     1   11[BANK0 ] enum E1099
  2202 ;;  index_pos       1   10[BANK0 ] unsigned char 
  2203 ;;  i               1    9[BANK0 ] unsigned char 
  2204 ;;  data_len        1    8[BANK0 ] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      unsigned char 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       1       0       0       0
  2215 ;;      Locals:         0       4       0       0       0
  2216 ;;      Temps:          0       1       0       0       0
  2217 ;;      Totals:         0       6       0       0       0
  2218 ;;Total ram usage:        6 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    3
  2221 ;; This function calls:
  2222 ;;		_spi_master_send
  2223 ;; This function is called by:
  2224 ;;		_packet_send_master
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _send_payload
  2230  01CF                     _send_payload:	
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2234                           ;send_payload@destination stored from wreg
  2235  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2236  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2237  01D1  00AB               	movwf	send_payload@destination
  2238                           
  2239                           ;system_protocol.c: 396: uint8_t i;
  2240                           ;system_protocol.c: 397: uint8_t data_len;
  2241                           ;system_protocol.c: 398: uint8_t index_pos = 0;
  2242  01D2  01AA               	clrf	send_payload@index_pos
  2243  01D3                     l1729:	
  2244                           ;system_protocol.c: 401: while(*p_payload != 0x00 || index_pos < 30)
  2245                           
  2246  01D3  0826               	movf	send_payload@p_payload,w
  2247  01D4  0084               	movwf	4
  2248  01D5  1383               	bcf	3,7	;select IRP bank0
  2249  01D6  0800               	movf	0,w
  2250  01D7  1903               	btfsc	3,2
  2251  01D8  2A12               	goto	l1731
  2252  01D9                     l1709:	
  2253                           
  2254                           ;system_protocol.c: 402: {
  2255                           ;system_protocol.c: 403: data_len = *p_payload;
  2256  01D9  0826               	movf	send_payload@p_payload,w
  2257  01DA  0084               	movwf	4
  2258  01DB  1383               	bcf	3,7	;select IRP bank0
  2259  01DC  0800               	movf	0,w
  2260  01DD  00A7               	movwf	??_send_payload
  2261  01DE  0827               	movf	??_send_payload,w
  2262  01DF  00A8               	movwf	send_payload@data_len
  2263                           
  2264                           ;system_protocol.c: 404: spi_master_send(destination, p_payload++);
  2265  01E0  0826               	movf	send_payload@p_payload,w
  2266  01E1  00A7               	movwf	??_send_payload
  2267  01E2  0827               	movf	??_send_payload,w
  2268  01E3  00A0               	movwf	spi_master_send@data
  2269  01E4  082B               	movf	send_payload@destination,w
  2270  01E5  120A  118A  2263  120A  118A  	fcall	_spi_master_send
  2271  01EA  3001               	movlw	1
  2272  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2273  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2274  01ED  00A7               	movwf	??_send_payload
  2275  01EE  0827               	movf	??_send_payload,w
  2276  01EF  07A6               	addwf	send_payload@p_payload,f
  2277                           
  2278                           ;system_protocol.c: 405: index_pos++;
  2279  01F0  3001               	movlw	1
  2280  01F1  00A7               	movwf	??_send_payload
  2281  01F2  0827               	movf	??_send_payload,w
  2282  01F3  07AA               	addwf	send_payload@index_pos,f
  2283                           
  2284                           ;system_protocol.c: 406: for(i = 0; i < data_len; i++)
  2285  01F4  01A9               	clrf	send_payload@i
  2286  01F5                     l1727:	
  2287  01F5  0828               	movf	send_payload@data_len,w
  2288  01F6  0229               	subwf	send_payload@i,w
  2289  01F7  1803               	btfsc	3,0
  2290  01F8  29D3               	goto	l1729
  2291                           
  2292                           ;system_protocol.c: 407: {
  2293                           ;system_protocol.c: 408: spi_master_send(destination, p_payload++);
  2294  01F9  0826               	movf	send_payload@p_payload,w
  2295  01FA  00A7               	movwf	??_send_payload
  2296  01FB  0827               	movf	??_send_payload,w
  2297  01FC  00A0               	movwf	spi_master_send@data
  2298  01FD  082B               	movf	send_payload@destination,w
  2299  01FE  120A  118A  2263  120A  118A  	fcall	_spi_master_send
  2300  0203  3001               	movlw	1
  2301  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0206  00A7               	movwf	??_send_payload
  2304  0207  0827               	movf	??_send_payload,w
  2305  0208  07A6               	addwf	send_payload@p_payload,f
  2306                           
  2307                           ;system_protocol.c: 409: index_pos++;
  2308  0209  3001               	movlw	1
  2309  020A  00A7               	movwf	??_send_payload
  2310  020B  0827               	movf	??_send_payload,w
  2311  020C  07AA               	addwf	send_payload@index_pos,f
  2312  020D  3001               	movlw	1
  2313  020E  00A7               	movwf	??_send_payload
  2314  020F  0827               	movf	??_send_payload,w
  2315  0210  07A9               	addwf	send_payload@i,f
  2316  0211  29F5               	goto	l1727
  2317  0212                     l1731:	
  2318  0212  301E               	movlw	30
  2319  0213  022A               	subwf	send_payload@index_pos,w
  2320  0214  1803               	btfsc	3,0
  2321  0215  0008               	return
  2322  0216  29D9               	goto	l1709
  2323  0217                     __end_of_send_payload:	
  2324                           ;system_protocol.c: 410: }
  2325                           ;system_protocol.c: 411: }
  2326                           ;system_protocol.c: 413: return index_pos;
  2327                           ;	Return value of _send_payload is never used
  2328                           
  2329                           
  2330                           	psect	text7
  2331  0263                     __ptext7:	
  2332 ;; *************** function _spi_master_send *****************
  2333 ;; Defined at:
  2334 ;;		line 154 in file "spi_master.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  destination     1    wreg     enum E1099
  2337 ;;  data            1    0[BANK0 ] unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  destination     1    5[BANK0 ] enum E1099
  2340 ;;  timeout_coun    2    3[BANK0 ] unsigned int 
  2341 ;;  dummy           1    2[BANK0 ] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       1       0       0       0
  2352 ;;      Locals:         0       4       0       0       0
  2353 ;;      Temps:          0       1       0       0       0
  2354 ;;      Totals:         0       6       0       0       0
  2355 ;;Total ram usage:        6 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    2
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_send_payload
  2362 ;;		_packet_send_master
  2363 ;;		_command
  2364 ;;		_COM_status
  2365 ;;		_POW_status
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _spi_master_send
  2371  0263                     _spi_master_send:	
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  2375                           ;spi_master_send@destination stored from wreg
  2376  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0265  00A5               	movwf	spi_master_send@destination
  2379                           
  2380                           ;spi_master.c: 156: uint8_t dummy;
  2381                           ;spi_master.c: 157: uint16_t timeout_counter = 1000;
  2382  0266  30E8               	movlw	232
  2383  0267  00A3               	movwf	spi_master_send@timeout_counter
  2384  0268  3003               	movlw	3
  2385  0269  00A4               	movwf	spi_master_send@timeout_counter+1
  2386                           
  2387                           ;spi_master.c: 160: dummy = SSPBUF;
  2388  026A  0813               	movf	19,w	;volatile
  2389  026B  00A1               	movwf	??_spi_master_send
  2390  026C  0821               	movf	??_spi_master_send,w
  2391  026D  00A2               	movwf	spi_master_send@dummy
  2392                           
  2393                           ;spi_master.c: 163: switch(destination)
  2394  026E  2A75               	goto	l1601
  2395  026F                     l128:	
  2396                           ;spi_master.c: 166: while(PORTDbits.RD0 == 0){;}
  2397                           
  2398                           ;spi_master.c: 164: {
  2399                           ;spi_master.c: 165: case COM:
  2400                           
  2401  026F  1808               	btfsc	8,0	;volatile
  2402  0270  2A82               	goto	l1605
  2403  0271  2A6F               	goto	l128
  2404  0272                     l133:	
  2405                           ;spi_master.c: 170: while(PORTDbits.RD1 == 0){;}
  2406                           
  2407                           ;spi_master.c: 168: case POW:
  2408                           
  2409                           ;spi_master.c: 167: break;
  2410                           
  2411  0272  1888               	btfsc	8,1	;volatile
  2412  0273  2A82               	goto	l1605
  2413  0274  2A72               	goto	l133
  2414  0275                     l1601:	
  2415                           ;spi_master.c: 172: }
  2416                           
  2417                           ;spi_master.c: 171: break;
  2418                           
  2419  0275  0825               	movf	spi_master_send@destination,w
  2420                           
  2421                           ; Switch size 1, requested type "space"
  2422                           ; Number of cases is 2, Range of values is 3 to 4
  2423                           ; switch strategies available:
  2424                           ; Name         Instructions Cycles
  2425                           ; simple_byte            7     4 (average)
  2426                           ; direct_byte           17    11 (fixed)
  2427                           ; jumptable            263     9 (fixed)
  2428                           ;	Chosen strategy is simple_byte
  2429  0276  3A03               	xorlw	3	; case 3
  2430  0277  1903               	skipnz
  2431  0278  2A6F               	goto	l128
  2432  0279  3A07               	xorlw	7	; case 4
  2433  027A  1903               	skipnz
  2434  027B  2A72               	goto	l133
  2435  027C  2A82               	goto	l1605
  2436                           
  2437                           ;spi_master.c: 175: switch(destination)
  2438  027D  2A82               	goto	l1605
  2439  027E                     l137:	
  2440                           ;spi_master.c: 176: {
  2441                           ;spi_master.c: 177: case COM:
  2442                           
  2443                           
  2444                           ;spi_master.c: 178: PORTCbits.RC0 = 0;
  2445  027E  1007               	bcf	7,0	;volatile
  2446                           
  2447                           ;spi_master.c: 179: break;
  2448  027F  2A8A               	goto	l1607
  2449  0280                     l139:	
  2450                           ;spi_master.c: 180: case POW:
  2451                           
  2452                           
  2453                           ;spi_master.c: 181: PORTCbits.RC1 = 0;
  2454  0280  1087               	bcf	7,1	;volatile
  2455                           
  2456                           ;spi_master.c: 183: }
  2457                           
  2458                           ;spi_master.c: 182: break;
  2459  0281  2A8A               	goto	l1607
  2460  0282                     l1605:	
  2461  0282  0825               	movf	spi_master_send@destination,w
  2462                           
  2463                           ; Switch size 1, requested type "space"
  2464                           ; Number of cases is 2, Range of values is 3 to 4
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte            7     4 (average)
  2468                           ; direct_byte           17    11 (fixed)
  2469                           ; jumptable            263     9 (fixed)
  2470                           ;	Chosen strategy is simple_byte
  2471  0283  3A03               	xorlw	3	; case 3
  2472  0284  1903               	skipnz
  2473  0285  2A7E               	goto	l137
  2474  0286  3A07               	xorlw	7	; case 4
  2475  0287  1903               	skipnz
  2476  0288  2A80               	goto	l139
  2477  0289  2A8A               	goto	l1607
  2478  028A                     l1607:	
  2479                           
  2480                           ;spi_master.c: 186: SSPBUF = data;
  2481  028A  0820               	movf	spi_master_send@data,w
  2482  028B  0093               	movwf	19	;volatile
  2483  028C                     l1615:	
  2484                           ;spi_master.c: 189: while(SSPSTATbits.BF == 0)
  2485                           
  2486  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2487  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2488  028E  1814               	btfsc	20,0	;volatile
  2489  028F  2AA5               	goto	l1619
  2490                           
  2491                           ;spi_master.c: 190: {
  2492                           ;spi_master.c: 192: if(timeout_counter == 0)
  2493  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0291  0823               	movf	spi_master_send@timeout_counter,w
  2495  0292  0424               	iorwf	spi_master_send@timeout_counter+1,w
  2496  0293  1903               	btfsc	3,2
  2497  0294  0008               	return
  2498                           
  2499                           ;spi_master.c: 195: }
  2500                           ;spi_master.c: 198: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2501                           
  2502                           ;spi_master.c: 193: {
  2503                           ;spi_master.c: 194: return;
  2504  0295  2A96               	nop2	;2 cycle nop
  2505  0296  2A97               	nop2	;2 cycle nop
  2506  0297  0000               	nop
  2507                           
  2508                           ;spi_master.c: 199: timeout_counter--;
  2509  0298  3001               	movlw	1
  2510  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2511  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2512  029B  02A3               	subwf	spi_master_send@timeout_counter,f
  2513  029C  3000               	movlw	0
  2514  029D  1C03               	skipc
  2515  029E  03A4               	decf	spi_master_send@timeout_counter+1,f
  2516  029F  02A4               	subwf	spi_master_send@timeout_counter+1,f
  2517  02A0  2A8C               	goto	l1615
  2518  02A1                     l146:	
  2519                           ;spi_master.c: 204: {
  2520                           ;spi_master.c: 205: case COM:
  2521                           
  2522                           ;spi_master.c: 200: }
  2523                           ;spi_master.c: 203: switch(destination)
  2524                           
  2525                           
  2526                           ;spi_master.c: 206: PORTCbits.RC0 = 1;
  2527  02A1  1407               	bsf	7,0	;volatile
  2528                           
  2529                           ;spi_master.c: 207: break;
  2530  02A2  2AAE               	goto	l1621
  2531  02A3                     l148:	
  2532                           ;spi_master.c: 208: case POW:
  2533                           
  2534                           
  2535                           ;spi_master.c: 209: PORTCbits.RC1 = 1;
  2536  02A3  1487               	bsf	7,1	;volatile
  2537                           
  2538                           ;spi_master.c: 211: }
  2539                           
  2540                           ;spi_master.c: 210: break;
  2541  02A4  2AAE               	goto	l1621
  2542  02A5                     l1619:	
  2543  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2544  02A6  0825               	movf	spi_master_send@destination,w
  2545                           
  2546                           ; Switch size 1, requested type "space"
  2547                           ; Number of cases is 2, Range of values is 3 to 4
  2548                           ; switch strategies available:
  2549                           ; Name         Instructions Cycles
  2550                           ; simple_byte            7     4 (average)
  2551                           ; direct_byte           17    11 (fixed)
  2552                           ; jumptable            263     9 (fixed)
  2553                           ;	Chosen strategy is simple_byte
  2554  02A7  3A03               	xorlw	3	; case 3
  2555  02A8  1903               	skipnz
  2556  02A9  2AA1               	goto	l146
  2557  02AA  3A07               	xorlw	7	; case 4
  2558  02AB  1903               	skipnz
  2559  02AC  2AA3               	goto	l148
  2560  02AD  2AAE               	goto	l1621
  2561  02AE                     l1621:	
  2562                           
  2563                           ;spi_master.c: 214: dummy = SSPBUF;
  2564  02AE  0813               	movf	19,w	;volatile
  2565  02AF  00A1               	movwf	??_spi_master_send
  2566  02B0  0821               	movf	??_spi_master_send,w
  2567  02B1  00A2               	movwf	spi_master_send@dummy
  2568  02B2  0008               	return
  2569  02B3                     __end_of_spi_master_send:	
  2570                           
  2571                           	psect	text8
  2572  0EDF                     __ptext8:	
  2573 ;; *************** function _putch *****************
  2574 ;; Defined at:
  2575 ;;		line 53 in file "uart_serial.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  byte            1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  byte            1    0[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2589 ;;      Params:         0       0       0       0       0
  2590 ;;      Locals:         0       1       0       0       0
  2591 ;;      Temps:          0       0       0       0       0
  2592 ;;      Totals:         0       1       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_command
  2600 ;;		_put_string
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function _putch
  2606  0EDF                     _putch:	
  2607                           
  2608                           ;incstack = 0
  2609                           ; Regs used in _putch: [wreg]
  2610                           ;putch@byte stored from wreg
  2611  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0EE1  00A0               	movwf	putch@byte
  2614  0EE2                     l185:	
  2615                           ;uart_serial.c: 56: {
  2616                           ;uart_serial.c: 57: ;
  2617                           
  2618                           ;uart_serial.c: 55: while(!TXIF)
  2619                           
  2620  0EE2  1E0C               	btfss	12,4	;volatile
  2621  0EE3  2EE2               	goto	l185
  2622                           
  2623                           ;uart_serial.c: 58: }
  2624                           ;uart_serial.c: 59: TXREG = byte;
  2625  0EE4  0820               	movf	putch@byte,w
  2626  0EE5  0099               	movwf	25	;volatile
  2627  0EE6  0008               	return
  2628  0EE7                     __end_of_putch:	
  2629                           
  2630                           	psect	text9
  2631  03E3                     __ptext9:	
  2632 ;; *************** function _get_cw_data *****************
  2633 ;; Defined at:
  2634 ;;		line 94 in file "system_protocol.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  buf             2   14[BANK0 ] unsigned int 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       2       0       0       0
  2650 ;;      Temps:          0       1       0       0       0
  2651 ;;      Totals:         0       3       0       0       0
  2652 ;;Total ram usage:        3 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    4
  2655 ;; This function calls:
  2656 ;;		_get_adcon
  2657 ;;		_spi_master_receive
  2658 ;;		_spi_master_start
  2659 ;; This function is called by:
  2660 ;;		_command
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _get_cw_data
  2666  03E3                     _get_cw_data:	
  2667                           
  2668                           ;system_protocol.c: 96: uint16_t buf;
  2669                           ;system_protocol.c: 98: spi_master_start();
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2673  03E3  120A  158A  2744  120A  118A  	fcall	_spi_master_start
  2674                           
  2675                           ;system_protocol.c: 99: cw.power1[0] = spi_master_receive(POW);
  2676  03E8  3004               	movlw	4
  2677  03E9  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2678  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2679  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2680  03F0  00AD               	movwf	??_get_cw_data
  2681  03F1  082D               	movf	??_get_cw_data,w
  2682  03F2  00D8               	movwf	_cw
  2683                           
  2684                           ;system_protocol.c: 100: cw.power1[1] = spi_master_receive(POW);
  2685  03F3  3004               	movlw	4
  2686  03F4  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2687  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2688  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2689  03FB  00AD               	movwf	??_get_cw_data
  2690  03FC  082D               	movf	??_get_cw_data,w
  2691  03FD  00D9               	movwf	_cw+1
  2692                           
  2693                           ;system_protocol.c: 101: cw.power2[0] = spi_master_receive(POW);
  2694  03FE  3004               	movlw	4
  2695  03FF  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2696  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0406  00AD               	movwf	??_get_cw_data
  2699  0407  082D               	movf	??_get_cw_data,w
  2700  0408  00DA               	movwf	_cw+2
  2701                           
  2702                           ;system_protocol.c: 102: cw.power2[1] = spi_master_receive(POW);
  2703  0409  3004               	movlw	4
  2704  040A  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2705  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0411  00AD               	movwf	??_get_cw_data
  2708  0412  082D               	movf	??_get_cw_data,w
  2709  0413  00DB               	movwf	_cw+3
  2710                           
  2711                           ;system_protocol.c: 103: cw.power3[0] = spi_master_receive(POW);
  2712  0414  3004               	movlw	4
  2713  0415  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2714  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2715  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2716  041C  00AD               	movwf	??_get_cw_data
  2717  041D  082D               	movf	??_get_cw_data,w
  2718  041E  00DC               	movwf	_cw+4
  2719                           
  2720                           ;system_protocol.c: 104: cw.power3[1] = spi_master_receive(POW);
  2721  041F  3004               	movlw	4
  2722  0420  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2723  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0427  00AD               	movwf	??_get_cw_data
  2726  0428  082D               	movf	??_get_cw_data,w
  2727  0429  00DD               	movwf	_cw+5
  2728                           
  2729                           ;system_protocol.c: 105: cw.power4[0] = spi_master_receive(POW);
  2730  042A  3004               	movlw	4
  2731  042B  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2732  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0432  00AD               	movwf	??_get_cw_data
  2735  0433  082D               	movf	??_get_cw_data,w
  2736  0434  00DE               	movwf	_cw+6
  2737                           
  2738                           ;system_protocol.c: 106: cw.power4[1] = spi_master_receive(POW);
  2739  0435  3004               	movlw	4
  2740  0436  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2741  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2742  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2743  043D  00AD               	movwf	??_get_cw_data
  2744  043E  082D               	movf	??_get_cw_data,w
  2745  043F  00DF               	movwf	_cw+7
  2746                           
  2747                           ;system_protocol.c: 107: cw.power5[0] = spi_master_receive(POW);
  2748  0440  3004               	movlw	4
  2749  0441  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2750  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0448  00AD               	movwf	??_get_cw_data
  2753  0449  082D               	movf	??_get_cw_data,w
  2754  044A  00E0               	movwf	_cw+8
  2755                           
  2756                           ;system_protocol.c: 108: cw.power5[1] = spi_master_receive(POW);
  2757  044B  3004               	movlw	4
  2758  044C  120A  118A  2217  120A  118A  	fcall	_spi_master_receive
  2759  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0453  00AD               	movwf	??_get_cw_data
  2762  0454  082D               	movf	??_get_cw_data,w
  2763  0455  00E1               	movwf	_cw+9
  2764                           
  2765                           ;system_protocol.c: 109: buf = get_adcon();
  2766  0456  120A  158A  2784   	fcall	_get_adcon
  2767  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2768  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2769  045B  0827               	movf	?_get_adcon+1,w
  2770  045C  00AF               	movwf	get_cw_data@buf+1
  2771  045D  0826               	movf	?_get_adcon,w
  2772  045E  00AE               	movwf	get_cw_data@buf
  2773                           
  2774                           ;system_protocol.c: 110: cw.temp[0] = (uint8_t)(buf >> 8);
  2775  045F  082F               	movf	get_cw_data@buf+1,w
  2776  0460  00AD               	movwf	??_get_cw_data
  2777  0461  082D               	movf	??_get_cw_data,w
  2778  0462  00E2               	movwf	_cw+10
  2779                           
  2780                           ;system_protocol.c: 111: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  2781  0463  082E               	movf	get_cw_data@buf,w
  2782  0464  00AD               	movwf	??_get_cw_data
  2783  0465  082D               	movf	??_get_cw_data,w
  2784  0466  00E3               	movwf	_cw+11
  2785                           
  2786                           ;system_protocol.c: 112: cw.obc2 = 1;
  2787  0467  1464               	bsf	_cw+12,0
  2788                           
  2789                           ;system_protocol.c: 113: cw.powmcu = 1;
  2790  0468  14E4               	bsf	_cw+12,1
  2791  0469  0008               	return
  2792  046A                     __end_of_get_cw_data:	
  2793                           
  2794                           	psect	text10
  2795  0F44                     __ptext10:	
  2796 ;; *************** function _spi_master_start *****************
  2797 ;; Defined at:
  2798 ;;		line 36 in file "spi_master.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;		None               void
  2805 ;; Registers used:
  2806 ;;		None
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    2
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;;		_get_cw_data
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _spi_master_start
  2829  0F44                     _spi_master_start:	
  2830                           
  2831                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _spi_master_start: []
  2835  0F44  1683               	bsf	3,5	;RP0=1, select bank1
  2836  0F45  1303               	bcf	3,6	;RP1=0, select bank1
  2837  0F46  1187               	bcf	7,3	;volatile
  2838                           
  2839                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  2840  0F47  1287               	bcf	7,5	;volatile
  2841                           
  2842                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  2843  0F48  1607               	bsf	7,4	;volatile
  2844                           
  2845                           ;spi_master.c: 44: TRISCbits.TRISC0 = 0;
  2846  0F49  1007               	bcf	7,0	;volatile
  2847                           
  2848                           ;spi_master.c: 45: TRISCbits.TRISC1 = 0;
  2849  0F4A  1087               	bcf	7,1	;volatile
  2850                           
  2851                           ;spi_master.c: 48: SSPCONbits.SSPEN = 0;
  2852  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2853  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2854  0F4D  1294               	bcf	20,5	;volatile
  2855                           
  2856                           ;spi_master.c: 51: SSPSTATbits.SMP = 0;
  2857  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2859  0F50  1394               	bcf	20,7	;volatile
  2860                           
  2861                           ;spi_master.c: 52: SSPCONbits.CKP = 0;
  2862  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0F53  1214               	bcf	20,4	;volatile
  2865                           
  2866                           ;spi_master.c: 53: SSPSTATbits.CKE = 0;
  2867  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  2868  0F55  1303               	bcf	3,6	;RP1=0, select bank1
  2869  0F56  1314               	bcf	20,6	;volatile
  2870                           
  2871                           ;spi_master.c: 56: SSPCONbits.SSPM3 = 0;
  2872  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0F59  1194               	bcf	20,3	;volatile
  2875                           
  2876                           ;spi_master.c: 57: SSPCONbits.SSPM2 = 0;
  2877  0F5A  1114               	bcf	20,2	;volatile
  2878                           
  2879                           ;spi_master.c: 58: SSPCONbits.SSPM1 = 0;
  2880  0F5B  1094               	bcf	20,1	;volatile
  2881                           
  2882                           ;spi_master.c: 59: SSPCONbits.SSPM0 = 0;
  2883  0F5C  1014               	bcf	20,0	;volatile
  2884                           
  2885                           ;spi_master.c: 62: PORTCbits.RC0 = 1;
  2886  0F5D  1407               	bsf	7,0	;volatile
  2887                           
  2888                           ;spi_master.c: 63: PORTCbits.RC1 = 1;
  2889  0F5E  1487               	bsf	7,1	;volatile
  2890                           
  2891                           ;spi_master.c: 66: SSPCONbits.SSPEN = 1;
  2892  0F5F  1694               	bsf	20,5	;volatile
  2893  0F60  0008               	return
  2894  0F61                     __end_of_spi_master_start:	
  2895                           
  2896                           	psect	text11
  2897  0217                     __ptext11:	
  2898 ;; *************** function _spi_master_receive *****************
  2899 ;; Defined at:
  2900 ;;		line 80 in file "spi_master.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  destination     1    wreg     enum E1099
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  destination     1    4[BANK0 ] enum E1099
  2905 ;;  timeout_coun    2    2[BANK0 ] unsigned int 
  2906 ;;  dummy           1    1[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       0       0       0       0
  2917 ;;      Locals:         0       4       0       0       0
  2918 ;;      Temps:          0       1       0       0       0
  2919 ;;      Totals:         0       5       0       0       0
  2920 ;;Total ram usage:        5 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    2
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_get_cw_data
  2927 ;;		_receive_payload
  2928 ;;		_packet_receive_master
  2929 ;;		_COM_status
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           
  2934                           ;psect for function _spi_master_receive
  2935  0217                     _spi_master_receive:	
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  2939                           ;spi_master_receive@destination stored from wreg
  2940  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0219  00A4               	movwf	spi_master_receive@destination
  2943                           
  2944                           ;spi_master.c: 82: uint8_t dummy;
  2945                           ;spi_master.c: 83: uint16_t timeout_counter = 1000;
  2946  021A  30E8               	movlw	232
  2947  021B  00A2               	movwf	spi_master_receive@timeout_counter
  2948  021C  3003               	movlw	3
  2949  021D  00A3               	movwf	spi_master_receive@timeout_counter+1
  2950                           
  2951                           ;spi_master.c: 86: dummy = SSPBUF;
  2952  021E  0813               	movf	19,w	;volatile
  2953  021F  00A0               	movwf	??_spi_master_receive
  2954  0220  0820               	movf	??_spi_master_receive,w
  2955  0221  00A1               	movwf	spi_master_receive@dummy
  2956                           
  2957                           ;spi_master.c: 89: switch(destination)
  2958  0222  2A29               	goto	l1769
  2959  0223                     l103:	
  2960                           ;spi_master.c: 92: while(PORTDbits.RD0 == 0){;}
  2961                           
  2962                           ;spi_master.c: 90: {
  2963                           ;spi_master.c: 91: case COM:
  2964                           
  2965  0223  1808               	btfsc	8,0	;volatile
  2966  0224  2A36               	goto	l1773
  2967  0225  2A23               	goto	l103
  2968  0226                     l108:	
  2969                           ;spi_master.c: 95: while(PORTDbits.RD1 == 0){;}
  2970                           
  2971                           ;spi_master.c: 94: case POW:
  2972                           
  2973                           ;spi_master.c: 93: break;
  2974                           
  2975  0226  1888               	btfsc	8,1	;volatile
  2976  0227  2A36               	goto	l1773
  2977  0228  2A26               	goto	l108
  2978  0229                     l1769:	
  2979                           ;spi_master.c: 97: }
  2980                           
  2981                           ;spi_master.c: 96: break;
  2982                           
  2983  0229  0824               	movf	spi_master_receive@destination,w
  2984                           
  2985                           ; Switch size 1, requested type "space"
  2986                           ; Number of cases is 2, Range of values is 3 to 4
  2987                           ; switch strategies available:
  2988                           ; Name         Instructions Cycles
  2989                           ; simple_byte            7     4 (average)
  2990                           ; direct_byte           17    11 (fixed)
  2991                           ; jumptable            263     9 (fixed)
  2992                           ;	Chosen strategy is simple_byte
  2993  022A  3A03               	xorlw	3	; case 3
  2994  022B  1903               	skipnz
  2995  022C  2A23               	goto	l103
  2996  022D  3A07               	xorlw	7	; case 4
  2997  022E  1903               	skipnz
  2998  022F  2A26               	goto	l108
  2999  0230  2A36               	goto	l1773
  3000                           
  3001                           ;spi_master.c: 100: switch(destination)
  3002  0231  2A36               	goto	l1773
  3003  0232                     l112:	
  3004                           ;spi_master.c: 101: {
  3005                           ;spi_master.c: 102: case COM:
  3006                           
  3007                           
  3008                           ;spi_master.c: 103: PORTCbits.RC0 = 0;
  3009  0232  1007               	bcf	7,0	;volatile
  3010                           
  3011                           ;spi_master.c: 104: break;
  3012  0233  2A3E               	goto	l1775
  3013  0234                     l114:	
  3014                           ;spi_master.c: 105: case POW:
  3015                           
  3016                           
  3017                           ;spi_master.c: 106: PORTCbits.RC1 = 0;
  3018  0234  1087               	bcf	7,1	;volatile
  3019                           
  3020                           ;spi_master.c: 108: }
  3021                           
  3022                           ;spi_master.c: 107: break;
  3023  0235  2A3E               	goto	l1775
  3024  0236                     l1773:	
  3025  0236  0824               	movf	spi_master_receive@destination,w
  3026                           
  3027                           ; Switch size 1, requested type "space"
  3028                           ; Number of cases is 2, Range of values is 3 to 4
  3029                           ; switch strategies available:
  3030                           ; Name         Instructions Cycles
  3031                           ; simple_byte            7     4 (average)
  3032                           ; direct_byte           17    11 (fixed)
  3033                           ; jumptable            263     9 (fixed)
  3034                           ;	Chosen strategy is simple_byte
  3035  0237  3A03               	xorlw	3	; case 3
  3036  0238  1903               	skipnz
  3037  0239  2A32               	goto	l112
  3038  023A  3A07               	xorlw	7	; case 4
  3039  023B  1903               	skipnz
  3040  023C  2A34               	goto	l114
  3041  023D  2A3E               	goto	l1775
  3042  023E                     l1775:	
  3043                           
  3044                           ;spi_master.c: 112: SSPBUF = 0x00;
  3045  023E  0193               	clrf	19	;volatile
  3046  023F                     l1783:	
  3047                           ;spi_master.c: 115: while(SSPSTATbits.BF == 0)
  3048                           
  3049  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3050  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3051  0241  1814               	btfsc	20,0	;volatile
  3052  0242  2A58               	goto	l1787
  3053                           
  3054                           ;spi_master.c: 116: {
  3055                           ;spi_master.c: 118: if(timeout_counter == 0)
  3056  0243  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0244  0822               	movf	spi_master_receive@timeout_counter,w
  3058  0245  0423               	iorwf	spi_master_receive@timeout_counter+1,w
  3059  0246  1903               	btfsc	3,2
  3060  0247  0008               	return
  3061                           
  3062                           ;spi_master.c: 121: }
  3063                           ;spi_master.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3064                           
  3065                           ;spi_master.c: 119: {
  3066                           ;spi_master.c: 120: return;
  3067  0248  2A49               	nop2	;2 cycle nop
  3068  0249  2A4A               	nop2	;2 cycle nop
  3069  024A  0000               	nop
  3070                           
  3071                           ;spi_master.c: 125: timeout_counter--;
  3072  024B  3001               	movlw	1
  3073  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3074  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3075  024E  02A2               	subwf	spi_master_receive@timeout_counter,f
  3076  024F  3000               	movlw	0
  3077  0250  1C03               	skipc
  3078  0251  03A3               	decf	spi_master_receive@timeout_counter+1,f
  3079  0252  02A3               	subwf	spi_master_receive@timeout_counter+1,f
  3080  0253  2A3F               	goto	l1783
  3081  0254                     l121:	
  3082                           ;spi_master.c: 130: {
  3083                           ;spi_master.c: 131: case COM:
  3084                           
  3085                           ;spi_master.c: 126: }
  3086                           ;spi_master.c: 129: switch(destination)
  3087                           
  3088                           
  3089                           ;spi_master.c: 132: PORTCbits.RC0 = 1;
  3090  0254  1407               	bsf	7,0	;volatile
  3091                           
  3092                           ;spi_master.c: 133: break;
  3093  0255  2A61               	goto	l1789
  3094  0256                     l123:	
  3095                           ;spi_master.c: 134: case POW:
  3096                           
  3097                           
  3098                           ;spi_master.c: 135: PORTCbits.RC1 = 1;
  3099  0256  1487               	bsf	7,1	;volatile
  3100                           
  3101                           ;spi_master.c: 137: }
  3102                           
  3103                           ;spi_master.c: 136: break;
  3104  0257  2A61               	goto	l1789
  3105  0258                     l1787:	
  3106  0258  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0259  0824               	movf	spi_master_receive@destination,w
  3108                           
  3109                           ; Switch size 1, requested type "space"
  3110                           ; Number of cases is 2, Range of values is 3 to 4
  3111                           ; switch strategies available:
  3112                           ; Name         Instructions Cycles
  3113                           ; simple_byte            7     4 (average)
  3114                           ; direct_byte           17    11 (fixed)
  3115                           ; jumptable            263     9 (fixed)
  3116                           ;	Chosen strategy is simple_byte
  3117  025A  3A03               	xorlw	3	; case 3
  3118  025B  1903               	skipnz
  3119  025C  2A54               	goto	l121
  3120  025D  3A07               	xorlw	7	; case 4
  3121  025E  1903               	skipnz
  3122  025F  2A56               	goto	l123
  3123  0260  2A61               	goto	l1789
  3124  0261                     l1789:	
  3125                           
  3126                           ;spi_master.c: 139: return SSPBUF;
  3127  0261  0813               	movf	19,w	;volatile
  3128  0262  0008               	return
  3129  0263                     __end_of_spi_master_receive:	
  3130                           
  3131                           	psect	text12
  3132  0F84                     __ptext12:	
  3133 ;; *************** function _get_adcon *****************
  3134 ;; Defined at:
  3135 ;;		line 91 in file "AD_value.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  voltage_valu    3    0        unsigned char 
  3140 ;;  ad_value        2   11[BANK0 ] unsigned int 
  3141 ;;  my_adres        2    9[BANK0 ] struct .
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    6[BANK0 ] unsigned int 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       2       0       0       0
  3152 ;;      Locals:         0       4       0       0       0
  3153 ;;      Temps:          0       1       0       0       0
  3154 ;;      Totals:         0       7       0       0       0
  3155 ;;Total ram usage:        7 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		_bit_shift
  3160 ;; This function is called by:
  3161 ;;		_get_cw_data
  3162 ;;		_get_pt
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _get_adcon
  3168  0F84                     _get_adcon:	
  3169                           
  3170                           ;AD_value.c: 94: uint16_t ad_value = 0b0000000000;
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3174  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0F86  01AB               	clrf	get_adcon@ad_value
  3177  0F87  01AC               	clrf	get_adcon@ad_value+1
  3178                           
  3179                           ;AD_value.c: 95: double voltage_value;
  3180                           ;AD_value.c: 96: adres_t my_adres;
  3181                           ;AD_value.c: 99: ADCON0 = 0b10000001;
  3182  0F88  3081               	movlw	129
  3183  0F89  009F               	movwf	31	;volatile
  3184                           
  3185                           ;AD_value.c: 100: ADCON0bits.GO_DONE = 1;
  3186  0F8A  151F               	bsf	31,2	;volatile
  3187  0F8B                     l78:	
  3188                           ;AD_value.c: 103: while(ADCON0bits.GO_DONE){;}
  3189                           
  3190  0F8B  191F               	btfsc	31,2	;volatile
  3191  0F8C  2F8B               	goto	l78
  3192                           
  3193                           ;AD_value.c: 106: my_adres.my_adres_h = ADRESH;
  3194  0F8D  081E               	movf	30,w	;volatile
  3195  0F8E  00A8               	movwf	??_get_adcon
  3196  0F8F  0828               	movf	??_get_adcon,w
  3197  0F90  00A9               	movwf	get_adcon@my_adres
  3198                           
  3199                           ;AD_value.c: 107: my_adres.my_adres_l = ADRESL;
  3200  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  3201  0F92  1303               	bcf	3,6	;RP1=0, select bank1
  3202  0F93  081E               	movf	30,w	;volatile
  3203  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0F96  00A8               	movwf	??_get_adcon
  3206  0F97  0828               	movf	??_get_adcon,w
  3207  0F98  00AA               	movwf	get_adcon@my_adres+1
  3208                           
  3209                           ;AD_value.c: 108: bit_shift(&ad_value, &my_adres);
  3210  0F99  3029               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  3211  0F9A  00A8               	movwf	??_get_adcon
  3212  0F9B  0828               	movf	??_get_adcon,w
  3213  0F9C  00A0               	movwf	bit_shift@p_adres
  3214  0F9D  302B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  3215  0F9E  120A  118A  2096   	fcall	_bit_shift
  3216                           
  3217                           ;AD_value.c: 110: return ad_value;
  3218  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0FA3  082C               	movf	get_adcon@ad_value+1,w
  3221  0FA4  00A7               	movwf	?_get_adcon+1
  3222  0FA5  082B               	movf	get_adcon@ad_value,w
  3223  0FA6  00A6               	movwf	?_get_adcon
  3224  0FA7  0008               	return
  3225  0FA8                     __end_of_get_adcon:	
  3226                           
  3227                           	psect	text13
  3228  0096                     __ptext13:	
  3229 ;; *************** function _bit_shift *****************
  3230 ;; Defined at:
  3231 ;;		line 71 in file "AD_value.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  p_ad_value      1    wreg     PTR unsigned int 
  3234 ;;		 -> get_adcon@ad_value(2), 
  3235 ;;  p_adres         1    0[BANK0 ] PTR struct .
  3236 ;;		 -> get_adcon@my_adres(2), 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  p_ad_value      1    5[BANK0 ] PTR unsigned int 
  3239 ;;		 -> get_adcon@ad_value(2), 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;		None               void
  3242 ;; Registers used:
  3243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       1       0       0       0
  3250 ;;      Locals:         0       1       0       0       0
  3251 ;;      Temps:          0       4       0       0       0
  3252 ;;      Totals:         0       6       0       0       0
  3253 ;;Total ram usage:        6 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    2
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_get_adcon
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _bit_shift
  3265  0096                     _bit_shift:	
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  3269                           ;bit_shift@p_ad_value stored from wreg
  3270  0096  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0097  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0098  00A5               	movwf	bit_shift@p_ad_value
  3273                           
  3274                           ;AD_value.c: 73: const uint8_t bit_mask_for_l = 0b00000011;
  3275                           ;AD_value.c: 75: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  3276  0099  0820               	movf	bit_shift@p_adres,w
  3277  009A  0084               	movwf	4
  3278  009B  1383               	bcf	3,7	;select IRP bank0
  3279  009C  0800               	movf	0,w
  3280  009D  00A1               	movwf	??_bit_shift
  3281  009E  01A2               	clrf	??_bit_shift+1
  3282  009F  0825               	movf	bit_shift@p_ad_value,w
  3283  00A0  0084               	movwf	4
  3284  00A1  0821               	movf	??_bit_shift,w
  3285  00A2  0080               	movwf	0
  3286  00A3  0A84               	incf	4,f
  3287  00A4  0822               	movf	??_bit_shift+1,w
  3288  00A5  0080               	movwf	0
  3289                           
  3290                           ;AD_value.c: 76: *p_ad_value <<= 2;
  3291  00A6  0825               	movf	bit_shift@p_ad_value,w
  3292  00A7  0084               	movwf	4
  3293  00A8  3002               	movlw	2
  3294  00A9                     u915:	
  3295  00A9  1003               	clrc
  3296  00AA  0D80               	rlf	0,f
  3297  00AB  0A84               	incf	4,f
  3298  00AC  0D80               	rlf	0,f
  3299  00AD  0384               	decf	4,f
  3300  00AE  3EFF               	addlw	-1
  3301  00AF  1D03               	skipz
  3302  00B0  28A9               	goto	u915
  3303                           
  3304                           ;AD_value.c: 77: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  3305  00B1  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  3306  00B2  0084               	movwf	4
  3307  00B3  120A  158A  2000  120A  118A  	fcall	stringdir
  3308  00B8  00A1               	movwf	??_bit_shift
  3309  00B9  0A20               	incf	bit_shift@p_adres,w
  3310  00BA  0084               	movwf	4
  3311  00BB  0800               	movf	0,w
  3312  00BC  00A2               	movwf	??_bit_shift+1
  3313  00BD  3006               	movlw	6
  3314  00BE                     u925:	
  3315  00BE  1003               	clrc
  3316  00BF  0CA2               	rrf	??_bit_shift+1,f
  3317  00C0  3EFF               	addlw	-1
  3318  00C1  1D03               	skipz
  3319  00C2  28BE               	goto	u925
  3320  00C3  0822               	movf	??_bit_shift+1,w
  3321  00C4  0521               	andwf	??_bit_shift,w
  3322  00C5  00A3               	movwf	??_bit_shift+2
  3323  00C6  01A4               	clrf	??_bit_shift+3
  3324  00C7  0825               	movf	bit_shift@p_ad_value,w
  3325  00C8  0084               	movwf	4
  3326  00C9  0823               	movf	??_bit_shift+2,w
  3327  00CA  0480               	iorwf	0,f
  3328  00CB  0A84               	incf	4,f
  3329  00CC  0824               	movf	??_bit_shift+3,w
  3330  00CD  0480               	iorwf	0,f
  3331  00CE  0008               	return
  3332  00CF                     __end_of_bit_shift:	
  3333                           
  3334                           	psect	text14
  3335  046A                     __ptext14:	
  3336 ;; *************** function _cw_data_set *****************
  3337 ;; Defined at:
  3338 ;;		line 180 in file "system_protocol.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  p_cw_data       1    wreg     PTR struct .
  3341 ;;		 -> cw(13), 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  p_cw_data       1    5[BANK0 ] PTR struct .
  3344 ;;		 -> cw(13), 
  3345 ;;  i               1    0        unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       1       0       0       0
  3357 ;;      Temps:          0       1       0       0       0
  3358 ;;      Totals:         0       2       0       0       0
  3359 ;;Total ram usage:        2 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    3
  3362 ;; This function calls:
  3363 ;;		_uint8_data_set
  3364 ;; This function is called by:
  3365 ;;		_command
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _cw_data_set
  3371  046A                     _cw_data_set:	
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3375                           ;cw_data_set@p_cw_data stored from wreg
  3376  046A  1283               	bcf	3,5	;RP0=0, select bank0
  3377  046B  1303               	bcf	3,6	;RP1=0, select bank0
  3378  046C  00A5               	movwf	cw_data_set@p_cw_data
  3379                           
  3380                           ;system_protocol.c: 182: uint8_t i;
  3381                           ;system_protocol.c: 185: uint8_data_set(&(p_cw_data->power1), 2);
  3382  046D  0825               	movf	cw_data_set@p_cw_data,w
  3383  046E  00A0               	movwf	uint8_data_set@p_data
  3384  046F  3000               	movlw	0
  3385  0470  00A1               	movwf	uint8_data_set@p_data+1
  3386  0471  3002               	movlw	2
  3387  0472  00A4               	movwf	??_cw_data_set
  3388  0473  0824               	movf	??_cw_data_set,w
  3389  0474  00A2               	movwf	uint8_data_set@data_len
  3390  0475  120A  158A  27A8  120A  118A  	fcall	_uint8_data_set
  3391                           
  3392                           ;system_protocol.c: 186: uint8_data_set(&(p_cw_data->power2), 2);
  3393  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3394  047B  1303               	bcf	3,6	;RP1=0, select bank0
  3395  047C  0825               	movf	cw_data_set@p_cw_data,w
  3396  047D  3E02               	addlw	2
  3397  047E  00A0               	movwf	uint8_data_set@p_data
  3398  047F  3000               	movlw	0
  3399  0480  00A1               	movwf	uint8_data_set@p_data+1
  3400  0481  3002               	movlw	2
  3401  0482  00A4               	movwf	??_cw_data_set
  3402  0483  0824               	movf	??_cw_data_set,w
  3403  0484  00A2               	movwf	uint8_data_set@data_len
  3404  0485  120A  158A  27A8  120A  118A  	fcall	_uint8_data_set
  3405                           
  3406                           ;system_protocol.c: 187: uint8_data_set(&(p_cw_data->power3), 2);
  3407  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3408  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3409  048C  0825               	movf	cw_data_set@p_cw_data,w
  3410  048D  3E04               	addlw	4
  3411  048E  00A0               	movwf	uint8_data_set@p_data
  3412  048F  3000               	movlw	0
  3413  0490  00A1               	movwf	uint8_data_set@p_data+1
  3414  0491  3002               	movlw	2
  3415  0492  00A4               	movwf	??_cw_data_set
  3416  0493  0824               	movf	??_cw_data_set,w
  3417  0494  00A2               	movwf	uint8_data_set@data_len
  3418  0495  120A  158A  27A8  120A  118A  	fcall	_uint8_data_set
  3419                           
  3420                           ;system_protocol.c: 188: uint8_data_set(&(p_cw_data->power4), 2);
  3421  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3422  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3423  049C  0825               	movf	cw_data_set@p_cw_data,w
  3424  049D  3E06               	addlw	6
  3425  049E  00A0               	movwf	uint8_data_set@p_data
  3426  049F  3000               	movlw	0
  3427  04A0  00A1               	movwf	uint8_data_set@p_data+1
  3428  04A1  3002               	movlw	2
  3429  04A2  00A4               	movwf	??_cw_data_set
  3430  04A3  0824               	movf	??_cw_data_set,w
  3431  04A4  00A2               	movwf	uint8_data_set@data_len
  3432  04A5  120A  158A  27A8  120A  118A  	fcall	_uint8_data_set
  3433                           
  3434                           ;system_protocol.c: 189: uint8_data_set(&(p_cw_data->power5), 2);
  3435  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3436  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3437  04AC  0825               	movf	cw_data_set@p_cw_data,w
  3438  04AD  3E08               	addlw	8
  3439  04AE  00A0               	movwf	uint8_data_set@p_data
  3440  04AF  3000               	movlw	0
  3441  04B0  00A1               	movwf	uint8_data_set@p_data+1
  3442  04B1  3002               	movlw	2
  3443  04B2  00A4               	movwf	??_cw_data_set
  3444  04B3  0824               	movf	??_cw_data_set,w
  3445  04B4  00A2               	movwf	uint8_data_set@data_len
  3446  04B5  120A  158A  27A8  120A  118A  	fcall	_uint8_data_set
  3447                           
  3448                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->temp), 2);
  3449  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3450  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3451  04BC  0825               	movf	cw_data_set@p_cw_data,w
  3452  04BD  3E0A               	addlw	10
  3453  04BE  00A0               	movwf	uint8_data_set@p_data
  3454  04BF  3000               	movlw	0
  3455  04C0  00A1               	movwf	uint8_data_set@p_data+1
  3456  04C1  3002               	movlw	2
  3457  04C2  00A4               	movwf	??_cw_data_set
  3458  04C3  0824               	movf	??_cw_data_set,w
  3459  04C4  00A2               	movwf	uint8_data_set@data_len
  3460  04C5  120A  158A  27A8  120A  118A  	fcall	_uint8_data_set
  3461                           
  3462                           ;system_protocol.c: 195: packet.payload[index_pos++] = 1;
  3463  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3464  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3465  04CC  0857               	movf	_index_pos,w
  3466  04CD  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3467  04CE  0084               	movwf	4
  3468  04CF  1383               	bcf	3,7	;select IRP bank1
  3469  04D0  0180               	clrf	0
  3470  04D1  0A80               	incf	0,f
  3471  04D2  3001               	movlw	1
  3472  04D3  00A4               	movwf	??_cw_data_set
  3473  04D4  0824               	movf	??_cw_data_set,w
  3474  04D5  07D7               	addwf	_index_pos,f
  3475                           
  3476                           ;system_protocol.c: 196: packet.payload[index_pos++] = cw.obc2;
  3477  04D6  0857               	movf	_index_pos,w
  3478  04D7  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3479  04D8  0084               	movwf	4
  3480  04D9  3000               	movlw	0
  3481  04DA  1864               	btfsc	_cw+12,0
  3482  04DB  3001               	movlw	1
  3483  04DC  0080               	movwf	0
  3484  04DD  3001               	movlw	1
  3485  04DE  00A4               	movwf	??_cw_data_set
  3486  04DF  0824               	movf	??_cw_data_set,w
  3487  04E0  07D7               	addwf	_index_pos,f
  3488                           
  3489                           ;system_protocol.c: 199: packet.payload[index_pos++] = 1;
  3490  04E1  0857               	movf	_index_pos,w
  3491  04E2  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3492  04E3  0084               	movwf	4
  3493  04E4  0180               	clrf	0
  3494  04E5  0A80               	incf	0,f
  3495  04E6  3001               	movlw	1
  3496  04E7  00A4               	movwf	??_cw_data_set
  3497  04E8  0824               	movf	??_cw_data_set,w
  3498  04E9  07D7               	addwf	_index_pos,f
  3499                           
  3500                           ;system_protocol.c: 200: packet.payload[index_pos++] = cw.powmcu;
  3501  04EA  0857               	movf	_index_pos,w
  3502  04EB  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  3503  04EC  0084               	movwf	4
  3504  04ED  3000               	movlw	0
  3505  04EE  18E4               	btfsc	_cw+12,1
  3506  04EF  3001               	movlw	1
  3507  04F0  0080               	movwf	0
  3508  04F1  3001               	movlw	1
  3509  04F2  00A4               	movwf	??_cw_data_set
  3510  04F3  0824               	movf	??_cw_data_set,w
  3511  04F4  07D7               	addwf	_index_pos,f
  3512  04F5  0008               	return
  3513  04F6                     __end_of_cw_data_set:	
  3514                           
  3515                           	psect	text15
  3516  02B3                     __ptext15:	
  3517 ;; *************** function ___ftge *****************
  3518 ;; Defined at:
  3519 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  ff1             3    0[BANK0 ] float 
  3522 ;;  ff2             3    3[BANK0 ] float 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;		None               void
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         0       6       0       0       0
  3535 ;;      Locals:         0       0       0       0       0
  3536 ;;      Temps:          0       6       0       0       0
  3537 ;;      Totals:         0      12       0       0       0
  3538 ;;Total ram usage:       12 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    2
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_command
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function ___ftge
  3550  02B3                     ___ftge:	
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3554  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3555  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3556  02B5  1FA2               	btfss	___ftge@ff1+2,7
  3557  02B6  2ADC               	goto	l1963
  3558  02B7  3000               	movlw	0
  3559  02B8  00A6               	movwf	??___ftge
  3560  02B9  3000               	movlw	0
  3561  02BA  00A7               	movwf	??___ftge+1
  3562  02BB  3080               	movlw	128
  3563  02BC  00A8               	movwf	??___ftge+2
  3564  02BD  0920               	comf	___ftge@ff1,w
  3565  02BE  00A9               	movwf	??___ftge+3
  3566  02BF  0921               	comf	___ftge@ff1+1,w
  3567  02C0  00AA               	movwf	??___ftge+4
  3568  02C1  0922               	comf	___ftge@ff1+2,w
  3569  02C2  00AB               	movwf	??___ftge+5
  3570  02C3  0AA9               	incf	??___ftge+3,f
  3571  02C4  1903               	skipnz
  3572  02C5  0AAA               	incf	??___ftge+4,f
  3573  02C6  1903               	skipnz
  3574  02C7  0AAB               	incf	??___ftge+5,f
  3575  02C8  0829               	movf	??___ftge+3,w
  3576  02C9  07A6               	addwf	??___ftge,f
  3577  02CA  082A               	movf	??___ftge+4,w
  3578  02CB  1803               	skipnc
  3579  02CC  0F2A               	incfsz	??___ftge+4,w
  3580  02CD  2ACF               	goto	u1381
  3581  02CE  2AD0               	goto	u1382
  3582  02CF                     u1381:	
  3583  02CF  07A7               	addwf	??___ftge+1,f
  3584  02D0                     u1382:	
  3585  02D0  082B               	movf	??___ftge+5,w
  3586  02D1  1803               	skipnc
  3587  02D2  0F2B               	incfsz	??___ftge+5,w
  3588  02D3  2AD5               	goto	u1383
  3589  02D4  2AD6               	goto	u1384
  3590  02D5                     u1383:	
  3591  02D5  07A8               	addwf	??___ftge+2,f
  3592  02D6                     u1384:	
  3593  02D6  0826               	movf	??___ftge,w
  3594  02D7  00A0               	movwf	___ftge@ff1
  3595  02D8  0827               	movf	??___ftge+1,w
  3596  02D9  00A1               	movwf	___ftge@ff1+1
  3597  02DA  0828               	movf	??___ftge+2,w
  3598  02DB  00A2               	movwf	___ftge@ff1+2
  3599  02DC                     l1963:	
  3600  02DC  1FA5               	btfss	___ftge@ff2+2,7
  3601  02DD  2B03               	goto	l1967
  3602  02DE  3000               	movlw	0
  3603  02DF  00A6               	movwf	??___ftge
  3604  02E0  3000               	movlw	0
  3605  02E1  00A7               	movwf	??___ftge+1
  3606  02E2  3080               	movlw	128
  3607  02E3  00A8               	movwf	??___ftge+2
  3608  02E4  0923               	comf	___ftge@ff2,w
  3609  02E5  00A9               	movwf	??___ftge+3
  3610  02E6  0924               	comf	___ftge@ff2+1,w
  3611  02E7  00AA               	movwf	??___ftge+4
  3612  02E8  0925               	comf	___ftge@ff2+2,w
  3613  02E9  00AB               	movwf	??___ftge+5
  3614  02EA  0AA9               	incf	??___ftge+3,f
  3615  02EB  1903               	skipnz
  3616  02EC  0AAA               	incf	??___ftge+4,f
  3617  02ED  1903               	skipnz
  3618  02EE  0AAB               	incf	??___ftge+5,f
  3619  02EF  0829               	movf	??___ftge+3,w
  3620  02F0  07A6               	addwf	??___ftge,f
  3621  02F1  082A               	movf	??___ftge+4,w
  3622  02F2  1803               	skipnc
  3623  02F3  0F2A               	incfsz	??___ftge+4,w
  3624  02F4  2AF6               	goto	u1401
  3625  02F5  2AF7               	goto	u1402
  3626  02F6                     u1401:	
  3627  02F6  07A7               	addwf	??___ftge+1,f
  3628  02F7                     u1402:	
  3629  02F7  082B               	movf	??___ftge+5,w
  3630  02F8  1803               	skipnc
  3631  02F9  0F2B               	incfsz	??___ftge+5,w
  3632  02FA  2AFC               	goto	u1403
  3633  02FB  2AFD               	goto	u1404
  3634  02FC                     u1403:	
  3635  02FC  07A8               	addwf	??___ftge+2,f
  3636  02FD                     u1404:	
  3637  02FD  0826               	movf	??___ftge,w
  3638  02FE  00A3               	movwf	___ftge@ff2
  3639  02FF  0827               	movf	??___ftge+1,w
  3640  0300  00A4               	movwf	___ftge@ff2+1
  3641  0301  0828               	movf	??___ftge+2,w
  3642  0302  00A5               	movwf	___ftge@ff2+2
  3643  0303                     l1967:	
  3644  0303  3080               	movlw	128
  3645  0304  06A2               	xorwf	___ftge@ff1+2,f
  3646  0305  3080               	movlw	128
  3647  0306  06A5               	xorwf	___ftge@ff2+2,f
  3648  0307  0825               	movf	___ftge@ff2+2,w
  3649  0308  0222               	subwf	___ftge@ff1+2,w
  3650  0309  1D03               	skipz
  3651  030A  0008               	return
  3652  030B  0824               	movf	___ftge@ff2+1,w
  3653  030C  0221               	subwf	___ftge@ff1+1,w
  3654  030D  1D03               	skipz
  3655  030E  0008               	return
  3656  030F  0823               	movf	___ftge@ff2,w
  3657  0310  0220               	subwf	___ftge@ff1,w
  3658  0311  0008               	return
  3659  0312                     __end_of___ftge:	
  3660                           
  3661                           	psect	text16
  3662  04F6                     __ptext16:	
  3663 ;; *************** function ___ftdiv *****************
  3664 ;; Defined at:
  3665 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  f2              3   16[BANK0 ] float 
  3668 ;;  f1              3   19[BANK0 ] float 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  f3              3   27[BANK0 ] float 
  3671 ;;  sign            1   31[BANK0 ] unsigned char 
  3672 ;;  exp             1   30[BANK0 ] unsigned char 
  3673 ;;  cntr            1   26[BANK0 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  3   16[BANK0 ] float 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       6       0       0       0
  3684 ;;      Locals:         0       6       0       0       0
  3685 ;;      Temps:          0       4       0       0       0
  3686 ;;      Totals:         0      16       0       0       0
  3687 ;;Total ram usage:       16 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    3
  3690 ;; This function calls:
  3691 ;;		___ftpack
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;;		_command
  3695 ;;		_get_pt
  3696 ;;		_get_temp
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function ___ftdiv
  3702  04F6                     ___ftdiv:	
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3706  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3707  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3708  04F8  0833               	movf	___ftdiv@f1,w
  3709  04F9  00B6               	movwf	??___ftdiv
  3710  04FA  0834               	movf	___ftdiv@f1+1,w
  3711  04FB  00B7               	movwf	??___ftdiv+1
  3712  04FC  0835               	movf	___ftdiv@f1+2,w
  3713  04FD  00B8               	movwf	??___ftdiv+2
  3714  04FE  1003               	clrc
  3715  04FF  0D37               	rlf	??___ftdiv+1,w
  3716  0500  0D38               	rlf	??___ftdiv+2,w
  3717  0501  00B9               	movwf	??___ftdiv+3
  3718  0502  0839               	movf	??___ftdiv+3,w
  3719  0503  00BE               	movwf	___ftdiv@exp
  3720  0504  083E               	movf	___ftdiv@exp,w
  3721  0505  1D03               	btfss	3,2
  3722  0506  2D0E               	goto	l1923
  3723  0507  3000               	movlw	0
  3724  0508  00B0               	movwf	?___ftdiv
  3725  0509  3000               	movlw	0
  3726  050A  00B1               	movwf	?___ftdiv+1
  3727  050B  3000               	movlw	0
  3728  050C  00B2               	movwf	?___ftdiv+2
  3729  050D  0008               	return
  3730  050E                     l1923:	
  3731  050E  0830               	movf	___ftdiv@f2,w
  3732  050F  00B6               	movwf	??___ftdiv
  3733  0510  0831               	movf	___ftdiv@f2+1,w
  3734  0511  00B7               	movwf	??___ftdiv+1
  3735  0512  0832               	movf	___ftdiv@f2+2,w
  3736  0513  00B8               	movwf	??___ftdiv+2
  3737  0514  1003               	clrc
  3738  0515  0D37               	rlf	??___ftdiv+1,w
  3739  0516  0D38               	rlf	??___ftdiv+2,w
  3740  0517  00B9               	movwf	??___ftdiv+3
  3741  0518  0839               	movf	??___ftdiv+3,w
  3742  0519  00BF               	movwf	___ftdiv@sign
  3743  051A  083F               	movf	___ftdiv@sign,w
  3744  051B  1D03               	btfss	3,2
  3745  051C  2D24               	goto	l1929
  3746  051D  3000               	movlw	0
  3747  051E  00B0               	movwf	?___ftdiv
  3748  051F  3000               	movlw	0
  3749  0520  00B1               	movwf	?___ftdiv+1
  3750  0521  3000               	movlw	0
  3751  0522  00B2               	movwf	?___ftdiv+2
  3752  0523  0008               	return
  3753  0524                     l1929:	
  3754  0524  3000               	movlw	0
  3755  0525  00BB               	movwf	___ftdiv@f3
  3756  0526  3000               	movlw	0
  3757  0527  00BC               	movwf	___ftdiv@f3+1
  3758  0528  3000               	movlw	0
  3759  0529  00BD               	movwf	___ftdiv@f3+2
  3760  052A  3089               	movlw	137
  3761  052B  073F               	addwf	___ftdiv@sign,w
  3762  052C  00B6               	movwf	??___ftdiv
  3763  052D  0836               	movf	??___ftdiv,w
  3764  052E  02BE               	subwf	___ftdiv@exp,f
  3765  052F  0833               	movf	___ftdiv@f1,w
  3766  0530  00B6               	movwf	??___ftdiv
  3767  0531  0834               	movf	___ftdiv@f1+1,w
  3768  0532  00B7               	movwf	??___ftdiv+1
  3769  0533  0835               	movf	___ftdiv@f1+2,w
  3770  0534  00B8               	movwf	??___ftdiv+2
  3771  0535  3010               	movlw	16
  3772  0536                     u1315:	
  3773  0536  1003               	clrc
  3774  0537  0CB8               	rrf	??___ftdiv+2,f
  3775  0538  0CB7               	rrf	??___ftdiv+1,f
  3776  0539  0CB6               	rrf	??___ftdiv,f
  3777  053A  3EFF               	addlw	-1
  3778  053B  1D03               	skipz
  3779  053C  2D36               	goto	u1315
  3780  053D  0836               	movf	??___ftdiv,w
  3781  053E  00B9               	movwf	??___ftdiv+3
  3782  053F  0839               	movf	??___ftdiv+3,w
  3783  0540  00BF               	movwf	___ftdiv@sign
  3784  0541  0830               	movf	___ftdiv@f2,w
  3785  0542  00B6               	movwf	??___ftdiv
  3786  0543  0831               	movf	___ftdiv@f2+1,w
  3787  0544  00B7               	movwf	??___ftdiv+1
  3788  0545  0832               	movf	___ftdiv@f2+2,w
  3789  0546  00B8               	movwf	??___ftdiv+2
  3790  0547  3010               	movlw	16
  3791  0548                     u1325:	
  3792  0548  1003               	clrc
  3793  0549  0CB8               	rrf	??___ftdiv+2,f
  3794  054A  0CB7               	rrf	??___ftdiv+1,f
  3795  054B  0CB6               	rrf	??___ftdiv,f
  3796  054C  3EFF               	addlw	-1
  3797  054D  1D03               	skipz
  3798  054E  2D48               	goto	u1325
  3799  054F  0836               	movf	??___ftdiv,w
  3800  0550  00B9               	movwf	??___ftdiv+3
  3801  0551  0839               	movf	??___ftdiv+3,w
  3802  0552  06BF               	xorwf	___ftdiv@sign,f
  3803  0553  3080               	movlw	128
  3804  0554  00B6               	movwf	??___ftdiv
  3805  0555  0836               	movf	??___ftdiv,w
  3806  0556  05BF               	andwf	___ftdiv@sign,f
  3807  0557  17B4               	bsf	___ftdiv@f1+1,7
  3808  0558  30FF               	movlw	255
  3809  0559  05B3               	andwf	___ftdiv@f1,f
  3810  055A  30FF               	movlw	255
  3811  055B  05B4               	andwf	___ftdiv@f1+1,f
  3812  055C  3000               	movlw	0
  3813  055D  05B5               	andwf	___ftdiv@f1+2,f
  3814  055E  17B1               	bsf	___ftdiv@f2+1,7
  3815  055F  30FF               	movlw	255
  3816  0560  05B0               	andwf	___ftdiv@f2,f
  3817  0561  30FF               	movlw	255
  3818  0562  05B1               	andwf	___ftdiv@f2+1,f
  3819  0563  3000               	movlw	0
  3820  0564  05B2               	andwf	___ftdiv@f2+2,f
  3821  0565  3018               	movlw	24
  3822  0566  00B6               	movwf	??___ftdiv
  3823  0567  0836               	movf	??___ftdiv,w
  3824  0568  00BA               	movwf	___ftdiv@cntr
  3825  0569                     l1943:	
  3826  0569  3001               	movlw	1
  3827  056A                     u1335:	
  3828  056A  1003               	clrc
  3829  056B  0DBB               	rlf	___ftdiv@f3,f
  3830  056C  0DBC               	rlf	___ftdiv@f3+1,f
  3831  056D  0DBD               	rlf	___ftdiv@f3+2,f
  3832  056E  3EFF               	addlw	-1
  3833  056F  1D03               	skipz
  3834  0570  2D6A               	goto	u1335
  3835  0571  0832               	movf	___ftdiv@f2+2,w
  3836  0572  0235               	subwf	___ftdiv@f1+2,w
  3837  0573  1D03               	skipz
  3838  0574  2D7B               	goto	u1345
  3839  0575  0831               	movf	___ftdiv@f2+1,w
  3840  0576  0234               	subwf	___ftdiv@f1+1,w
  3841  0577  1D03               	skipz
  3842  0578  2D7B               	goto	u1345
  3843  0579  0830               	movf	___ftdiv@f2,w
  3844  057A  0233               	subwf	___ftdiv@f1,w
  3845  057B                     u1345:	
  3846  057B  1C03               	skipc
  3847  057C  2D88               	goto	l1951
  3848  057D  0830               	movf	___ftdiv@f2,w
  3849  057E  02B3               	subwf	___ftdiv@f1,f
  3850  057F  0831               	movf	___ftdiv@f2+1,w
  3851  0580  1C03               	skipc
  3852  0581  0F31               	incfsz	___ftdiv@f2+1,w
  3853  0582  02B4               	subwf	___ftdiv@f1+1,f
  3854  0583  0832               	movf	___ftdiv@f2+2,w
  3855  0584  1C03               	skipc
  3856  0585  0A32               	incf	___ftdiv@f2+2,w
  3857  0586  02B5               	subwf	___ftdiv@f1+2,f
  3858  0587  143B               	bsf	___ftdiv@f3,0
  3859  0588                     l1951:	
  3860  0588  3001               	movlw	1
  3861  0589                     u1355:	
  3862  0589  1003               	clrc
  3863  058A  0DB3               	rlf	___ftdiv@f1,f
  3864  058B  0DB4               	rlf	___ftdiv@f1+1,f
  3865  058C  0DB5               	rlf	___ftdiv@f1+2,f
  3866  058D  3EFF               	addlw	-1
  3867  058E  1D03               	skipz
  3868  058F  2D89               	goto	u1355
  3869  0590  3001               	movlw	1
  3870  0591  02BA               	subwf	___ftdiv@cntr,f
  3871  0592  1D03               	btfss	3,2
  3872  0593  2D69               	goto	l1943
  3873  0594  083B               	movf	___ftdiv@f3,w
  3874  0595  00A0               	movwf	___ftpack@arg
  3875  0596  083C               	movf	___ftdiv@f3+1,w
  3876  0597  00A1               	movwf	___ftpack@arg+1
  3877  0598  083D               	movf	___ftdiv@f3+2,w
  3878  0599  00A2               	movwf	___ftpack@arg+2
  3879  059A  083E               	movf	___ftdiv@exp,w
  3880  059B  00B6               	movwf	??___ftdiv
  3881  059C  0836               	movf	??___ftdiv,w
  3882  059D  00A3               	movwf	___ftpack@exp
  3883  059E  083F               	movf	___ftdiv@sign,w
  3884  059F  00B7               	movwf	??___ftdiv+1
  3885  05A0  0837               	movf	??___ftdiv+1,w
  3886  05A1  00A4               	movwf	___ftpack@sign
  3887  05A2  120A  118A  2375   	fcall	___ftpack
  3888  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3889  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3890  05A7  0820               	movf	?___ftpack,w
  3891  05A8  00B0               	movwf	?___ftdiv
  3892  05A9  0821               	movf	?___ftpack+1,w
  3893  05AA  00B1               	movwf	?___ftdiv+1
  3894  05AB  0822               	movf	?___ftpack+2,w
  3895  05AC  00B2               	movwf	?___ftdiv+2
  3896  05AD  0008               	return
  3897  05AE                     __end_of___ftdiv:	
  3898                           
  3899                           	psect	text17
  3900  0145                     __ptext17:	
  3901 ;; *************** function ___altoft *****************
  3902 ;; Defined at:
  3903 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  c               4    8[BANK0 ] long 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  sign            1   15[BANK0 ] unsigned char 
  3908 ;;  exp             1   14[BANK0 ] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  3    8[BANK0 ] float 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0, pclath, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3918 ;;      Params:         0       4       0       0       0
  3919 ;;      Locals:         0       2       0       0       0
  3920 ;;      Temps:          0       2       0       0       0
  3921 ;;      Totals:         0       8       0       0       0
  3922 ;;Total ram usage:        8 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    3
  3925 ;; This function calls:
  3926 ;;		___ftpack
  3927 ;; This function is called by:
  3928 ;;		_main
  3929 ;;		_command
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function ___altoft
  3935  0145                     ___altoft:	
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3939  0145  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0146  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0147  01AF               	clrf	___altoft@sign
  3942  0148  308E               	movlw	142
  3943  0149  00AC               	movwf	??___altoft
  3944  014A  082C               	movf	??___altoft,w
  3945  014B  00AE               	movwf	___altoft@exp
  3946  014C  1FAB               	btfss	___altoft@c+3,7
  3947  014D  295B               	goto	l1911
  3948  014E  09A8               	comf	___altoft@c,f
  3949  014F  09A9               	comf	___altoft@c+1,f
  3950  0150  09AA               	comf	___altoft@c+2,f
  3951  0151  09AB               	comf	___altoft@c+3,f
  3952  0152  0AA8               	incf	___altoft@c,f
  3953  0153  1903               	skipnz
  3954  0154  0AA9               	incf	___altoft@c+1,f
  3955  0155  1903               	skipnz
  3956  0156  0AAA               	incf	___altoft@c+2,f
  3957  0157  1903               	skipnz
  3958  0158  0AAB               	incf	___altoft@c+3,f
  3959  0159  01AF               	clrf	___altoft@sign
  3960  015A  0AAF               	incf	___altoft@sign,f
  3961  015B                     l1911:	
  3962  015B  30FF               	movlw	255
  3963  015C  052B               	andwf	___altoft@c+3,w
  3964  015D  1903               	btfsc	3,2
  3965  015E  296D               	goto	l1913
  3966  015F  3001               	movlw	1
  3967  0160                     u1275:	
  3968  0160  1003               	clrc
  3969  0161  0CAB               	rrf	___altoft@c+3,f
  3970  0162  0CAA               	rrf	___altoft@c+2,f
  3971  0163  0CA9               	rrf	___altoft@c+1,f
  3972  0164  0CA8               	rrf	___altoft@c,f
  3973  0165  3EFF               	addlw	-1
  3974  0166  1D03               	skipz
  3975  0167  2960               	goto	u1275
  3976  0168  3001               	movlw	1
  3977  0169  00AC               	movwf	??___altoft
  3978  016A  082C               	movf	??___altoft,w
  3979  016B  07AE               	addwf	___altoft@exp,f
  3980  016C  295B               	goto	l1911
  3981  016D                     l1913:	
  3982  016D  0828               	movf	___altoft@c,w
  3983  016E  00A0               	movwf	___ftpack@arg
  3984  016F  0829               	movf	___altoft@c+1,w
  3985  0170  00A1               	movwf	___ftpack@arg+1
  3986  0171  082A               	movf	___altoft@c+2,w
  3987  0172  00A2               	movwf	___ftpack@arg+2
  3988  0173  082E               	movf	___altoft@exp,w
  3989  0174  00AC               	movwf	??___altoft
  3990  0175  082C               	movf	??___altoft,w
  3991  0176  00A3               	movwf	___ftpack@exp
  3992  0177  082F               	movf	___altoft@sign,w
  3993  0178  00AD               	movwf	??___altoft+1
  3994  0179  082D               	movf	??___altoft+1,w
  3995  017A  00A4               	movwf	___ftpack@sign
  3996  017B  120A  118A  2375   	fcall	___ftpack
  3997  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3998  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0180  0820               	movf	?___ftpack,w
  4000  0181  00A8               	movwf	?___altoft
  4001  0182  0821               	movf	?___ftpack+1,w
  4002  0183  00A9               	movwf	?___altoft+1
  4003  0184  0822               	movf	?___ftpack+2,w
  4004  0185  00AA               	movwf	?___altoft+2
  4005  0186  0008               	return
  4006  0187                     __end_of___altoft:	
  4007                           
  4008                           	psect	text18
  4009  0375                     __ptext18:	
  4010 ;; *************** function ___ftpack *****************
  4011 ;; Defined at:
  4012 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  arg             3    0[BANK0 ] unsigned um
  4015 ;;  exp             1    3[BANK0 ] unsigned char 
  4016 ;;  sign            1    4[BANK0 ] unsigned char 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  3    0[BANK0 ] float 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       5       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          0       3       0       0       0
  4031 ;;      Totals:         0       8       0       0       0
  4032 ;;Total ram usage:        8 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    2
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		___altoft
  4039 ;;		___ftdiv
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function ___ftpack
  4045  0375                     ___ftpack:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4049  0375  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0376  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0377  0823               	movf	___ftpack@exp,w
  4052  0378  1903               	btfsc	3,2
  4053  0379  2B7F               	goto	l1813
  4054  037A  0822               	movf	___ftpack@arg+2,w
  4055  037B  0421               	iorwf	___ftpack@arg+1,w
  4056  037C  0420               	iorwf	___ftpack@arg,w
  4057  037D  1D03               	skipz
  4058  037E  2B92               	goto	l1819
  4059  037F                     l1813:	
  4060  037F  3000               	movlw	0
  4061  0380  00A0               	movwf	?___ftpack
  4062  0381  3000               	movlw	0
  4063  0382  00A1               	movwf	?___ftpack+1
  4064  0383  3000               	movlw	0
  4065  0384  00A2               	movwf	?___ftpack+2
  4066  0385  0008               	return
  4067  0386                     l1817:	
  4068  0386  3001               	movlw	1
  4069  0387  00A5               	movwf	??___ftpack
  4070  0388  0825               	movf	??___ftpack,w
  4071  0389  07A3               	addwf	___ftpack@exp,f
  4072  038A  3001               	movlw	1
  4073  038B                     u1155:	
  4074  038B  1003               	clrc
  4075  038C  0CA2               	rrf	___ftpack@arg+2,f
  4076  038D  0CA1               	rrf	___ftpack@arg+1,f
  4077  038E  0CA0               	rrf	___ftpack@arg,f
  4078  038F  3EFF               	addlw	-1
  4079  0390  1D03               	skipz
  4080  0391  2B8B               	goto	u1155
  4081  0392                     l1819:	
  4082  0392  30FE               	movlw	254
  4083  0393  0522               	andwf	___ftpack@arg+2,w
  4084  0394  1903               	btfsc	3,2
  4085  0395  2BAD               	goto	l656
  4086  0396  2B86               	goto	l1817
  4087  0397                     l1821:	
  4088  0397  3001               	movlw	1
  4089  0398  00A5               	movwf	??___ftpack
  4090  0399  0825               	movf	??___ftpack,w
  4091  039A  07A3               	addwf	___ftpack@exp,f
  4092  039B  3001               	movlw	1
  4093  039C  07A0               	addwf	___ftpack@arg,f
  4094  039D  3000               	movlw	0
  4095  039E  1803               	skipnc
  4096  039F  3001               	movlw	1
  4097  03A0  07A1               	addwf	___ftpack@arg+1,f
  4098  03A1  3000               	movlw	0
  4099  03A2  1803               	skipnc
  4100  03A3  3001               	movlw	1
  4101  03A4  07A2               	addwf	___ftpack@arg+2,f
  4102  03A5  3001               	movlw	1
  4103  03A6                     u1175:	
  4104  03A6  1003               	clrc
  4105  03A7  0CA2               	rrf	___ftpack@arg+2,f
  4106  03A8  0CA1               	rrf	___ftpack@arg+1,f
  4107  03A9  0CA0               	rrf	___ftpack@arg,f
  4108  03AA  3EFF               	addlw	-1
  4109  03AB  1D03               	skipz
  4110  03AC  2BA6               	goto	u1175
  4111  03AD                     l656:	
  4112  03AD  30FF               	movlw	255
  4113  03AE  0522               	andwf	___ftpack@arg+2,w
  4114  03AF  1903               	btfsc	3,2
  4115  03B0  2BBC               	goto	l1829
  4116  03B1  2B97               	goto	l1821
  4117  03B2                     l1827:	
  4118  03B2  3001               	movlw	1
  4119  03B3  02A3               	subwf	___ftpack@exp,f
  4120  03B4  3001               	movlw	1
  4121  03B5                     u1195:	
  4122  03B5  1003               	clrc
  4123  03B6  0DA0               	rlf	___ftpack@arg,f
  4124  03B7  0DA1               	rlf	___ftpack@arg+1,f
  4125  03B8  0DA2               	rlf	___ftpack@arg+2,f
  4126  03B9  3EFF               	addlw	-1
  4127  03BA  1D03               	skipz
  4128  03BB  2BB5               	goto	u1195
  4129  03BC                     l1829:	
  4130  03BC  1BA1               	btfsc	___ftpack@arg+1,7
  4131  03BD  2BC2               	goto	l663
  4132  03BE  3002               	movlw	2
  4133  03BF  0223               	subwf	___ftpack@exp,w
  4134  03C0  1803               	skipnc
  4135  03C1  2BB2               	goto	l1827
  4136  03C2                     l663:	
  4137  03C2  1823               	btfsc	___ftpack@exp,0
  4138  03C3  2BCA               	goto	l664
  4139  03C4  30FF               	movlw	255
  4140  03C5  05A0               	andwf	___ftpack@arg,f
  4141  03C6  307F               	movlw	127
  4142  03C7  05A1               	andwf	___ftpack@arg+1,f
  4143  03C8  30FF               	movlw	255
  4144  03C9  05A2               	andwf	___ftpack@arg+2,f
  4145  03CA                     l664:	
  4146  03CA  1003               	clrc
  4147  03CB  0CA3               	rrf	___ftpack@exp,f
  4148  03CC  0823               	movf	___ftpack@exp,w
  4149  03CD  00A5               	movwf	??___ftpack
  4150  03CE  01A6               	clrf	??___ftpack+1
  4151  03CF  01A7               	clrf	??___ftpack+2
  4152  03D0  3010               	movlw	16
  4153  03D1                     u1235:	
  4154  03D1  1003               	clrc
  4155  03D2  0DA5               	rlf	??___ftpack,f
  4156  03D3  0DA6               	rlf	??___ftpack+1,f
  4157  03D4  0DA7               	rlf	??___ftpack+2,f
  4158  03D5  3EFF               	addlw	-1
  4159  03D6  1D03               	skipz
  4160  03D7  2BD1               	goto	u1235
  4161  03D8  0825               	movf	??___ftpack,w
  4162  03D9  04A0               	iorwf	___ftpack@arg,f
  4163  03DA  0826               	movf	??___ftpack+1,w
  4164  03DB  04A1               	iorwf	___ftpack@arg+1,f
  4165  03DC  0827               	movf	??___ftpack+2,w
  4166  03DD  04A2               	iorwf	___ftpack@arg+2,f
  4167  03DE  0824               	movf	___ftpack@sign,w
  4168  03DF  1903               	btfsc	3,2
  4169  03E0  0008               	return
  4170  03E1  17A2               	bsf	___ftpack@arg+2,7
  4171  03E2  0008               	return
  4172  03E3                     __end_of___ftpack:	
  4173                           
  4174                           	psect	text19
  4175  0F06                     __ptext19:	
  4176 ;; *************** function _LED_data_set *****************
  4177 ;; Defined at:
  4178 ;;		line 119 in file "OBC1_app.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;		None               void
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    5
  4199 ;; This function calls:
  4200 ;;		_sent_data_set
  4201 ;; This function is called by:
  4202 ;;		_command
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _LED_data_set
  4208  0F06                     _LED_data_set:	
  4209                           
  4210                           ;OBC1_app.c: 121: sent_data_set(0x01, 1, 1);
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in _LED_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4214  0F06  3001               	movlw	1
  4215  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0F09  00B4               	movwf	sent_data_set@p_data
  4218  0F0A  3000               	movlw	0
  4219  0F0B  00B5               	movwf	sent_data_set@p_data+1
  4220  0F0C  01B6               	clrf	sent_data_set@data_len
  4221  0F0D  0AB6               	incf	sent_data_set@data_len,f
  4222  0F0E  01B7               	clrf	sent_data_set@byte_of_data
  4223  0F0F  0AB7               	incf	sent_data_set@byte_of_data,f
  4224  0F10  120A  118A  2312   	fcall	_sent_data_set
  4225  0F13  0008               	return
  4226  0F14                     __end_of_LED_data_set:	
  4227                           
  4228                           	psect	text20
  4229  0312                     __ptext20:	
  4230 ;; *************** function _sent_data_set *****************
  4231 ;; Defined at:
  4232 ;;		line 141 in file "system_protocol.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  p_data          2   20[BANK0 ] PTR void 
  4235 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4236 ;;  data_len        1   22[BANK0 ] unsigned char 
  4237 ;;  byte_of_data    1   23[BANK0 ] unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;		None
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      unsigned char 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       4       0       0       0
  4250 ;;      Locals:         0       0       0       0       0
  4251 ;;      Temps:          0       5       0       0       0
  4252 ;;      Totals:         0       9       0       0       0
  4253 ;;Total ram usage:        9 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    4
  4256 ;; This function calls:
  4257 ;;		___wmul
  4258 ;;		_double_data_set
  4259 ;;		_uint16_data_set
  4260 ;;		_uint8_data_set
  4261 ;; This function is called by:
  4262 ;;		_command
  4263 ;;		_LED_data_set
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _sent_data_set
  4269  0312                     _sent_data_set:	
  4270                           
  4271                           ;system_protocol.c: 144: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4275  0312  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0313  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0314  0837               	movf	sent_data_set@byte_of_data,w
  4278  0315  3E01               	addlw	1
  4279  0316  00A0               	movwf	___wmul@multiplier
  4280  0317  3000               	movlw	0
  4281  0318  1803               	skipnc
  4282  0319  3001               	movlw	1
  4283  031A  00A1               	movwf	___wmul@multiplier+1
  4284  031B  0836               	movf	sent_data_set@data_len,w
  4285  031C  00B8               	movwf	??_sent_data_set
  4286  031D  01B9               	clrf	??_sent_data_set+1
  4287  031E  0838               	movf	??_sent_data_set,w
  4288  031F  00A2               	movwf	___wmul@multiplicand
  4289  0320  0839               	movf	??_sent_data_set+1,w
  4290  0321  00A3               	movwf	___wmul@multiplicand+1
  4291  0322  120A  158A  2761  120A  118A  	fcall	___wmul
  4292  0327  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0328  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0329  0857               	movf	_index_pos,w
  4295  032A  0720               	addwf	?___wmul,w
  4296  032B  00BA               	movwf	??_sent_data_set+2
  4297  032C  0821               	movf	?___wmul+1,w
  4298  032D  1803               	skipnc
  4299  032E  0A21               	incf	?___wmul+1,w
  4300  032F  00BB               	movwf	??_sent_data_set+3
  4301  0330  09BA               	comf	??_sent_data_set+2,f
  4302  0331  09BB               	comf	??_sent_data_set+3,f
  4303  0332  0ABA               	incf	??_sent_data_set+2,f
  4304  0333  1903               	skipnz
  4305  0334  0ABB               	incf	??_sent_data_set+3,f
  4306  0335  301E               	movlw	30
  4307  0336  073A               	addwf	??_sent_data_set+2,w
  4308  0337  083B               	movf	??_sent_data_set+3,w
  4309  0338  1803               	skipnc
  4310  0339  0A3B               	incf	??_sent_data_set+3,w
  4311  033A  3E00               	addlw	0
  4312  033B  00BC               	movwf	??_sent_data_set+4
  4313  033C  1BBC               	btfsc	??_sent_data_set+4,7
  4314  033D  0008               	return
  4315  033E  2B67               	goto	l1805
  4316  033F                     l1797:	
  4317                           ;system_protocol.c: 151: {
  4318                           ;system_protocol.c: 152: case 1:
  4319                           
  4320                           ;system_protocol.c: 147: }
  4321                           ;system_protocol.c: 150: switch(byte_of_data)
  4322                           
  4323                           ;system_protocol.c: 145: {
  4324                           ;system_protocol.c: 146: return 0xff;
  4325                           ;	Return value of _sent_data_set is never used
  4326                           
  4327                           
  4328                           ;system_protocol.c: 153: uint8_data_set((uint8_t *)p_data, data_len);
  4329  033F  0834               	movf	sent_data_set@p_data,w
  4330  0340  00A0               	movwf	uint8_data_set@p_data
  4331  0341  0835               	movf	sent_data_set@p_data+1,w
  4332  0342  00A1               	movwf	uint8_data_set@p_data+1
  4333  0343  0836               	movf	sent_data_set@data_len,w
  4334  0344  00B8               	movwf	??_sent_data_set
  4335  0345  0838               	movf	??_sent_data_set,w
  4336  0346  00A2               	movwf	uint8_data_set@data_len
  4337  0347  120A  158A  27A8   	fcall	_uint8_data_set
  4338                           
  4339                           ;system_protocol.c: 154: break;
  4340  034A  0008               	return
  4341  034B                     l1799:	
  4342                           ;system_protocol.c: 155: case 2:
  4343                           
  4344                           
  4345                           ;system_protocol.c: 156: uint16_data_set((uint16_t *)p_data, data_len);
  4346  034B  1283               	bcf	3,5	;RP0=0, select bank0
  4347  034C  1303               	bcf	3,6	;RP1=0, select bank0
  4348  034D  0834               	movf	sent_data_set@p_data,w
  4349  034E  00A6               	movwf	uint16_data_set@p_data
  4350  034F  0835               	movf	sent_data_set@p_data+1,w
  4351  0350  00A7               	movwf	uint16_data_set@p_data+1
  4352  0351  0836               	movf	sent_data_set@data_len,w
  4353  0352  00B8               	movwf	??_sent_data_set
  4354  0353  0838               	movf	??_sent_data_set,w
  4355  0354  00A8               	movwf	uint16_data_set@data_len
  4356  0355  120A  118A  210A   	fcall	_uint16_data_set
  4357                           
  4358                           ;system_protocol.c: 157: break;
  4359  0358  0008               	return
  4360  0359                     l1801:	
  4361                           ;system_protocol.c: 158: case 4:
  4362                           
  4363                           
  4364                           ;system_protocol.c: 159: double_data_set((double *)p_data, data_len);
  4365  0359  1283               	bcf	3,5	;RP0=0, select bank0
  4366  035A  1303               	bcf	3,6	;RP1=0, select bank0
  4367  035B  0834               	movf	sent_data_set@p_data,w
  4368  035C  00AA               	movwf	double_data_set@p_data
  4369  035D  0835               	movf	sent_data_set@p_data+1,w
  4370  035E  00AB               	movwf	double_data_set@p_data+1
  4371  035F  0836               	movf	sent_data_set@data_len,w
  4372  0360  00B8               	movwf	??_sent_data_set
  4373  0361  0838               	movf	??_sent_data_set,w
  4374  0362  00AC               	movwf	double_data_set@data_len
  4375  0363  120A  118A  20CF   	fcall	_double_data_set
  4376                           
  4377                           ;system_protocol.c: 163: }
  4378                           
  4379                           ;system_protocol.c: 162: return 0xff;
  4380                           ;	Return value of _sent_data_set is never used
  4381                           
  4382                           ;system_protocol.c: 161: default:
  4383                           
  4384                           ;system_protocol.c: 160: break;
  4385  0366  0008               	return
  4386  0367                     l1805:	
  4387  0367  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0368  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0369  0837               	movf	sent_data_set@byte_of_data,w
  4390                           
  4391                           ; Switch size 1, requested type "space"
  4392                           ; Number of cases is 3, Range of values is 1 to 4
  4393                           ; switch strategies available:
  4394                           ; Name         Instructions Cycles
  4395                           ; simple_byte           10     6 (average)
  4396                           ; direct_byte           23    11 (fixed)
  4397                           ; jumptable            263     9 (fixed)
  4398                           ;	Chosen strategy is simple_byte
  4399  036A  3A01               	xorlw	1	; case 1
  4400  036B  1903               	skipnz
  4401  036C  2B3F               	goto	l1797
  4402  036D  3A03               	xorlw	3	; case 2
  4403  036E  1903               	skipnz
  4404  036F  2B4B               	goto	l1799
  4405  0370  3A06               	xorlw	6	; case 4
  4406  0371  1903               	skipnz
  4407  0372  2B59               	goto	l1801
  4408  0373  2B74               	goto	l242
  4409  0374                     l242:	
  4410                           ;system_protocol.c: 166: return (uint8_t)(30 - index_pos);
  4411                           ;	Return value of _sent_data_set is never used
  4412                           
  4413  0374  0008               	return
  4414  0375                     __end_of_sent_data_set:	
  4415                           
  4416                           	psect	text21
  4417  0FA8                     __ptext21:	
  4418 ;; *************** function _uint8_data_set *****************
  4419 ;; Defined at:
  4420 ;;		line 257 in file "system_protocol.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  p_data          2    0[BANK0 ] PTR unsigned char 
  4423 ;;		 -> RAM(512), I2CTEMP_data(2), cw(13), 
  4424 ;;  data_len        1    2[BANK0 ] unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;		None               void
  4429 ;; Registers used:
  4430 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         0       3       0       0       0
  4437 ;;      Locals:         0       0       0       0       0
  4438 ;;      Temps:          0       1       0       0       0
  4439 ;;      Totals:         0       4       0       0       0
  4440 ;;Total ram usage:        4 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    2
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_sent_data_set
  4447 ;;		_cw_data_set
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _uint8_data_set
  4453  0FA8                     _uint8_data_set:	
  4454  0FA8                     l1661:	
  4455                           ;system_protocol.c: 259: while(data_len)
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  4459                           
  4460  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0FAA  0822               	movf	uint8_data_set@data_len,w
  4463  0FAB  1903               	btfsc	3,2
  4464  0FAC  0008               	return
  4465                           
  4466                           ;system_protocol.c: 260: {
  4467                           ;system_protocol.c: 261: packet.payload[index_pos++] = 1;
  4468  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  4469  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  4470  0FAF  0857               	movf	_index_pos,w
  4471  0FB0  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  4472  0FB1  0084               	movwf	4
  4473  0FB2  1383               	bcf	3,7	;select IRP bank1
  4474  0FB3  0180               	clrf	0
  4475  0FB4  0A80               	incf	0,f
  4476  0FB5  3001               	movlw	1
  4477  0FB6  00A3               	movwf	??_uint8_data_set
  4478  0FB7  0823               	movf	??_uint8_data_set,w
  4479  0FB8  07D7               	addwf	_index_pos,f
  4480                           
  4481                           ;system_protocol.c: 262: packet.payload[index_pos++] = *p_data++;
  4482  0FB9  0820               	movf	uint8_data_set@p_data,w
  4483  0FBA  0084               	movwf	4
  4484  0FBB  1783               	bsf	3,7
  4485  0FBC  1C21               	btfss	uint8_data_set@p_data+1,0
  4486  0FBD  1383               	bcf	3,7
  4487  0FBE  0800               	movf	0,w
  4488  0FBF  00A3               	movwf	??_uint8_data_set
  4489  0FC0  0857               	movf	_index_pos,w
  4490  0FC1  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  4491  0FC2  0084               	movwf	4
  4492  0FC3  0823               	movf	??_uint8_data_set,w
  4493  0FC4  1383               	bcf	3,7	;select IRP bank1
  4494  0FC5  0080               	movwf	0
  4495  0FC6  3001               	movlw	1
  4496  0FC7  07A0               	addwf	uint8_data_set@p_data,f
  4497  0FC8  1803               	skipnc
  4498  0FC9  0AA1               	incf	uint8_data_set@p_data+1,f
  4499  0FCA  3000               	movlw	0
  4500  0FCB  07A1               	addwf	uint8_data_set@p_data+1,f
  4501  0FCC  3001               	movlw	1
  4502  0FCD  00A3               	movwf	??_uint8_data_set
  4503  0FCE  0823               	movf	??_uint8_data_set,w
  4504  0FCF  07D7               	addwf	_index_pos,f
  4505                           
  4506                           ;system_protocol.c: 263: data_len--;
  4507  0FD0  3001               	movlw	1
  4508  0FD1  02A2               	subwf	uint8_data_set@data_len,f
  4509  0FD2  2FA8               	goto	l1661
  4510  0FD3                     __end_of_uint8_data_set:	
  4511                           
  4512                           	psect	text22
  4513  010A                     __ptext22:	
  4514 ;; *************** function _uint16_data_set *****************
  4515 ;; Defined at:
  4516 ;;		line 279 in file "system_protocol.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  p_data          2    6[BANK0 ] PTR unsigned int 
  4519 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4520 ;;  data_len        1    8[BANK0 ] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  buf             3   10[BANK0 ] unsigned char [3]
  4523 ;;  i               1   13[BANK0 ] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;		None               void
  4526 ;; Registers used:
  4527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       3       0       0       0
  4534 ;;      Locals:         0       4       0       0       0
  4535 ;;      Temps:          0       1       0       0       0
  4536 ;;      Totals:         0       8       0       0       0
  4537 ;;Total ram usage:        8 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    3
  4540 ;; This function calls:
  4541 ;;		_uint16_to_byte_array
  4542 ;; This function is called by:
  4543 ;;		_sent_data_set
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _uint16_data_set
  4549  010A                     _uint16_data_set:	
  4550  010A                     l266:	
  4551                           ;system_protocol.c: 281: uint8_t buf[3];
  4552                           ;system_protocol.c: 282: uint8_t i;
  4553                           ;system_protocol.c: 284: while(data_len)
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4557                           
  4558  010A  1283               	bcf	3,5	;RP0=0, select bank0
  4559  010B  1303               	bcf	3,6	;RP1=0, select bank0
  4560  010C  0828               	movf	uint16_data_set@data_len,w
  4561  010D  1903               	btfsc	3,2
  4562  010E  0008               	return
  4563                           
  4564                           ;system_protocol.c: 285: {
  4565                           ;system_protocol.c: 286: uint16_to_byte_array(p_data++, buf);
  4566  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0111  0826               	movf	uint16_data_set@p_data,w
  4569  0112  00A0               	movwf	uint16_to_byte_array@p_data
  4570  0113  0827               	movf	uint16_data_set@p_data+1,w
  4571  0114  00A1               	movwf	uint16_to_byte_array@p_data+1
  4572  0115  302A               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  4573  0116  00A9               	movwf	??_uint16_data_set
  4574  0117  0829               	movf	??_uint16_data_set,w
  4575  0118  00A2               	movwf	uint16_to_byte_array@p_data_array
  4576  0119  120A  118A  2037  120A  118A  	fcall	_uint16_to_byte_array
  4577  011E  3002               	movlw	2
  4578  011F  1283               	bcf	3,5	;RP0=0, select bank0
  4579  0120  1303               	bcf	3,6	;RP1=0, select bank0
  4580  0121  07A6               	addwf	uint16_data_set@p_data,f
  4581  0122  1803               	skipnc
  4582  0123  0AA7               	incf	uint16_data_set@p_data+1,f
  4583  0124  3000               	movlw	0
  4584  0125  07A7               	addwf	uint16_data_set@p_data+1,f
  4585                           
  4586                           ;system_protocol.c: 288: for(i = 0; i < 3; i++)
  4587  0126  01AD               	clrf	uint16_data_set@i
  4588  0127  3003               	movlw	3
  4589  0128  022D               	subwf	uint16_data_set@i,w
  4590  0129  1803               	btfsc	3,0
  4591  012A  2942               	goto	l1683
  4592  012B                     l1675:	
  4593                           
  4594                           ;system_protocol.c: 289: {
  4595                           ;system_protocol.c: 290: packet.payload[index_pos++] = buf[i];
  4596  012B  082D               	movf	uint16_data_set@i,w
  4597  012C  3E2A               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  4598  012D  0084               	movwf	4
  4599  012E  1383               	bcf	3,7	;select IRP bank0
  4600  012F  0800               	movf	0,w
  4601  0130  00A9               	movwf	??_uint16_data_set
  4602  0131  0857               	movf	_index_pos,w
  4603  0132  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  4604  0133  0084               	movwf	4
  4605  0134  0829               	movf	??_uint16_data_set,w
  4606  0135  0080               	movwf	0
  4607  0136  3001               	movlw	1
  4608  0137  00A9               	movwf	??_uint16_data_set
  4609  0138  0829               	movf	??_uint16_data_set,w
  4610  0139  07D7               	addwf	_index_pos,f
  4611  013A  3001               	movlw	1
  4612  013B  00A9               	movwf	??_uint16_data_set
  4613  013C  0829               	movf	??_uint16_data_set,w
  4614  013D  07AD               	addwf	uint16_data_set@i,f
  4615  013E  3003               	movlw	3
  4616  013F  022D               	subwf	uint16_data_set@i,w
  4617  0140  1C03               	skipc
  4618  0141  292B               	goto	l1675
  4619  0142                     l1683:	
  4620                           
  4621                           ;system_protocol.c: 291: }
  4622                           ;system_protocol.c: 292: data_len--;
  4623  0142  3001               	movlw	1
  4624  0143  02A8               	subwf	uint16_data_set@data_len,f
  4625  0144  290A               	goto	l266
  4626  0145                     __end_of_uint16_data_set:	
  4627                           
  4628                           	psect	text23
  4629  0037                     __ptext23:	
  4630 ;; *************** function _uint16_to_byte_array *****************
  4631 ;; Defined at:
  4632 ;;		line 337 in file "system_protocol.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  p_data          2    0[BANK0 ] PTR unsigned int 
  4635 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4636 ;;  p_data_array    1    2[BANK0 ] PTR unsigned char 
  4637 ;;		 -> uint16_data_set@buf(3), 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;		None               void
  4642 ;; Registers used:
  4643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4649 ;;      Params:         0       3       0       0       0
  4650 ;;      Locals:         0       0       0       0       0
  4651 ;;      Temps:          0       3       0       0       0
  4652 ;;      Totals:         0       6       0       0       0
  4653 ;;Total ram usage:        6 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_uint16_data_set
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _uint16_to_byte_array
  4665  0037                     _uint16_to_byte_array:	
  4666                           
  4667                           ;system_protocol.c: 339: const uint16_t bit_mask = 0b0000000011111111;
  4668                           ;system_protocol.c: 342: p_data_array[0] = 2;
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  4672  0037  3002               	movlw	2
  4673  0038  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0039  1303               	bcf	3,6	;RP1=0, select bank0
  4675  003A  00A3               	movwf	??_uint16_to_byte_array
  4676  003B  0822               	movf	uint16_to_byte_array@p_data_array,w
  4677  003C  0084               	movwf	4
  4678  003D  0823               	movf	??_uint16_to_byte_array,w
  4679  003E  1383               	bcf	3,7	;select IRP bank0
  4680  003F  0080               	movwf	0
  4681                           
  4682                           ;system_protocol.c: 343: p_data_array[1] = (uint8_t)(*p_data >> 8);
  4683  0040  0820               	movf	uint16_to_byte_array@p_data,w
  4684  0041  0084               	movwf	4
  4685  0042  1783               	bsf	3,7
  4686  0043  1C21               	btfss	uint16_to_byte_array@p_data+1,0
  4687  0044  1383               	bcf	3,7
  4688  0045  0800               	movf	0,w
  4689  0046  00A3               	movwf	??_uint16_to_byte_array
  4690  0047  0A84               	incf	4,f
  4691  0048  0800               	movf	0,w
  4692  0049  00A4               	movwf	??_uint16_to_byte_array+1
  4693  004A  0824               	movf	??_uint16_to_byte_array+1,w
  4694  004B  00A5               	movwf	??_uint16_to_byte_array+2
  4695  004C  0A22               	incf	uint16_to_byte_array@p_data_array,w
  4696  004D  0084               	movwf	4
  4697  004E  0825               	movf	??_uint16_to_byte_array+2,w
  4698  004F  1383               	bcf	3,7	;select IRP bank0
  4699  0050  0080               	movwf	0
  4700                           
  4701                           ;system_protocol.c: 344: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  4702  0051  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  4703  0052  0084               	movwf	4
  4704  0053  120A  158A  2000   	fcall	stringdir
  4705  0056  00A3               	movwf	??_uint16_to_byte_array
  4706  0057  0820               	movf	uint16_to_byte_array@p_data,w
  4707  0058  0084               	movwf	4
  4708  0059  1783               	bsf	3,7
  4709  005A  1C21               	btfss	uint16_to_byte_array@p_data+1,0
  4710  005B  1383               	bcf	3,7
  4711  005C  0800               	movf	0,w
  4712  005D  0523               	andwf	??_uint16_to_byte_array,w
  4713  005E  00A4               	movwf	??_uint16_to_byte_array+1
  4714  005F  0822               	movf	uint16_to_byte_array@p_data_array,w
  4715  0060  3E02               	addlw	2
  4716  0061  0084               	movwf	4
  4717  0062  0824               	movf	??_uint16_to_byte_array+1,w
  4718  0063  1383               	bcf	3,7	;select IRP bank0
  4719  0064  0080               	movwf	0
  4720  0065  0008               	return
  4721  0066                     __end_of_uint16_to_byte_array:	
  4722                           
  4723                           	psect	text24
  4724  00CF                     __ptext24:	
  4725 ;; *************** function _double_data_set *****************
  4726 ;; Defined at:
  4727 ;;		line 308 in file "system_protocol.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  p_data          2   10[BANK0 ] PTR 
  4730 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4731 ;;  data_len        1   12[BANK0 ] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  buf             5   14[BANK0 ] unsigned char [5]
  4734 ;;  i               1   19[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       3       0       0       0
  4745 ;;      Locals:         0       6       0       0       0
  4746 ;;      Temps:          0       1       0       0       0
  4747 ;;      Totals:         0      10       0       0       0
  4748 ;;Total ram usage:       10 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    3
  4751 ;; This function calls:
  4752 ;;		_double_to_byte_array
  4753 ;; This function is called by:
  4754 ;;		_sent_data_set
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _double_data_set
  4760  00CF                     _double_data_set:	
  4761  00CF                     l274:	
  4762                           ;system_protocol.c: 310: uint8_t buf[5];
  4763                           ;system_protocol.c: 311: uint8_t i;
  4764                           ;system_protocol.c: 313: while(data_len)
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4768                           
  4769  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  4770  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  4771  00D1  082C               	movf	double_data_set@data_len,w
  4772  00D2  1903               	btfsc	3,2
  4773  00D3  0008               	return
  4774                           
  4775                           ;system_protocol.c: 314: {
  4776                           ;system_protocol.c: 315: double_to_byte_array(p_data++, buf);
  4777  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  4778  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  4779  00D6  082A               	movf	double_data_set@p_data,w
  4780  00D7  00A0               	movwf	double_to_byte_array@p_data
  4781  00D8  082B               	movf	double_data_set@p_data+1,w
  4782  00D9  00A1               	movwf	double_to_byte_array@p_data+1
  4783  00DA  302E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  4784  00DB  00AD               	movwf	??_double_data_set
  4785  00DC  082D               	movf	??_double_data_set,w
  4786  00DD  00A2               	movwf	double_to_byte_array@p_data_array
  4787  00DE  120A  158A  27D3  120A  118A  	fcall	_double_to_byte_array
  4788  00E3  3003               	movlw	3
  4789  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4790  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4791  00E6  07AA               	addwf	double_data_set@p_data,f
  4792  00E7  1803               	skipnc
  4793  00E8  0AAB               	incf	double_data_set@p_data+1,f
  4794  00E9  3000               	movlw	0
  4795  00EA  07AB               	addwf	double_data_set@p_data+1,f
  4796                           
  4797                           ;system_protocol.c: 317: for(i = 0; i < 5; i++)
  4798  00EB  01B3               	clrf	double_data_set@i
  4799  00EC  3005               	movlw	5
  4800  00ED  0233               	subwf	double_data_set@i,w
  4801  00EE  1803               	btfsc	3,0
  4802  00EF  2907               	goto	l1705
  4803  00F0                     l1697:	
  4804                           
  4805                           ;system_protocol.c: 318: {
  4806                           ;system_protocol.c: 319: packet.payload[index_pos++] = buf[i];
  4807  00F0  0833               	movf	double_data_set@i,w
  4808  00F1  3E2E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  4809  00F2  0084               	movwf	4
  4810  00F3  1383               	bcf	3,7	;select IRP bank0
  4811  00F4  0800               	movf	0,w
  4812  00F5  00AD               	movwf	??_double_data_set
  4813  00F6  0857               	movf	_index_pos,w
  4814  00F7  3EA1               	addlw	(low ((_packet| 0+1)))& (0+255)
  4815  00F8  0084               	movwf	4
  4816  00F9  082D               	movf	??_double_data_set,w
  4817  00FA  0080               	movwf	0
  4818  00FB  3001               	movlw	1
  4819  00FC  00AD               	movwf	??_double_data_set
  4820  00FD  082D               	movf	??_double_data_set,w
  4821  00FE  07D7               	addwf	_index_pos,f
  4822  00FF  3001               	movlw	1
  4823  0100  00AD               	movwf	??_double_data_set
  4824  0101  082D               	movf	??_double_data_set,w
  4825  0102  07B3               	addwf	double_data_set@i,f
  4826  0103  3005               	movlw	5
  4827  0104  0233               	subwf	double_data_set@i,w
  4828  0105  1C03               	skipc
  4829  0106  28F0               	goto	l1697
  4830  0107                     l1705:	
  4831                           
  4832                           ;system_protocol.c: 320: }
  4833                           ;system_protocol.c: 321: data_len--;
  4834  0107  3001               	movlw	1
  4835  0108  02AC               	subwf	double_data_set@data_len,f
  4836  0109  28CF               	goto	l274
  4837  010A                     __end_of_double_data_set:	
  4838                           
  4839                           	psect	text25
  4840  0FD3                     __ptext25:	
  4841 ;; *************** function _double_to_byte_array *****************
  4842 ;; Defined at:
  4843 ;;		line 359 in file "system_protocol.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  p_data          2    0[BANK0 ] PTR 
  4846 ;;		 -> RAM(512), I2CTEMP_data(2), 
  4847 ;;  p_data_array    1    2[BANK0 ] PTR unsigned char 
  4848 ;;		 -> double_data_set@buf(5), 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  converter       4    5[BANK0 ] struct .
  4851 ;;  i               1    9[BANK0 ] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;		None               void
  4854 ;; Registers used:
  4855 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4861 ;;      Params:         0       3       0       0       0
  4862 ;;      Locals:         0       5       0       0       0
  4863 ;;      Temps:          0       2       0       0       0
  4864 ;;      Totals:         0      10       0       0       0
  4865 ;;Total ram usage:       10 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    2
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_double_data_set
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _double_to_byte_array
  4877  0FD3                     _double_to_byte_array:	
  4878                           
  4879                           ;system_protocol.c: 361: uint8_t i;
  4880                           ;system_protocol.c: 362: union
  4881                           ;system_protocol.c: 363: {
  4882                           ;system_protocol.c: 364: double data;
  4883                           ;system_protocol.c: 365: uint8_t array[4];
  4884                           ;system_protocol.c: 366: } converter;
  4885                           ;system_protocol.c: 369: converter.data = *p_data;
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  4889  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0FD5  0820               	movf	double_to_byte_array@p_data,w
  4892  0FD6  0084               	movwf	4
  4893  0FD7  1783               	bsf	3,7
  4894  0FD8  1C21               	btfss	double_to_byte_array@p_data+1,0
  4895  0FD9  1383               	bcf	3,7
  4896  0FDA  0800               	movf	0,w
  4897  0FDB  00A5               	movwf	double_to_byte_array@converter
  4898  0FDC  0A84               	incf	4,f
  4899  0FDD  0800               	movf	0,w
  4900  0FDE  00A6               	movwf	double_to_byte_array@converter+1
  4901  0FDF  0A84               	incf	4,f
  4902  0FE0  0800               	movf	0,w
  4903  0FE1  00A7               	movwf	double_to_byte_array@converter+2
  4904                           
  4905                           ;system_protocol.c: 372: p_data_array[0] = 4;
  4906  0FE2  3004               	movlw	4
  4907  0FE3  00A3               	movwf	??_double_to_byte_array
  4908  0FE4  0822               	movf	double_to_byte_array@p_data_array,w
  4909  0FE5  0084               	movwf	4
  4910  0FE6  0823               	movf	??_double_to_byte_array,w
  4911  0FE7  1383               	bcf	3,7	;select IRP bank0
  4912  0FE8  0080               	movwf	0
  4913                           
  4914                           ;system_protocol.c: 375: for(i = 0; i < 4; i++)
  4915  0FE9  01A9               	clrf	double_to_byte_array@i
  4916  0FEA                     L2:	
  4917  0FEA  3004               	movlw	4
  4918  0FEB  0229               	subwf	double_to_byte_array@i,w
  4919  0FEC  1803               	btfsc	3,0
  4920  0FED  0008               	return
  4921                           
  4922                           ;system_protocol.c: 376: {
  4923                           ;system_protocol.c: 377: p_data_array[i + 1] = converter.array[i];
  4924  0FEE  0829               	movf	double_to_byte_array@i,w
  4925  0FEF  3E25               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  4926  0FF0  0084               	movwf	4
  4927  0FF1  0800               	movf	0,w
  4928  0FF2  00A3               	movwf	??_double_to_byte_array
  4929  0FF3  0829               	movf	double_to_byte_array@i,w
  4930  0FF4  3E01               	addlw	1
  4931  0FF5  0722               	addwf	double_to_byte_array@p_data_array,w
  4932  0FF6  00A4               	movwf	??_double_to_byte_array+1
  4933  0FF7  0824               	movf	??_double_to_byte_array+1,w
  4934  0FF8  0084               	movwf	4
  4935  0FF9  0823               	movf	??_double_to_byte_array,w
  4936  0FFA  0080               	movwf	0
  4937  0FFB  3001               	movlw	1
  4938  0FFC  00A3               	movwf	??_double_to_byte_array
  4939  0FFD  0823               	movf	??_double_to_byte_array,w
  4940  0FFE  07A9               	addwf	double_to_byte_array@i,f
  4941  0FFF  2FEA               	goto	L2
  4942  1000                     __end_of_double_to_byte_array:	
  4943                           
  4944                           	psect	text26
  4945  0F61                     __ptext26:	
  4946 ;; *************** function ___wmul *****************
  4947 ;; Defined at:
  4948 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4951 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  product         2    4[BANK0 ] unsigned int 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  2    0[BANK0 ] unsigned int 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4963 ;;      Params:         0       4       0       0       0
  4964 ;;      Locals:         0       2       0       0       0
  4965 ;;      Temps:          0       0       0       0       0
  4966 ;;      Totals:         0       6       0       0       0
  4967 ;;Total ram usage:        6 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    2
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_sent_data_set
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function ___wmul
  4979  0F61                     ___wmul:	
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4983  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0F63  01A4               	clrf	___wmul@product
  4986  0F64  01A5               	clrf	___wmul@product+1
  4987  0F65                     l1735:	
  4988  0F65  1C20               	btfss	___wmul@multiplier,0
  4989  0F66  2F6D               	goto	l495
  4990  0F67  0822               	movf	___wmul@multiplicand,w
  4991  0F68  07A4               	addwf	___wmul@product,f
  4992  0F69  1803               	skipnc
  4993  0F6A  0AA5               	incf	___wmul@product+1,f
  4994  0F6B  0823               	movf	___wmul@multiplicand+1,w
  4995  0F6C  07A5               	addwf	___wmul@product+1,f
  4996  0F6D                     l495:	
  4997  0F6D  3001               	movlw	1
  4998  0F6E                     u1045:	
  4999  0F6E  1003               	clrc
  5000  0F6F  0DA2               	rlf	___wmul@multiplicand,f
  5001  0F70  0DA3               	rlf	___wmul@multiplicand+1,f
  5002  0F71  3EFF               	addlw	-1
  5003  0F72  1D03               	skipz
  5004  0F73  2F6E               	goto	u1045
  5005  0F74  3001               	movlw	1
  5006  0F75                     u1055:	
  5007  0F75  1003               	clrc
  5008  0F76  0CA1               	rrf	___wmul@multiplier+1,f
  5009  0F77  0CA0               	rrf	___wmul@multiplier,f
  5010  0F78  3EFF               	addlw	-1
  5011  0F79  1D03               	skipz
  5012  0F7A  2F75               	goto	u1055
  5013  0F7B  0820               	movf	___wmul@multiplier,w
  5014  0F7C  0421               	iorwf	___wmul@multiplier+1,w
  5015  0F7D  1D03               	btfss	3,2
  5016  0F7E  2F65               	goto	l1735
  5017  0F7F  0825               	movf	___wmul@product+1,w
  5018  0F80  00A1               	movwf	?___wmul+1
  5019  0F81  0824               	movf	___wmul@product,w
  5020  0F82  00A0               	movwf	?___wmul
  5021  0F83  0008               	return
  5022  0F84                     __end_of___wmul:	
  5023                           
  5024                           	psect	text27
  5025  0017                     __ptext27:	
  5026 ;; *************** function _I2Ctemp_data_set *****************
  5027 ;; Defined at:
  5028 ;;		line 125 in file "OBC1_app.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;		None               void
  5035 ;; Registers used:
  5036 ;;		None
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    2
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_command
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _I2Ctemp_data_set
  5058  0017                     _I2Ctemp_data_set:	
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _I2Ctemp_data_set: []
  5062  0017  0008               	return
  5063  0018                     __end_of_I2Ctemp_data_set:	
  5064                           
  5065                           	psect	text28
  5066  0EEF                     __ptext28:	
  5067 ;; *************** function _ad_con_init *****************
  5068 ;; Defined at:
  5069 ;;		line 49 in file "AD_value.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;		None               void
  5076 ;; Registers used:
  5077 ;;		wreg
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0
  5086 ;;      Totals:         0       0       0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    2
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_main
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _ad_con_init
  5099  0EEF                     _ad_con_init:	
  5100                           
  5101                           ;AD_value.c: 52: PORTAbits.RA0 = 0;
  5102                           
  5103                           ;incstack = 0
  5104                           ; Regs used in _ad_con_init: [wreg]
  5105  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0EF1  1005               	bcf	5,0	;volatile
  5108                           
  5109                           ;AD_value.c: 53: PORTAbits.RA3 = 0;
  5110  0EF2  1185               	bcf	5,3	;volatile
  5111                           
  5112                           ;AD_value.c: 54: TRISAbits.TRISA0 = 1;
  5113  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  5114  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  5115  0EF5  1405               	bsf	5,0	;volatile
  5116                           
  5117                           ;AD_value.c: 55: TRISAbits.TRISA3 = 1;
  5118  0EF6  1585               	bsf	5,3	;volatile
  5119                           
  5120                           ;AD_value.c: 56: ADCON1 = 0b00000001;
  5121  0EF7  3001               	movlw	1
  5122  0EF8  009F               	movwf	31	;volatile
  5123  0EF9  0008               	return
  5124  0EFA                     __end_of_ad_con_init:	
  5125                           
  5126                           	psect	text29
  5127  0F14                     __ptext29:	
  5128 ;; *************** function _MCLR_init *****************
  5129 ;; Defined at:
  5130 ;;		line 35 in file "MCLR_reset.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  nin             2    0[BANK0 ] PTR unsigned char 
  5135 ;;		 -> RAM(512), 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;		None               void
  5138 ;; Registers used:
  5139 ;;		wreg, fsr0l, fsr0h
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5145 ;;      Params:         0       0       0       0       0
  5146 ;;      Locals:         0       2       0       0       0
  5147 ;;      Temps:          0       0       0       0       0
  5148 ;;      Totals:         0       2       0       0       0
  5149 ;;Total ram usage:        2 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    2
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           
  5160                           ;psect for function _MCLR_init
  5161  0F14                     _MCLR_init:	
  5162                           
  5163                           ;MCLR_reset.c: 37: uint8_t *nin;
  5164                           ;MCLR_reset.c: 38: nin = 0x09;
  5165                           
  5166                           ;incstack = 0
  5167                           ; Regs used in _MCLR_init: [wregfsr0]
  5168  0F14  3009               	movlw	9
  5169  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0F17  00A0               	movwf	MCLR_init@nin
  5172  0F18  3000               	movlw	0
  5173  0F19  00A1               	movwf	MCLR_init@nin+1
  5174                           
  5175                           ;MCLR_reset.c: 41: TRISEbits.TRISE1 = 0;
  5176  0F1A  1683               	bsf	3,5	;RP0=1, select bank1
  5177  0F1B  1303               	bcf	3,6	;RP1=0, select bank1
  5178  0F1C  1089               	bcf	9,1	;volatile
  5179                           
  5180                           ;MCLR_reset.c: 42: TRISEbits.TRISE0 = 0;
  5181  0F1D  1009               	bcf	9,0	;volatile
  5182                           
  5183                           ;MCLR_reset.c: 45: *nin = 0x03;
  5184  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0F20  0820               	movf	MCLR_init@nin,w
  5187  0F21  0084               	movwf	4
  5188  0F22  1383               	bcf	3,7
  5189  0F23  1821               	btfsc	MCLR_init@nin+1,0
  5190  0F24  1783               	bsf	3,7
  5191  0F25  3003               	movlw	3
  5192  0F26  0080               	movwf	0
  5193  0F27  0008               	return
  5194  0F28                     __end_of_MCLR_init:	
  5195                           
  5196                           	psect	text30
  5197  0187                     __ptext30:	
  5198 ;; *************** function _get_uart *****************
  5199 ;; Defined at:
  5200 ;;		line 81 in file "OBC1_main.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;		None               void
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0
  5216 ;;      Temps:          7       0       0       0       0
  5217 ;;      Totals:         7       0       0       0       0
  5218 ;;Total ram usage:        7 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    1
  5221 ;; This function calls:
  5222 ;;		_getch
  5223 ;; This function is called by:
  5224 ;;		Interrupt level 1
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _get_uart
  5230  0187                     _get_uart:	
  5231                           
  5232                           ;OBC1_main.c: 83: if(PIR1bits.RCIF == 1)
  5233  0187  1E8C               	btfss	12,5	;volatile
  5234  0188  29C3               	goto	i1l43
  5235                           
  5236                           ;OBC1_main.c: 84: {
  5237                           ;OBC1_main.c: 85: PORTDbits.RD6 = 1;
  5238  0189  1708               	bsf	8,6	;volatile
  5239                           
  5240                           ;OBC1_main.c: 86: _delay((unsigned long)((90)*(20000000/4000.0)));
  5241  018A  3003               	movlw	3
  5242  018B  00F5               	movwf	??_get_uart+2
  5243  018C  3049               	movlw	73
  5244  018D  00F4               	movwf	??_get_uart+1
  5245  018E  3067               	movlw	103
  5246  018F  00F3               	movwf	??_get_uart
  5247  0190                     u168_27:	
  5248  0190  0BF3               	decfsz	??_get_uart,f
  5249  0191  2990               	goto	u168_27
  5250  0192  0BF4               	decfsz	??_get_uart+1,f
  5251  0193  2990               	goto	u168_27
  5252  0194  0BF5               	decfsz	??_get_uart+2,f
  5253  0195  2990               	goto	u168_27
  5254  0196  0000               	nop
  5255                           
  5256                           ;OBC1_main.c: 87: PIR1bits.RCIF = 0;
  5257  0197  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0198  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0199  128C               	bcf	12,5	;volatile
  5260                           
  5261                           ;OBC1_main.c: 88: INTCONbits.GIE = 0;
  5262  019A  138B               	bcf	11,7	;volatile
  5263                           
  5264                           ;OBC1_main.c: 89: INTCONbits.PEIE = 0;
  5265  019B  130B               	bcf	11,6	;volatile
  5266                           
  5267                           ;OBC1_main.c: 90: I2CTEMP_data[uart_interrupt] = getch();
  5268  019C  120A  118A  2018  120A  118A  	fcall	_getch
  5269  01A1  00F3               	movwf	??_get_uart
  5270  01A2  087A               	movf	_uart_interrupt,w
  5271  01A3  3E7C               	addlw	(low (_I2CTEMP_data| 0))& (0+255)
  5272  01A4  0084               	movwf	4
  5273  01A5  0873               	movf	??_get_uart,w
  5274  01A6  0080               	movwf	0
  5275                           
  5276                           ;OBC1_main.c: 91: uart_interrupt++;
  5277  01A7  3001               	movlw	1
  5278  01A8  07FA               	addwf	_uart_interrupt,f
  5279  01A9  1803               	skipnc
  5280  01AA  0AFB               	incf	_uart_interrupt+1,f
  5281  01AB  3000               	movlw	0
  5282  01AC  07FB               	addwf	_uart_interrupt+1,f
  5283                           
  5284                           ;OBC1_main.c: 92: PORTDbits.RD6 = 0;
  5285  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  5286  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  5287  01AF  1308               	bcf	8,6	;volatile
  5288                           
  5289                           ;OBC1_main.c: 93: _delay((unsigned long)((90)*(20000000/4000.0)));
  5290  01B0  3003               	movlw	3
  5291  01B1  00F5               	movwf	??_get_uart+2
  5292  01B2  3049               	movlw	73
  5293  01B3  00F4               	movwf	??_get_uart+1
  5294  01B4  3067               	movlw	103
  5295  01B5  00F3               	movwf	??_get_uart
  5296  01B6                     u169_27:	
  5297  01B6  0BF3               	decfsz	??_get_uart,f
  5298  01B7  29B6               	goto	u169_27
  5299  01B8  0BF4               	decfsz	??_get_uart+1,f
  5300  01B9  29B6               	goto	u169_27
  5301  01BA  0BF5               	decfsz	??_get_uart+2,f
  5302  01BB  29B6               	goto	u169_27
  5303  01BC  0000               	nop
  5304                           
  5305                           ;OBC1_main.c: 95: PIE1bits.TXIE = 1;
  5306  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  5307  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  5308  01BF  160C               	bsf	12,4	;volatile
  5309                           
  5310                           ;OBC1_main.c: 96: PIE1bits.RCIE = 1;
  5311  01C0  168C               	bsf	12,5	;volatile
  5312                           
  5313                           ;OBC1_main.c: 97: INTCONbits.GIE = 1;
  5314  01C1  178B               	bsf	11,7	;volatile
  5315                           
  5316                           ;OBC1_main.c: 98: INTCONbits.PEIE = 1;
  5317  01C2  170B               	bsf	11,6	;volatile
  5318  01C3                     i1l43:	
  5319  01C3  0879               	movf	??_get_uart+6,w
  5320  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  5321  01C5  00FF               	movwf	127
  5322  01C6  0878               	movf	??_get_uart+5,w
  5323  01C7  008A               	movwf	10
  5324  01C8  0877               	movf	??_get_uart+4,w
  5325  01C9  0084               	movwf	4
  5326  01CA  0E76               	swapf	(??_get_uart+3)^(0+-128),w
  5327  01CB  0083               	movwf	3
  5328  01CC  0EFE               	swapf	126,f
  5329  01CD  0E7E               	swapf	126,w
  5330  01CE  0009               	retfie
  5331  01CF                     __end_of_get_uart:	
  5332                           
  5333                           	psect	intentry
  5334  0004                     __pintentry:	
  5335                           ;incstack = 0
  5336                           ; Regs used in _get_uart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5337                           
  5338  0004                     interrupt_function:	
  5339  007E                     saved_w	set	btemp
  5340  0004  00FE               	movwf	btemp
  5341  0005  0E03               	swapf	3,w
  5342  0006  00F6               	movwf	??_get_uart+3
  5343  0007  0804               	movf	4,w
  5344  0008  00F7               	movwf	??_get_uart+4
  5345  0009  080A               	movf	10,w
  5346  000A  00F8               	movwf	??_get_uart+5
  5347  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5348  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5349  000D  087F               	movf	btemp+1,w
  5350  000E  00F9               	movwf	??_get_uart+6
  5351  000F  120A  118A  2987   	ljmp	_get_uart
  5352                           
  5353                           	psect	text31
  5354  0018                     __ptext31:	
  5355 ;; *************** function _getch *****************
  5356 ;; Defined at:
  5357 ;;		line 90 in file "uart_serial.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  count           2    0[COMMON] int 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, btemp+1
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5371 ;;      Params:         0       0       0       0       0
  5372 ;;      Locals:         2       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0
  5374 ;;      Totals:         2       0       0       0       0
  5375 ;;Total ram usage:        2 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_get_uart
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function _getch
  5386  0018                     _getch:	
  5387                           
  5388                           ;uart_serial.c: 92: int count = 0;
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _getch: [wreg+status,2+btemp+1]
  5392  0018  01F1               	clrf	getch@count
  5393  0019  01F2               	clrf	getch@count+1
  5394                           
  5395                           ;uart_serial.c: 93: while(!RCIF && count <= 100)
  5396  001A  2824               	goto	i1l1349
  5397  001B                     i1l1345:	
  5398                           
  5399                           ;uart_serial.c: 94: {
  5400                           ;uart_serial.c: 95: count++;
  5401  001B  3001               	movlw	1
  5402  001C  07F1               	addwf	getch@count,f
  5403  001D  1803               	skipnc
  5404  001E  0AF2               	incf	getch@count+1,f
  5405  001F  3000               	movlw	0
  5406  0020  07F2               	addwf	getch@count+1,f
  5407                           
  5408                           ;uart_serial.c: 96: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5409  0021  2822               	nop2	;2 cycle nop
  5410  0022  2823               	nop2	;2 cycle nop
  5411  0023  0000               	nop
  5412  0024                     i1l1349:	
  5413  0024  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0025  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0026  1A8C               	btfsc	12,5	;volatile
  5416  0027  2833               	goto	i1l1353
  5417  0028  0872               	movf	getch@count+1,w
  5418  0029  3A80               	xorlw	128
  5419  002A  00FF               	movwf	127
  5420  002B  3080               	movlw	128
  5421  002C  027F               	subwf	127,w
  5422  002D  1D03               	skipz
  5423  002E  2831               	goto	u63_25
  5424  002F  3065               	movlw	101
  5425  0030  0271               	subwf	getch@count,w
  5426  0031                     u63_25:	
  5427  0031  1C03               	skipc
  5428  0032  281B               	goto	i1l1345
  5429  0033                     i1l1353:	
  5430                           
  5431                           ;uart_serial.c: 97: }
  5432                           ;uart_serial.c: 98: return RCREG;
  5433  0033  1283               	bcf	3,5	;RP0=0, select bank0
  5434  0034  1303               	bcf	3,6	;RP1=0, select bank0
  5435  0035  081A               	movf	26,w	;volatile
  5436  0036  0008               	return
  5437  0037                     __end_of_getch:	
  5438  007E                     btemp	set	126	;btemp
  5439  007E                     wtemp	set	126
  5440  007E                     wtemp0	set	126
  5441  0080                     wtemp1	set	128
  5442  0082                     wtemp2	set	130
  5443  0084                     wtemp3	set	132
  5444  0086                     wtemp4	set	134
  5445  0088                     wtemp5	set	136
  5446  007F                     wtemp6	set	127
  5447  007E                     ttemp	set	126
  5448  007E                     ttemp0	set	126
  5449  0081                     ttemp1	set	129
  5450  0084                     ttemp2	set	132
  5451  0087                     ttemp3	set	135
  5452  007F                     ttemp4	set	127
  5453  007E                     ltemp	set	126
  5454  007E                     ltemp0	set	126
  5455  0082                     ltemp1	set	130
  5456  0086                     ltemp2	set	134
  5457  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      13
    BANK0            80     55      69
    BANK1            80      0      32
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK1[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK1[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(COMMON[2]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(COMMON[2]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(BANK0[3]), 

    double_data_set@p_data	PTR  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(COMMON[2]), 

    uint16_data_set@p_data	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(COMMON[2]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(COMMON[2]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), I2CTEMP_data(COMMON[2]), 

    MCLR_init@nin	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(BANK0[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _get_uart in COMMON

    _get_uart->_getch

Critical Paths under _main in BANK0

    _main->_command
    _command->___ftdiv
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set
    ___ftdiv->___altoft
    ___altoft->___ftpack
    _LED_data_set->_sent_data_set
    _sent_data_set->_double_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array

Critical Paths under _get_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _get_uart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _get_uart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _get_uart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   18927
                                             44 BANK0     11    11      0
                          _MCLR_init
                           ___altoft
                            ___ftdiv
                        _ad_con_init
                            _command
                   _spi_master_start
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _command                                             12    12      0   14098
                                             32 BANK0     12    12      0
                   _I2Ctemp_data_set
                       _LED_data_set
                           ___altoft
                            ___ftdiv
                             ___ftge
                        _cw_data_set
                        _get_cw_data
                              _putch
                   _send_data_master
                      _sent_data_set
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _send_data_master                                     4     2      2    1932
                                             15 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (3) _packet_send_master                                   3     2      1    1654
                                             12 BANK0      3     2      1
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (4) _send_payload                                         6     5      1     856
                                              6 BANK0      6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      6     5      1     591
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_cw_data                                          3     3      0     426
                                             13 BANK0      3     3      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _spi_master_receive                                   5     5      0      91
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           10     8      2     290
                                              6 BANK0      7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (4) _bit_shift                                            6     5      1     190
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _cw_data_set                                          3     3      0     947
                                              4 BANK0      2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     242
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2863
                                             16 BANK0     16    10      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    1873
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _LED_data_set                                         0     0      0    2544
                      _sent_data_set
 ---------------------------------------------------------------------------------
 (2) _sent_data_set                                        9     5      4    2544
                                             20 BANK0      9     5      4
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _uint16_data_set                                      8     5      3     487
                                              6 BANK0      8     5      3
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _uint16_to_byte_array                                 6     3      3     216
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (3) _double_data_set                                     10     7      3     555
                                             10 BANK0     10     7      3
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _double_to_byte_array                                10     7      3     286
                                              0 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2Ctemp_data_set                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCLR_init                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _get_uart                                             7     7      0      15
                                              2 COMMON     7     7      0
                              _getch
 ---------------------------------------------------------------------------------
 (7) _getch                                                2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCLR_init
   ___altoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   _ad_con_init
   _command
     _I2Ctemp_data_set
     _LED_data_set
       _sent_data_set
         ___wmul
         _double_data_set
           _double_to_byte_array
         _uint16_data_set
           _uint16_to_byte_array
         _uint8_data_set
     ___altoft
       ___ftpack
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     _cw_data_set
       _uint8_data_set
     _get_cw_data
       _get_adcon
         _bit_shift
       _spi_master_receive
       _spi_master_start
     _putch
     _send_data_master
       _packet_send_master
         _send_payload
           _spi_master_send
         _spi_master_send
     _sent_data_set
       ___wmul
       _double_data_set
         _double_to_byte_array
       _uint16_data_set
         _uint16_to_byte_array
       _uint8_data_set
     _spi_master_send
   _spi_master_start
   _sysprot_init
   _uart_init

 _get_uart (ROOT)
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      9       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      72       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      72      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Mar 15 15:29:25 2016

                        ___altoft@exp 002E                                     pc 0002  
                         __CFG_CP$OFF 0000                           _SSPSTATbits 0094  
                       ___altoft@sign 002F                                    l78 0F8B  
              ??_uint16_to_byte_array 0023                                    _cw 0058  
                                  fsr 0004                   ___wmul@multiplicand 0022  
                __size_of_ad_con_init 000B                                   l103 0223  
                                 l112 0232                                   l121 0254  
                                 l114 0234                                   l123 0256  
                                 l108 0226                                   l133 0272  
                                 l128 026F                                   l137 027E  
                                 l242 0374                                   l146 02A1  
                                 l402 0708                                   l139 0280  
                                 l148 02A3                                   l405 07E8  
                                 l185 0EE2                                   l274 00CF  
                                 l266 010A                                   l398 069F  
                                 l495 0F6D                                   l663 03C2  
                                 l664 03CA                                   l656 03AD  
                        __CFG_CPD$OFF 0000                                   u915 00A9  
                                 u925 00BE                  uint8_data_set@p_data 0020  
                                 fsr0 0004                                   indf 0000  
         send_data_master@destination 0032                ??_double_to_byte_array 0023  
                        __CFG_FOSC$HS 0000                           command@data 0044  
                         command@temp 0045                          __CFG_LVP$OFF 0000  
                        ___ftdiv@cntr 003A                          ___ftdiv@sign 003F  
                                l2011 06DB                                  l2023 06E6  
                                l2131 0640                                  l2053 07DB  
                                l2117 05EA                                  l2039 077C  
                                l1601 0275                                  l2049 07D7  
                                l1621 02AE                                  l1605 0282  
                                l1615 028C                                  l1607 028A  
                                l1705 0107                                  l1801 0359  
                                l1619 02A5                                  l1731 0212  
                                l1661 0FA8                                  l1805 0367  
                                l1821 0397                                  l1813 037F  
                                l1709 01D9                                  l1735 0F65  
                                l1911 015B                                  l1727 01F5  
                                l1817 0386                                  l1913 016D  
                                l1729 01D3                                  l1683 0142  
                                l1675 012B                                  l1827 03B2  
                                l1819 0392                                  l1923 050E  
                                l1829 03BC                                  l1773 0236  
                                l1951 0588                                  l1943 0569  
                                l1783 023F                                  l1775 023E  
                                l1697 00F0                                  l1929 0524  
                                l1769 0229                                  l1963 02DC  
                                l1787 0258                                  l1797 033F  
                                l1789 0261                                  l1799 034B  
                                l1967 0303                                  l1999 067B  
                                u1045 0F6E                                  u1055 0F75  
                                u1401 02F6                                  u1402 02F7  
                                u1235 03D1                                  u1155 038B  
                                u1315 0536                                  u1403 02FC  
                                u1404 02FD                                  u1500 062D  
                                u1325 0548                                  u1501 062E  
                                u1502 0633                                  u1175 03A6  
                                u1335 056A                                  u1503 0634  
                                u1440 0769                                  u1345 057B  
                                u1441 076A                                  u1442 076F  
                                u1195 03B5                                  u1275 0160  
                                u1355 0589                                  u1443 0770  
                                u1381 02CF                                  u1382 02D0  
                                u1383 02D5                                  u1607 06A6  
                                u1384 02D6                                  u1617 06B6  
                                u1627 06F2                                  u1637 0700  
                                u1647 0714                                  u1657 0724  
                                u1577 05E3                                  u1667 07C0  
                                u1587 05F3                                  u1677 07D0  
                                u1597 066F                                  i1l43 01C3  
                                _RCIF 0065                                  _TXIF 0064  
                        __CFG_WRT$OFF 0000                                  _main 05AE  
                        ___ftpack@arg 0020                      ??_uint8_data_set 0023  
                        ___ftpack@exp 0023                                  btemp 007E  
                       __CFG_BOREN$ON 0000                                  ltemp 007E  
                __end_of_sysprot_init 0EDF                                  start 0012  
                                ttemp 007E                                  wtemp 007E  
                  __size_of_MCLR_init 0014         spi_master_receive@destination 0024  
                   ??_double_data_set 002D                                 ?_main 0071  
                       __CFG_WDTE$OFF 0000                       __end_of___ftdiv 05AE  
              uint8_data_set@data_len 0022                                 _RCREG 001A  
                               _RCSTA 0018                                 _SPBRG 0099  
                               u63_25 0031                                 _TXREG 0019  
                               _TXSTA 0098                         __CFG_PWRTE$ON 0000  
                     __end_of_command 07E9                                 _getch 0018  
    double_to_byte_array@p_data_array 0022                         ___ftpack@sign 0024  
            __end_of_send_data_master 0F44                                 _putch 0EDF  
                               main@t 0053                         ?_LED_data_set 0071  
                    ?_uint16_data_set 0026                                 pclath 000A  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               ttemp4 007F                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F                      bit_shift@p_adres 0020  
         __size_of_spi_master_receive 004C                       __initialization 07E9  
               uint16_data_set@p_data 0026                          __end_of_main 0677  
                              ??_main 004C                        get_cw_data@buf 002E  
    uint16_to_byte_array@p_data_array 0022                     __end_of_MCLR_init 0F28  
                              ?_getch 0071                                _ADCON0 001F  
                              _ADCON1 009F                      __end_of___altoft 0187  
                      ??_LED_data_set 003D                                _ADRESH 001E  
                              _ADRESL 009E                                ?_putch 0071  
                    __end_of___ftpack 03E3        spi_master_send@timeout_counter 0023  
                              i1l1353 0033                                i1l1345 001B  
                              i1l1349 0024                                u168_27 0190  
                              u169_27 01B6                                _SSPBUF 0013  
          __end_of_packet_send_master 0096                  __size_of_get_cw_data 0087  
                    __end_of_get_uart 01CF                                ___ftge 02B3  
                __size_of_cw_data_set 008C                                ___wmul 0F61  
                           ??___ftdiv 0036              __end_of_I2Ctemp_data_set 0018  
               double_data_set@p_data 002A                                _packet 00A0  
                           ??_command 0040                                saved_w 007E  
           __size_of_spi_master_start 001D                 __size_of_sysprot_init 0005  
             __end_of__initialization 07FC                            ___altoft@c 0028  
               send_payload@index_pos 002A                            ___ftge@ff1 0020  
                          ___ftge@ff2 0023                            ___ftdiv@f1 0033  
                          ___ftdiv@f2 0030                            ___ftdiv@f3 003B  
               send_payload@p_payload 0026                        __pcstackCOMMON 0071  
               __end_of_sent_data_set 0375                         __end_of_getch 0037  
                 spi_master_send@data 0020                         __end_of_putch 0EE7  
                  __size_of_bit_shift 0039                          _sysprot_init 0EDA  
                  __size_of_get_adcon 0024                               ??_getch 0071  
                             ??_putch 0020                          MCLR_init@nin 0020  
                          __pbssBANK0 0057                            __pbssBANK1 00A0  
          uint16_to_byte_array@p_data 0020              __size_of_spi_master_send 0050  
   spi_master_receive@timeout_counter 0022                       _double_data_set 00CF  
                          __pmaintext 05AE                               ?___ftge 0020  
                             ?___wmul 0020                         ??_ad_con_init 0020  
                          __pintentry 0004                  __end_of_LED_data_set 0F14  
                           ?___altoft 0028                             ?___ftpack 0020  
                       ?_send_payload 0026         __size_of_uint16_to_byte_array 002F  
                  __size_of_uart_init 000C         __size_of_double_to_byte_array 002D  
                           ?_get_uart 0071               bit_shift@bit_mask_for_l 0808  
                          __stringtab 0800                     ?_send_data_master 002F  
                  ??_send_data_master 0031                    uint16_data_set@buf 002A  
                   __end_of_bit_shift 00CF                     __end_of_get_adcon 0FA8  
                     __size_of___ftge 005F                               ___ftdiv 04F6  
                     __size_of___wmul 0023               spi_master_receive@dummy 0021  
                          ??___altoft 002C                        ??_send_payload 0027  
                          ??___ftpack 0025                               __ptext1 0EFA  
                             __ptext2 0EDA                               __ptext3 0677  
                             __ptext4 0F28                               __ptext5 0066  
                             __ptext6 01CF                               __ptext7 0263  
                             __ptext8 0EDF                               __ptext9 03E3  
                             _command 0677                   __end_of_ad_con_init 0EFA  
                cw_data_set@p_cw_data 0025                      _spi_master_start 0F44  
                             clrloop0 0EE8                            ??_get_uart 0073  
                end_of_initialization 07FC               __end_of_double_data_set 010A  
                           _MCLR_init 0F14            __end_of_spi_master_receive 0263  
           sent_data_set@byte_of_data 0037                     __end_of_uart_init 0F06  
            __size_of_uint16_data_set 003B                     ??_spi_master_send 0021  
                    double_data_set@i 0033               __size_of_uint8_data_set 002B  
                   ?_I2Ctemp_data_set 0071                             _PORTAbits 0005  
                  _packet_send_master 0066                             _PORTCbits 0007  
                           _PORTDbits 0008                    ??_I2Ctemp_data_set 0020  
               double_to_byte_array@i 0029                            getch@count 0071  
                           _TRISAbits 0085                             _TRISCbits 0087  
                           _TRISDbits 0088                             _TRISEbits 0089  
                 ?_packet_send_master 002C                            ?_MCLR_init 0071  
                         ___ftdiv@exp 003E                         ??_get_cw_data 002D  
                       ??_cw_data_set 0024                 __size_of_LED_data_set 000E  
             uint16_data_set@data_len 0028                 sent_data_set@data_len 0036  
                ??_packet_send_master 002D                        __end_of___ftge 0312  
                         _ad_con_init 0EEF                        __end_of___wmul 0F84  
                       send_payload@i 0029            spi_master_send@destination 0025  
                spi_master_send@dummy 0022                   start_initialization 07E9  
                        _LED_data_set 0F06                      ?_double_data_set 002A  
                __end_of_send_payload 0217       __end_ofbit_shift@bit_mask_for_l 0809  
                    uint16_data_set@i 002D                              ??___ftge 0026  
                            ??___wmul 0024                  send_payload@data_len 0028  
                 __end_of_get_cw_data 046A                   __end_of_cw_data_set 04F6  
                   ??_uint16_data_set 0029         double_to_byte_array@converter 0025  
                   __size_of___altoft 0042                     __size_of___ftpack 006E  
                         __pbssCOMMON 007A                             ___latbits 0002  
                       __pcstackBANK0 0020                   sent_data_set@p_data 0034  
              __size_of_sent_data_set 0063                           ??_MCLR_init 0020  
        __end_of_uint16_to_byte_array 0066                     __size_of_get_uart 0048  
        __end_of_double_to_byte_array 1000                             _bit_shift 0096  
            __end_of_spi_master_start 0F61                              ?___ftdiv 0030  
                      _uint8_data_set 0FA8             __size_of_send_data_master 001C  
                           _get_adcon 0F84            double_to_byte_array@p_data 0020  
                      _uart_interrupt 007A                             __pstrings 0800  
                            ?_command 0071             send_data_master@data_type 002F  
                           _index_pos 0057                        __size_of_getch 001F  
                      __size_of_putch 0008                     interrupt_function 0004  
                     _spi_master_send 0263                        ___wmul@product 0024  
                           clear_ram0 0EE7                              _PIE1bits 008C  
                         _get_cw_data 03E3                           _cw_data_set 046A  
                            _PIR1bits 000C                __end_of_uint8_data_set 0FD3  
                          ?_bit_shift 0020                             _uart_init 0EFA  
                       _sent_data_set 0312                            ?_get_adcon 0026  
                  _spi_master_receive 0217                            _ADCON0bits 001F  
                         __stringbase 0805                     ___wmul@multiplier 0020  
                 ?_spi_master_receive 0071                 __size_of_send_payload 0048  
           __size_of_I2Ctemp_data_set 0001                  ??_spi_master_receive 0020  
                     ?_uint8_data_set 0020                            ?_uart_init 0071  
                      ?_sent_data_set 0034                          ?_ad_con_init 0071  
                    __size_of___ftdiv 00B8                              ___altoft 0145  
                            ___ftpack 0375                    __end_of__stringtab 0806  
                        _send_payload 01CF                  _uint16_to_byte_array 0037  
                    __size_of_command 0172                         ?_sysprot_init 0071  
             double_data_set@data_len 002C               __end_of_spi_master_send 02B3  
                            __ptext10 0F44                              __ptext11 0217  
                            __ptext20 0312                              __ptext12 0F84  
                            __ptext21 0FA8                              __ptext13 0096  
                            __ptext30 0187                              __ptext22 010A  
                            __ptext14 046A                              __ptext31 0018  
                            __ptext23 0037                              __ptext15 02B3  
                            __ptext24 00CF                              __ptext16 04F6  
                            __ptext25 0FD3                              __ptext17 0145  
                            __ptext26 0F61                              __ptext18 0375  
                            __ptext27 0017                              __ptext19 0F06  
                            __ptext28 0EEF                              __ptext29 0F14  
                _double_to_byte_array 0FD3  __end_ofuint16_to_byte_array@bit_mask 0808  
        uint16_to_byte_array@bit_mask 0806                              _get_uart 0187  
                       __size_of_main 00C9                       _uint16_data_set 010A  
          packet_send_master@p_packet 002C           __size_of_packet_send_master 0030  
                         ??_bit_shift 0021                      _send_data_master 0F28  
                         ??_get_adcon 0028                              command@t 0048  
                            main@temp 0050                 ?_uint16_to_byte_array 0020  
                      ??_sysprot_init 0020                             putch@byte 0020  
                          _INTCONbits 000B                    double_data_set@buf 002E  
               ?_double_to_byte_array 0020                              intlevel1 0000  
                   get_adcon@ad_value 002B                             stringcode 0800  
            __size_of_double_data_set 003B                       ??_sent_data_set 0038  
                         ??_uart_init 0020               send_payload@destination 002B  
                   ?_spi_master_start 0071                    ??_spi_master_start 0020  
                   get_adcon@my_adres 0029                              stringdir 0800  
                            stringtab 0800                      ?_spi_master_send 0020  
                    _I2Ctemp_data_set 0017               __end_of_uint16_data_set 0145  
    send_data_master@data_end_command 0030                            _SSPCONbits 0014  
                        ?_get_cw_data 0071                          _I2CTEMP_data 007C  
                        ?_cw_data_set 0071         packet_send_master@destination 002E  
                 bit_shift@p_ad_value 0025  
